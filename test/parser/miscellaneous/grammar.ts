import { Context } from '../../../src/common';
import { fail } from '../../test-utils';
import * as t from 'assert';
import { parseSource } from '../../../src/cherow';

// Cover grammar tests
//
// Covers:
//
// - Destructuring
// - Assignment
// - Binding
// - Parenthesized pattern
// - Invalid syntax

describe('Miscellaneous - Grammar', () => {
  for (const arg of [
    '{ x : ++y }',
    '{ x : y * 2 }',
    '{ get x() {} }',
    '{ set x() {} }',
    '{ x: y() }',
    '{ this }',
    '{ x: this }',
    '{ x: this = 1 }',
    '{ super }',
    '{ x: super }',
    '{ x: super = 1 }',
    '{ new.target }',
    '{ x: new.target }',
    '{ import.meta }',
    '{ x: import.meta }',
    '{ x: import.meta = 1 }',
    '[x--]',
    '[--x = 1]',
    '[x()]',
    '[this]',
    '[this = 1]',
    '[new.target]',
    '[new.target = 1]',
    '[import.meta]',
    '[import.meta = 1]',
    '[super]',
    '[super = 1]',
    '[function f() {}]',
    '[async function f() {}]',
    '[function* f() {}]',
    '[50]',
    '[(50)]',
    '[(function() {})]',
    '[(async function() {})]',
    '[(function*() {})]',
    '[(foo())]',
    '{ x: 50 }',
    '{ x: (50) }',
    "['str']",
    "{ x: 'str' }",
    "{ x: ('str') }",
    '{ x: (foo()) }',
    '{ x: function() {} }',
    '{ x: async function() {} }',
    '{ x: function*() {} }',
    '{ x: (function() {}) }',
    '{ x: (async function() {}) }',
    '{ x: (function*() {}) }',
    "{ x: y } = 'str'",
    "[x, y] = 'str'",
    '[(x,y) => z]',
    '[async(x,y) => z]',
    '{x: (y) => z}',
    '{x: (y,w) => z}',
    '{x: async (y) => z}',
    '{x: async (y,w) => z}',
    '[x, ...y, z]',
    '[...x,]',
    '[...++x]',
    '[...x--]',
    '[...!x]',
    '[...x + y]',
    '({ x: x4, x: (x+=1e4) })',
    '(({ x: x4, x: (x+=1e4) }))',
    '({ x: x4, x: (x+=1e4) } = {})',
    '(({ x: x4, x: (x+=1e4) } = {}))',
    '(({ x: x4, x: (x+=1e4) }) = {})',
    '({ x: y } = {})',
    '(({ x: y } = {}))',
    '(({ x: y }) = {})',
    '([a])',
    '(([a]))',
    '([a] = [])',
    '(([a] = []))',
    '(([a]) = [])',
    '{ x: ([y]) }',
    '{ x: ([y] = []) }',
    '{ x: ({y}) }',
    '{ x: ({y} = {}) }',
    '{ x: (++y) }',
    '[ (...[a]) ]',
    '[ ...([a]) ]',
    '[ ...([a] = [])',
    '[ ...[ ( [ a ] ) ] ]',
    '[ ([a]) ]',
    '[ (...[a]) ]',
    '[ ([a] = []) ]',
    '[ (++y) ]',
    '[ ...(++y) ]',
    '[ x += x ]',
    '{ foo: x += x }',
    '([{}] = []);',
    'function f({}){}; f();',
    'function f({}){}; f(null);',
    '{} = null  ',
    'c = 10; ({c} = {c:11});',
    '({x :  } = {})',
    '({x :  , } = {};)',
    '( {x :  , y} = {};)',
    '({foo() {}} = {});',
    '({get foo() {}} = {});',
    '({set foo(a) {}} = {});',
    "({get ['foo']() {}} = {});",
    "({set ['foo'](a) {}} = {});",
    '({e: a.b}) => 0',
    'function a({e: a.b}) {}',
    'function* a({e: a.b}) {}',
    '(function ({e: a.b}) {})',
    '(function* ({e: a.b}) {})',
    '(function* ([a.b]) {})',
    '({a([a.b]){}})',
    '({*a([a.b]){}})',
    '({set a([a.b]){}})',
    '([a.b]) => 0',
    '({a({e: a.b}){}})',
    '({*a({e: a.b}){}})',
    '({set a({e: a.b}){}})',
    '({a:for} = 0)',
    '({a = 0});',
    '({a} += 0);',
    '({a,,} = 0)',
    '({,a,} = 0)',
    '({a,,a} = 0)',
    '({function} = 0)',
    '({a:function} = 0)',
    '({a:for} = 0)',
    "({'a'} = 0)",
    '({var} = 0)',
    '({a.b} = 0)',
    '{a = [...b, c]} = 0'
  ]) {
    it(`let x, y, z; (${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`let x, y, z; (${arg}= {});`, undefined, Context.OptionsNext);
      });
    });

    it(`var x, y, z; (${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`var x, y, z; (${arg}= {});`, undefined, Context.OptionsNext);
      });
    });

    it(`'use strict'; let x, y, z; for (x in ${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`'use strict'; let x, y, z; for (x in ${arg}= {});`, undefined, Context.OptionsNext);
      });
    });

    it(`'use strict'; let x, y, z; for (x of ${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`'use strict'; let x, y, z; for (x of ${arg}= {});`, undefined, Context.OptionsNext);
      });
    });

    it(`var x, y, z; for (x in ${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`var x, y, z; for (x in ${arg}= {});`, undefined, Context.OptionsNext);
      });
    });

    it(`var x, y, z; for (x of ${arg}= {});`, () => {
      t.throws(() => {
        parseSource(`var x, y, z; for (x of ${arg}= {});`, undefined, Context.OptionsNext);
      });
    });
  }

  for (const arg of ['a++', '++a', 'delete a', 'void a', 'typeof a', '--a', '+a']) {
    it(`"use strict"; let ${arg} = {};`, () => {
      t.throws(() => {
        parseSource(`"use strict"; const ${arg} = {};`, undefined, Context.Empty);
      });
    });

    it(`"use strict"; const ${arg} = {};`, () => {
      t.throws(() => {
        parseSource(`"use strict"; const ${arg} = {};`, undefined, Context.Empty);
      });
    });

    it(`try {} catch(${arg}) {}`, () => {
      t.throws(() => {
        parseSource(`try {} catch(${arg}) {}`, undefined, Context.Empty);
      });
    });
  }

  fail('Declarations - Var (fail)', [
    ['for (let x = {} in null);', Context.Empty],
    ['var foo; foo = { q } = { x = 10 };', Context.Empty],
    ['var q, x; ({ q } = { x = 10 });', Context.Empty],
    ['var q, x; (q, { x = 10 });', Context.Empty],
    ['var x; (({ x = 10 } = { x = 20 }) => x)({})', Context.Empty],
    ['({ a, b }) = {a: 1, b: 2}', Context.Empty],
    ['({get a(){}})=0', Context.Empty],
    ['({a:this}=0)', Context.Empty],
    ['({a = 0});', Context.Empty],
    ['({ async}) = 0', Context.Empty],
    ['({a({e: a.b}){}})', Context.Empty],
    ['({set a({e: a.b}){}})', Context.Empty],
    ['({a([a.b]){}})', Context.Empty],
    ['for (var x, {y} of obj);', Context.Empty],
    ['({*a([a.b]){}})', Context.Empty],
    ['({set a([a.b]){}})', Context.Empty],
    ['(x=1)=y', Context.Empty],
    ['({a}) = 0', Context.Empty],
    ['([a.b]) => 0', Context.Empty],
    ['function foo() {for (let {x} = {} of []) {}; }; foo();', Context.Empty],
    ['({set a([a.b]){}})', Context.Empty],
    ['({a([a.b]){}})', Context.Empty],
    ['({*a([a.b]){}})', Context.Empty],
    ['function a([a.b]) {}', Context.Empty],
    ['(function ([a.b]) {})', Context.Empty],
    ['function a({e: a.b}) {}', Context.Empty],
    ['function* a({e: a.b}) {}', Context.Empty],
    ['(function ({e: a.b}) {})', Context.Empty],
    ['(function* ({e: a.b}) {})', Context.Empty],
    ['(function* ([a.b]) {})', Context.Empty],
    ['{a, b} = {a: 1, b: 2}', Context.Empty],
    ['({a, b}) = {a: 1, b:2}', Context.Empty],
    ['({a, b}) = {a: 1, b:2}', Context.Empty],
    ['([b]) = b;', Context.Empty],
    ['([{constructor(){}}] = b);', Context.Empty],
    ['[...a, ] = b', Context.Empty],
    ['({ obj:20 }) = 42', Context.Empty],
    ['(x=1)=2', Context.Empty],
    ['(a = b) = {};', Context.Empty],
    ['({a}) = {}', Context.Empty],
    ['[++a] = [];', Context.Empty],
    ['[a + 1] = [];', Context.Empty],
    ['([a + 1] = []);', Context.Empty],
    ['({a: [a + 1] = []});', Context.Empty],
    ['[1, a] = [];', Context.Empty],
    ['([1, a] = []);', Context.Empty],
    ['[1, a] = [];', Context.Empty],
    ['[...a, ...b] = [];', Context.Empty],
    [' [...a, b] = [];', Context.Empty],
    [' [...a = 1] = [];', Context.Empty],
    ['[((a)] = [];', Context.Empty],
    ['[a)] = [];', Context.Empty],
    ['[...c = 1] = []', Context.Empty],
    ['[...c, d] = []', Context.Empty],
    ['[a, ...(b = c)] = 0', Context.Empty],
    ['({a}) = 0;', Context.Empty],
    ['({a}) = 0;', Context.Empty],
    ['(a, (b)) => 42', Context.Empty],
    ['var ([x]) = 0', Context.Empty],
    ['function a([a.b]) {}', Context.Empty],
    ['function* a({e: a.b}) {}', Context.Empty],
    ['(function* ({e: a.b}) {})', Context.Empty],
    ['[a, ...b, {c=0}]', Context.Empty],
    ['[{a=0},...0]', Context.Empty],
    ['var +a = {};', Context.Empty],
    ['var { x : y++ } = {};', Context.Empty],
    ['let [a++] = {};', Context.Empty],
    ['var a - a = {};', Context.Empty],
    ['var this = {};', Context.Empty],
    ['var {+2 : x} = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [...rest,] = {};', Context.Empty],
    ['var [a,b,...rest,] = {};', Context.Empty],
    ['var ...(x => y) = {};', Context.Empty],
    ['var f = ( a++ ) => {};', Context.Empty],
    ['var f = ( a++ ) => {};', Context.Empty],
    ['var f = (this ) => {};', Context.Empty],
    ['var f = ( class {} ) => {};', Context.Empty],
    ['var f = ( {+2 : x} ) => {};', Context.Empty],
    ['var f = ( [a,b,...rest,] ) => {};', Context.Empty],
    ['var f = ([...z = 1] ) => {};', Context.Empty],
    ['var f = ( [a,,..rest,...rest1] ) => {};', Context.Empty],
    ['var f = ( ...typeof a ) => {};', Context.Empty],
    ['var f = ( { ,, ...x } ) => {};', Context.Empty],
    ['var f = ( { ...get a() {} } ) => {};', Context.Empty],
    ['var f = ( async function* a() {} ) => {};', Context.Empty],
    ['try {} catch(((x, z) => y)) {}', Context.Empty],
    ['try {} catch(a <<< a) {}', Context.Empty],
    ['try {} catch(function* a() {}) {}', Context.Empty],
    ['try {} catch(this) {}', Context.Empty],
    ['var f = (argument1, (async x => y)) => {};', Context.Empty],
    ['var f = (argument1, (async (x, z) => y)) => {};', Context.Empty],
    ['var f = (argument1, {x : {y : var}}) => {};', Context.Empty],
    ['function f( [x, y, ...[z] = [1]] ) {}', Context.Empty],
    ['function f( { get a() {} } ) {}', Context.Empty],
    ['function f({ ...x, ...y } ) {}', Context.Empty],
    ['function f( { y, ...x, y } ) {}', Context.Empty],
    ['function f( {[1+1]} ) {}', Context.Empty],
    ['function f( {x : x = (a+)} ) {}', Context.Empty],
    ['function f( argument1, this ) {}', Context.Empty],
    ['a = {..., ...b}', Context.Empty],
    ['[...a, ...b, ...c] = [...a, ...b, ...c]', Context.Empty],
    ['{...a, ...b, ...c} = {...a, ...b, ...c}', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty],
    ['var [var] = {};', Context.Empty]
  ]);

  for (const arg of [
    '[x, y, ...z = 1]',
    '[...z = 1]',
    '[x, y, ...[z] = [1]]',
    '[...[z] = [1]]',
    '(a.b) = 0',
    'a0({});',
    '(a) = 0',
    '(a) = 2;',
    '({ a: 1 }).a === 1',
    '({ responseText: text } = res)',
    '(({a = {b} = {b: 42}}) => a.b)({})',
    ' [{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]] = {};',
    '([{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]] = {});',
    '([{x:x, y:y}, [a,b,c]])',
    '({ x : [ y[z] = 10 ] = {} })',
    '({ x : [ y = 10 ] = {} })',
    '({ x : [ foo().y = 10 ] = {} })',
    '({ x : [ foo()[y] = 10 ] = {} })',
    '({ x : [ y.z = 10 ] = {} })',
    '({ x : [ y[z] = 10 ] = {} })',
    '({ z : { __proto__: x, __proto__: y } = z })',
    '({ x : [ y[z] = 10 ] = {} })',
    '([ x ])',
    '([ foo().x ])',
    '([ foo()[x] ])',
    '([ x.y ])',
    '([ x[y] ])',
    '([ { x } ])',
    '([ { x : y } ])',
    '([ { x : foo().y } ])',
    '([ { x : foo()[y] } ])',
    '([ { x : x.y } ])',
    '([ { x : x[y] } ])',
    '[ { x = 10 } = {} ]',
    '[ { x : y = 10 } = {} ]',
    '[ { x : foo().y = 10 } = {} ]',
    '[ { x : foo()[y] = 10 } = {} ]',
    '[ { x : x.y = 10 } = {} ]',
    '[ { x : x[y] = 10 } = {} ]',
    '[ [ x = 10 ] = {} ]',
    '[ [ foo().x = 10 ] = {} ]',
    '[ [ foo()[x] = 10 ] = {} ]',
    '([ { x = 10 } = {} ])',
    '([ { x : y = 10 } = {} ])',
    '([ { x : foo().y = 10 } = {} ])',
    '([ { x : foo()[y] = 10 } = {} ])',
    '([ { x : x.y = 10 } = {} ])',
    '([ { x : x[y] = 10 } = {} ])',
    '([ [ x = 10 ] = {} ])',
    '([ [ foo().x = 10 ] = {} ])',
    '([ [ foo()[x] = 10 ] = {} ])',
    '({42 : x = 42})',
    '({[1+1] : z})',
    '({[foo()] : z})',
    '({ x : x, y : y })',
    '({x})',
    '({ x : y, ...z })',
    '({ x : y = 1, ...z })',
    '({...x})',
    '({x, ...y})',
    '({[x] : z, ...y})',
    //    '({ __proto__: x, __proto__: y, ...z})',
    '([{x:x, y:y}, [a,b,c]])',
    '([{x:x, y:y}, [a,b,c]])',
    '([{x:x, y:y, ...z}, [a,b,c]] = {})',
    '({x, ...y} = {})',
    '({[x] : z, ...y} = {})',
    '({[1+1] : z, ...x} = {})',
    'function fne({x: {} = 42}) {}',
    'function fnf({x: {y} = 42}) {}',
    'function fn2({a: {p: q, }, }) {}',
    'function fn1({x,}) {}',
    'function fn3({x,}) {}',
    'function fna({x}) {}',
    'function fnb({x, y}) {}',
    'function fnc({x = 42}) {}',
    'function fnd({x, y = 42}) {}',
    'function fn1({a: {p: q}, b: {r}, c: {s = 0}, d: {}}) {}',
    'function fn2(x, {a: r, b: s, c: t}, y) {}',
    'function fn3({x: {y: {z: {} = 42}}}) {}',
    'function fn4([], [[]], [[[[[[[[[x]]]]]]]]]) {}',
    'function fn2([{a: [{}]}]) {}',
    'function fn3({a: [,,,] = 42}) {}',
    'function fn4([[x, y, ...z]]) {}',
    '({x} = {}, {y} = {})',
    '[{a=b}=0]',
    '[{a=0}, ...b] = 0',
    '[a = 0, ...{b = 0}] = 0',
    '[[x]] = 0',
    '[x.a=a] = 0',
    '[x[a]=a] = 0',
    '(function([ x = y = 1 ]) {}([]));',
    '[{a=0},{a=0}] = 0',
    '[] = 0',
    '[...[...a[x]]] = 1',
    'function f7({a: x}) { x = 2; return arguments[0].a }',
    '(function({x}, {y} = {}, {z}, {v} = {}, ...a) {})',
    '(function(x, {y} = {}, {z}, {v} = {}) {})',
    '(function({x}, {y} = {}, {z}, ...a) {})',
    '(function(x, {y}, {z} = {}) {})',
    'function f1({a = x}, x) { return a }',
    'function f5({a = () => x}, x) { return a() }',
    'function f11({a = b}, {b}) { return a }',
    'function f15({a = () => b}, {b}) { return a() }',
    'function f30({x = a}, ...a) { return x[0] }',
    'function f34({x = function() { return a }}, ...a) { return x()[0] }',
    'function f35({x = () => a}, ...a) { return x()[0] }',
    `({
      a,
      a:a,
      a:a=a,
      [a]:{a},
      a:some_call()[a],
      a:this.a
  } = 0);`,
    '([((x, y) => z).x])',
    '({x: ((y, z) => z).x})',
    "([((x, y) => z)['x']])",
    "({x: ((y, z) => z)['x']})",
    '([(({ x } = { x: 1 }) => x).a])',
    '({ ...d.x })',
    '({ ...c[0]})',
    '({ x: (y) })',
    '({ x: (y) = [] })',
    '({ x: (foo.bar) })',
    '() => 42',
    'x => x',
    'x => x * x',
    '(x) => x',
    '(x) => x * x',
    '(x, y) => x + y',
    '(x, y, z) => x, y, z',
    '(x, y) => x.a = y',
    "() => ({'value': 42})",
    'a, b => 0',
    'a, b, (c, d) => 0',
    '(a, b, (c, d) => 0)',
    '(a, b) => 0, (c, d) => 1',
    '(a, b => {}, a => a + 1)',
    '((a, b) => {}, (a => a + 1))',
    '(a, (a, (b, c) => 0))',
    '([a = 1])',
    '({42e-2 : x})',
    '({42e-2 : x = 42})',
    '({}) => {}',
    '(a, {}) => {}',
    '({}, a) => {}',
    '([]) => {}',
    '(a, []) => {}',
    '([], a) => {}',
    '(a = b) => {}',
    '(a = b, c) => {}',
    '(a, b = c) => {}',
    '({a}) => {}',
    '(x = 9) => {}',
    '(x, y = 9) => {}',
    '(x = 9, y) => {}',
    '(x, y = 9, z) => {}',
    '(x, y = 9, z = 8) => {}',
    '({a} = {}) => {}',
    '([x] = []) => {}',
    '({a = 42}) => {}',
    '([x = 0]) => {}',
    '(x, y = 9, {b}, z = 8, ...a) => {}',
    '(...a) => {}',
    '(x, ...a) => {}',
    '(x = 9, ...a) => {}',
    '(x, y = 9, ...a) => {}',
    '[a] = {};',
    '[a] = {};',
    '[(async function() {})]',
    '[(function*() {})]',
    '[(foo())]',
    '[[[] = [function () { }] ] = []]',
    'a = ({x = 1}) => x;',
    'a = (b, {x = 1}) => x',
    'a = ({x = 1}, b) => x',
    'function foo({arguments}) { arguments; }; foo({arguments:1});',
    //    'function () { [this.x] = []; }',
    //    'function () { ({x:this.x} = {}); }',
    '[...((a))] = [1, 2, 3]',
    '({ tyssjh = ((cspagh = 4) => a) } = 1) => { /*jjj*/ }; (function(a) { })()',
    'function foo([arguments]) { arguments; }; foo([1]);',
    'function foo() { function bar([a]) { a = 1; } }',
    'function foo(y, [x]) {}',
    'function foo(y, {x:x}) {}',
    'function foo({x:x}) {}',
    'function foo([x]) {}',
    'function foo({}) {}',
    'function foo({x1:x1, x2:x2, x3:x3}, {y1:y1, y1:y2}) {}',
    'function foo([x1, x2, x3], [y1, y2, y3]) {}',
    'function foo({x1:x1}, [y1]) {}',
    'function foo([x1], {y1:y1}) {}',
    'function foo(x1, {x2, x3}, [x4, x5], x6) {}',
    'function foo({x1:[y1]}) {}',
    'function foo([x1, {y1:y1}]) {}',
    'bar = function foo({x1}, [x2]){};',
    'obj = { foo({x}) {}, set prop([x]) {} }',
    'function foo([x = 20]) {}',
    'function foo({x:x = 10}) {}',
    'function foo({x1:x1 = 1}, {y1:y1 = 2}) {}',
    'function foo({x1:x1 = 1, x2:x2 = 2, x3:x3 = 3}) {}',
    'function foo([x1 = 1], {y1:y1 = 2}) {}',
    'function foo({x:x = 1} = {x:2}) {}',
    'function foo([x = 1] = [2]) {}',
    'function foo({x1:[y1 = 1]}) {}',
    'function foo([x1, {y1:y1 = 1}]) {}',
    'function foo([{y1:y1 = 1} = {y1:2}] = [{y1:3}]) {}',
    'function foo({x1:[y1 = 1] = [2]} = {x1:[3]}) {}',
    '({a: [b = 1, c = 2][1]} = {a:[]});',
    '({a: [b = 1, c = 2].b} = {a:[]});',
    '[...[...[...a]]] = [[[]]];',
    'obj = {x:1}; [...obj["x"]] = [10];',
    'obj = {x:1}; [...obj.x] = [10];',
    '[...{a:a = 1}] = [{}];',
    ' [...[a = 1]] = [[]];',
    '([...{a}] = [{}]);',
    '[...{a}] = [{}];',
    'zee = "x"; ({[zee +"foo"]:x1} = {})',
    'a = {}; ({x:a["x"]} = {});',
    'function foo() { return {}; }; ({x:foo()["x"]} = {});',
    ' a = {}; ({x:a.x} = {});',
    '({x:z = 1, x1:y = 20} = {});',
    '({x, x1:y = 20} = {});',
    '[a] = [];',
    '( [a] = []);',
    '[a] = [2];',
    '[a, b] = [1];',
    '[a] = [1, 2];',
    'function foo() { return {}; }; [foo().x] = [];',
    'a = {}; [a.x] = [];',
    '[[...a], ...b] = [[],];',
    '[[[...a]]] = [[[]]];',
    '[a, [b]] = [1, []];',
    '[[a]] = [[]];',
    '[a = 1, b] = [];',
    '[a = 1] = [];',
    '[...a] = [];',
    '[a] = [,,];',
    ' [,,a] = [];',
    'a = [1], i = 0; [a[(() => 1 + i)()]] = [];',
    '[a, b] = [1];',
    '[a] = [2];',
    '({a:a} = {a:10.5})',
    'obj2 = {__proto__ : p};',
    'function f1({a} = {a:1}, b, [c] = [2]) {}',
    '({ a: this.a } = {})',
    "({ a: this['a'] } = {})",
    '[this.a ] = []',
    '[...this[0]] = []',
    '[...[function f() {}.prop]] = []',
    '[...[{prop: 1}.prop]] = []',
    '[...[this[0], ...this[1]]] = []',
    '({ a: obj.a } = {})',
    "({ a: obj['a'] } = {})",
    '({ a: obj["a"] } = {})',
    "({ a: function() {}['prop'] } = {})",
    '({ a: {prop: 1}.prop } = {})',
    '[obj.a ] = []',
    "[obj['a']] = []",
    '[obj[0]] = []',
    '[function(){}.prop] = []',
    'a[i]',
    '(a.b = {});',
    '(a[i] = {});',
    'f = ([cls = class {}]) => {}',
    'f = ([xCls = class X {}]) => {}',
    'f = ([xCls2 = class { name() {} }]) => {}',
    'f = ([xCls2 = class { static name() {} }]) => {}',
    'f = ([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) => {}',
    '({arguments: x, ...z} = {});',
    'function f( { __proto__: x, __proto__: y, ...z} ) {}',
    'function f( {eval: x} ) {}',
    'function f( {var: x = 42} ) {}',
    'function f( {"isiah" : x = 42} ) {}',
    'function f( {[foo()] : z}) {}',
    'f = (argument1, [a,b,c]) => {};',
    'f = (argument1, { x : x, y : y = 42 }) => {};',
    'f = (argument1, [{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]]) => {};',
    'f = (argument1, [a,b,...rest]) => {};',
    'f = (argument1, {x = 42, y = 15, ...z}) => {};',
    '({arguments: x} = {})',
    '({"hi" : x} = {})',
    '({42 : x} = {})',
    '([a,,...rest] = {})',
    '({var: x = 42} = {})',
    'f = ( {[x] : z} ) => {};',
    'function f(argument1, [...rest]) {}',
    'function f(argument1, { x : y = 1, ...z }) {}',
    'function f(argument1, { x : x, y : y = 42, ...z }) {}',
    '({...arguments} = {})',
    '({x:y} = {});',
    'function foo() { return {x:1}; }; [...foo().x] = [10];',
    // Object destructuring with shorthand initializer
    '({x = 1} = {});',
    '({x, y = 1, z = 2} = {});',
    '[{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}];',
    '({x} = 0)',
    '({x,} = 0)',
    '({x,y} = 0)',
    '({x,y,} = 0)',
    '({[a]: a} = 1)',
    '({x = 0} = 1)',
    '({x = 0,} = 1)',
    '({x: y} = 0)',
    '({x: y,} = 0)',
    '({var: x} = 0)',
    '({"x": y} = 0)',
    "({'x': y} = 0)",
    '({0: y} = 0)',
    '({0: x, 1: x} = 0)',
    '({x: y = 0} = 1)',
    '({x: y = z = 0} = 1)',
    '({x: [y] = 0} = 1)',
    '({a:let} = 0);',
    '({let} = 0);',
    '({a:yield} = 0);',
    '({yield} = 0);',
    '({yield = 0} = 0);',
    '(function*() { [...{ x = yield }] = 0; })',
    '({x, y = 1, z = 2} = {});',
    '[[...x] = [2, 1, 3]]',
    '[arrow = () => {}]',
    '[{ x, y, z } = { x: 44, y: 55, z: 66 }]',
    '[{ x: 11, y: 22, z: 33 }]',
    '[...[]]',
    'f = ([x]) => {}',
    'function fn2([{} = 42]) {}',
    'function fn3([a, {b: c}]) {}',
    'function fn4([a, {b: []}]) {}',
    'function fn1([a, b]) {}',
    'function fn2([a, b,]) {}',
    'function fn3([a,, b,]) {}',
    'function fn1([,]) {}',
    'function fn2([,,]) {}',
    'function fn1([...args]) {}',
    'function fn2([,,,,,,,...args]) {}',
    'function fn3([x, {y}, ...z]) {}',
    'function fn4([,x, {y}, , ...z]) {}',
    'function fn5({x: [...y]}) {}',
    'function fna({x: y}) {}',
    'function fnb({x: y = 42}) {}',
    'function fnc({x: {}}) {}',
    'function fnd({x: {y}}) {}',
    'function fne({x: {} = 42}) {}',
    'function fnf({x: {y} = 42}) {}',
    'function fn1({x,}) {}',
    'function fn2({a: {p: q, }, }) {}',
    'function fn3({x,}) {}',
    'function fna({x}) {}',
    'function fnb({x, y}) {}',
    'function fnc({x = 42}) {}',
    'function fnd({x, y = 42}) {} ',
    'function fn1({a: {p: q}, b: {r}, c: {s = 0}, d: {}}) {}',
    'function fn2(x, {a: r, b: s, c: t}, y) {}',
    'function fn3({x: {y: {z: {} = 42}}}) {}',
    'function fn1([{}]) {}',
    'function fn2([{a: [{}]}]) {}',
    'function fn3({a: [,,,] = 42}) {}',
    'function fn4([], [[]], [[[[[[[[[x]]]]]]]]]) {}',
    'function fn4([[x, y, ...z]]) {}',
    '([a,,b]=0)',
    '([[]]=0)',
    '([...{x}] = y)',
    '([...a] = 0)',
    '([let] = answer);',
    'function a([a=0]) {}',
    'function fn1([a, b = 42]) {}',
    'function fn2([a = 42, b,]) {}',
    'function fn3([a,, b = a, c = 42]) {}',
    'function fn1([{}]) {}',
    'function fn2([{} = 42]) {}',
    'function fn3([a, {b: c}]) {}',
    'function fn4([a, {b: []}]) {}',
    'function fn1([a, b]) {}',
    'function fn2([a, b,]) {}',
    'function fn3([a,, b,]) {}',
    'function fn1([,]) {}',
    'function fn2([,,]) {}',
    'function fn1([...args]) {}',
    'function fn2([,,,,,,,...args]) {}',
    'function fn3([x, {y}, ...z]) {}',
    'function fn4([,x, {y}, , ...z]) {}',
    'function fn5({x: [...y]}) {}',
    'function fn({}) {}',
    'function fna({x: y}) {}',
    'function fnb({x: y = 42}) {}',
    'function fnc({x: {}}) {}',
    'function fnd({x: {y}}) {}',
    '[x, y, ...z = 1]',
    '[...z = 1]',
    '[x, y, ...[z] = [1]]',
    '[...[z] = [1]]',
    '(a.b) = 0',
    'a0({});',
    '(a) = 0',
    '(a) = 2;',
    '({ a: 1 }).a === 1',
    '({ responseText: text } = res)',
    '(({a = {b} = {b: 42}}) => a.b)({})',
    'var { x : y } = {};',
    'var { x : y = 1 } = {};',
    'var { get, set } = {};',
    '{ get = 1, set = 2 }',
    'var [a] = {};',
    'var [{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]] = {};',
    'var {[1+1] : z} = {};',
    'var { __proto__: x, __proto__: y} = {};',
    'var { x : x, y : y, ...z } = {};',
    'var [{x:x, y:y, ...z}, [a,b,c]] = {};',
    'var {x, ...y} = {};',
    'var {[1+1] : z, ...x} = {};',
    'var {arguments: x, ...z} = {};',
    'function f( {[foo()] : z}) {}',
    'function f( {eval: x} ) {}',
    'try {} catch( [a,b,...rest] ) {}',
    'try {} catch( [a = 1] ) {}',
    'try {} catch( [{x:x, y:y}, [a,b,c]] ) {}',
    'var f = (argument1, [a,b,c]) => {};',
    'var f = (argument1, { x : x, y : y = 42 }) => {};',
    'var f = (argument1, [{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]]) => {};',
    'var f = (argument1, [a,b,...rest]) => {};',
    'var f = (argument1, {x = 42, y = 15, ...z}) => {};',
    '"use strict"; let {"hi" : x} = {};',
    '"use strict"; let {42 : x} = {};',
    '"use strict"; let [a,,...rest] = {};',
    'var {arguments} = {};',
    'var {x: arguments} = {};',
    'var {...arguments} = {};',
    'var {arguments = false} = {};'
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseSource(`${arg}`, undefined, Context.Empty);
      });
    });
  }
});
