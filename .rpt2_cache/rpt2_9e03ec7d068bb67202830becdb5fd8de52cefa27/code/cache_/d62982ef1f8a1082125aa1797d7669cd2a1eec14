{"code":"import { KeywordDescTable } from './token';\r\nimport { next } from './scanner';\r\nimport { report } from './errors';\r\nexport function pushComment(context, array) {\r\n    return function (type, value, start, end) {\r\n        const comment = {\r\n            type,\r\n            value\r\n        };\r\n        if (context & 32) {\r\n            comment.start = start;\r\n            comment.end = end;\r\n        }\r\n        array.push(comment);\r\n    };\r\n}\r\nexport function pushToken(context, array) {\r\n    return function (token, value, start, end) {\r\n        const tokens = {\r\n            token,\r\n            value\r\n        };\r\n        if (context & 32) {\r\n            tokens.start = start;\r\n            tokens.end = end;\r\n        }\r\n        array.push(tokens);\r\n    };\r\n}\r\nexport function finishNode(context, start, end, node) {\r\n    if (context & 2) {\r\n        node.start = start;\r\n        node.end = end;\r\n    }\r\n    return node;\r\n}\r\nexport function optional(state, context, t) {\r\n    if (state.token === t) {\r\n        next(state, context);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function expect(state, context, t) {\r\n    if (state.token === t) {\r\n        next(state, context);\r\n    }\r\n    else {\r\n        report(state, 1, KeywordDescTable[state.token & 255]);\r\n    }\r\n}\r\nexport function consumeSemicolon(state, context) {\r\n    if ((state.token & 536870912) === 536870912) {\r\n        optional(state, context, 536870929);\r\n    }\r\n    else if ((state.flags & 1) !== 1) {\r\n        report(state, 1, KeywordDescTable[state.token & 255]);\r\n    }\r\n}\r\nexport function addVariable(state, context, scope, bindingType, origin, checkDuplicates, isVarDecl, key) {\r\n    if (scope === -1)\r\n        return;\r\n    if (bindingType & 2) {\r\n        let lex = scope.lex;\r\n        while (lex) {\r\n            const type = lex.type;\r\n            if (lex['@' + key] !== undefined) {\r\n                if (type === 4) {\r\n                    if (isVarDecl && context & 16) {\r\n                        state.inCatch = true;\r\n                    }\r\n                    else {\r\n                        report(state, 42, key);\r\n                    }\r\n                }\r\n                else if (type === 2) {\r\n                    report(state, 98);\r\n                }\r\n                else if (type !== 5) {\r\n                    if (checkForDuplicateLexicals(scope, '@' + key, context, origin) === true) {\r\n                        report(state, 98, key);\r\n                    }\r\n                }\r\n            }\r\n            lex = lex['@'];\r\n        }\r\n        let x = scope.var['@' + key];\r\n        if (x === undefined) {\r\n            x = 1;\r\n        }\r\n        else {\r\n            ++x;\r\n        }\r\n        scope.var['@' + key] = x;\r\n        let lexVars = scope.lexVars;\r\n        while (lexVars) {\r\n            lexVars['@' + key] = true;\r\n            lexVars = lexVars['@'];\r\n        }\r\n    }\r\n    else {\r\n        const lex = scope.lex;\r\n        if (checkDuplicates) {\r\n            checkIfExistInLexicalParentScope(state, context, scope, origin, '@' + key);\r\n            if (lex['@' + key] !== undefined) {\r\n                if (checkForDuplicateLexicals(scope, '@' + key, context, origin) === true) {\r\n                    report(state, 41, key);\r\n                }\r\n            }\r\n        }\r\n        let x = lex['@' + key];\r\n        if (x === undefined)\r\n            x = 1;\r\n        else if (checkDuplicates) {\r\n            if (checkForDuplicateLexicals(scope, '@' + key, context, origin) === true) {\r\n                report(state, 99, key);\r\n            }\r\n        }\r\n        else {\r\n            ++x;\r\n        }\r\n        lex['@' + key] = x;\r\n    }\r\n}\r\nexport function checkForDuplicateLexicals(scope, key, context, origin) {\r\n    return context & 1024\r\n        ? true\r\n        : (context & 16) === 0\r\n            ? true\r\n            : origin & 512\r\n                ? true\r\n                : (scope.lex.funcs[key] === true) === false\r\n                    ? true\r\n                    : false;\r\n}\r\nexport function checkIfExistInLexicalBindings(state, context, scope, origin, skipParent) {\r\n    const lex = scope.lex;\r\n    for (const key in lex) {\r\n        if (key[0] === '@' && key.length > 1) {\r\n            if (lex[key] > 1)\r\n                return true;\r\n            if (!skipParent)\r\n                checkIfExistInLexicalParentScope(state, context, scope, origin, key);\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function checkIfExistInLexicalParentScope(state, context, scope, origin, key) {\r\n    const lex = scope.lex;\r\n    const lexParent = lex['@'];\r\n    if (lexParent !== undefined && lexParent[key] !== undefined) {\r\n        if (lexParent.type === 5) {\r\n            report(state, 101);\r\n        }\r\n        else if (lexParent.type === 4) {\r\n            report(state, 100);\r\n        }\r\n    }\r\n    if (scope.lexVars[key] !== undefined) {\r\n        if (checkForDuplicateLexicals(scope, key, context, origin) === true) {\r\n            report(state, 41, key.slice(1));\r\n        }\r\n    }\r\n}\r\nexport function addFunctionName(state, context, scope, bindingType, origin, isVarDecl) {\r\n    addVariable(state, context, scope, bindingType, origin, true, isVarDecl, state.tokenValue);\r\n    if (context & 16 && !scope.lex.funcs['@' + state.tokenValue]) {\r\n        scope.lex.funcs['@' + state.tokenValue] = true;\r\n    }\r\n}\r\nexport function validateFunctionArgs(state, arg) {\r\n    for (const key in arg) {\r\n        if (key[0] === '@' && key.length > 1 && arg[key] > 1) {\r\n            report(state, 41, key.slice(1));\r\n        }\r\n    }\r\n}\r\nexport function lookAheadOrScan(state, context, callback, isLookahead) {\r\n    const savedIndex = state.index;\r\n    const savedLine = state.line;\r\n    const savedColumn = state.column;\r\n    const startIndex = state.startIndex;\r\n    const savedFlags = state.flags;\r\n    const savedTokenValue = state.tokenValue;\r\n    const savedNextChar = state.currentChar;\r\n    const savedToken = state.token;\r\n    const savedTokenRegExp = state.tokenRegExp;\r\n    const result = callback(state, context);\r\n    if (!result || isLookahead) {\r\n        state.index = savedIndex;\r\n        state.line = savedLine;\r\n        state.column = savedColumn;\r\n        state.startIndex = startIndex;\r\n        state.flags = savedFlags;\r\n        state.tokenValue = savedTokenValue;\r\n        state.currentChar = savedNextChar;\r\n        state.token = savedToken;\r\n        state.tokenRegExp = savedTokenRegExp;\r\n    }\r\n    return result;\r\n}\r\nexport function isLexical(state, context) {\r\n    next(state, context);\r\n    const { token } = state;\r\n    return !!((token & 405505) === 274432 ||\r\n        (token & 12288) === 12288 ||\r\n        token === 131084 ||\r\n        token === 131091 ||\r\n        state.token & 2097152 ||\r\n        state.token & 524288 ||\r\n        token === 402821192);\r\n}\r\nexport function reinterpret(state, ast) {\r\n    switch (ast.type) {\r\n        case 'ArrayExpression':\r\n            ast.type = 'ArrayPattern';\r\n            const elements = ast.elements;\r\n            for (let i = 0, n = elements.length; i < n; ++i) {\r\n                const element = elements[i];\r\n                if (element)\r\n                    reinterpret(state, element);\r\n            }\r\n            break;\r\n        case 'ObjectExpression':\r\n            ast.type = 'ObjectPattern';\r\n            const properties = ast.properties;\r\n            for (let i = 0, n = properties.length; i < n; ++i) {\r\n                reinterpret(state, properties[i]);\r\n            }\r\n            break;\r\n        case 'AssignmentExpression':\r\n            ast.type = 'AssignmentPattern';\r\n            if (ast.operator !== '=')\r\n                report(state, 0);\r\n            delete ast.operator;\r\n            reinterpret(state, ast.left);\r\n            break;\r\n        case 'Property':\r\n            reinterpret(state, ast.value);\r\n            break;\r\n        case 'SpreadElement':\r\n            ast.type = 'RestElement';\r\n            reinterpret(state, ast.argument);\r\n    }\r\n}\r\nexport function nameIsArgumentsOrEval(value) {\r\n    return value === 'eval' || value === 'arguments';\r\n}\r\nexport function isValidIdentifier(context, t) {\r\n    if (context & 1024) {\r\n        if (context & 2048 && t & 524288)\r\n            return false;\r\n        if (t & 2097152)\r\n            return false;\r\n        return (t & 274432) === 274432 || (t & 12288) === 12288;\r\n    }\r\n    return ((t & 274432) === 274432 ||\r\n        (t & 12288) === 12288 ||\r\n        (t & 36864) === 36864);\r\n}\r\nexport function validateBindingIdentifier(state, context, type, token = state.token) {\r\n    if (context & 1024 && token === 36969)\r\n        report(state, 73);\r\n    if ((token & 36864) === 36864) {\r\n        if (context & 1024)\r\n            report(state, 72);\r\n    }\r\n    if ((token & 20480) === 20480) {\r\n        report(state, 72);\r\n    }\r\n    if (context & (4194304 | 2048) && token & 524288) {\r\n        report(state, 71);\r\n    }\r\n    if (context & (2097152 | 1024) && token & 2097152) {\r\n        report(state, 67);\r\n    }\r\n    if (token === 402821192) {\r\n        if (type & 16)\r\n            report(state, 68);\r\n        if (type & (4 | 8))\r\n            report(state, 69);\r\n        if (context & 1024)\r\n            report(state, 70);\r\n    }\r\n    return true;\r\n}\r\nexport function addToExportedNamesAndCheckForDuplicates(state, exportedName) {\r\n    if (state.exportedNames !== undefined && exportedName !== '') {\r\n        const hashed = '@' + exportedName;\r\n        if (state.exportedNames[hashed])\r\n            report(state, 48, exportedName);\r\n        state.exportedNames[hashed] = 1;\r\n    }\r\n}\r\nexport function addToExportedBindings(state, exportedName) {\r\n    if (state.exportedBindings !== undefined && exportedName !== '') {\r\n        const hashed = '@' + exportedName;\r\n        state.exportedBindings[hashed] = 1;\r\n    }\r\n}\r\nexport function nextTokenIsFuncKeywordOnSameLine(state, context) {\r\n    const line = state.line;\r\n    next(state, context);\r\n    return state.token === 151639 && state.line === line;\r\n}\r\nfunction isIterationStatement(state) {\r\n    return state.token === 20577 || state.token === 20561 || state.token === 20566;\r\n}\r\nexport function addLabel(state, label) {\r\n    if (state.labelSet === undefined)\r\n        state.labelSet = {};\r\n    state.labelSet[`@${label}`] = true;\r\n    state.labelSetStack[state.labelDepth] = state.labelSet;\r\n    state.iterationStack[state.labelDepth] = isIterationStatement(state);\r\n    state.labelSet = undefined;\r\n    state.labelDepth++;\r\n}\r\nexport function addCrossingBoundary(state) {\r\n    state.labelSetStack[state.labelDepth] = state.functionBoundaryStack;\r\n    state.iterationStack[state.labelDepth] = 0;\r\n    state.labelDepth++;\r\n}\r\nexport function validateContinueLabel(state, label) {\r\n    const sstate = getLabel(state, `@${label}`, true);\r\n    if ((sstate & 1) !== 1) {\r\n        if (sstate & 2) {\r\n            report(state, 0);\r\n        }\r\n        else {\r\n            report(state, 96, 'continue');\r\n        }\r\n    }\r\n}\r\nexport function validateBreakStatement(state, label) {\r\n    if ((getLabel(state, `@${label}`) & 1) !== 1)\r\n        report(state, 96);\r\n}\r\nexport function getLabel(state, label, iterationStatement = false, crossBoundary = false) {\r\n    if (!iterationStatement && state.labelSet && state.labelSet[label] === true) {\r\n        return 1;\r\n    }\r\n    if (!state.labelSetStack)\r\n        return 0;\r\n    let stopAtTheBorder = false;\r\n    for (let i = state.labelDepth - 1; i >= 0; i--) {\r\n        const labelSet = state.labelSetStack[i];\r\n        if (labelSet === state.functionBoundaryStack) {\r\n            if (crossBoundary) {\r\n                break;\r\n            }\r\n            else {\r\n                stopAtTheBorder = true;\r\n                continue;\r\n            }\r\n        }\r\n        if (iterationStatement && state.iterationStack[i] === false) {\r\n            continue;\r\n        }\r\n        if (labelSet[label] === true) {\r\n            return stopAtTheBorder ? 2 : 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nexport function addVariableAndDeduplicate(state, context, scope, type, origin, isVarDecl, name) {\r\n    addVariable(state, context, scope, type, origin, true, isVarDecl, name);\r\n    if (context & 16) {\r\n        scope.lex.funcs['#' + state.tokenValue] = false;\r\n    }\r\n}\r\nexport function createScope(type) {\r\n    return {\r\n        var: {},\r\n        lexVars: {},\r\n        lex: {\r\n            '@': undefined,\r\n            type,\r\n            funcs: {}\r\n        }\r\n    };\r\n}\r\nexport function createSubScope(parent, type) {\r\n    return {\r\n        var: parent.var,\r\n        lexVars: {\r\n            '@': parent.lexVars\r\n        },\r\n        lex: {\r\n            '@': parent.lex,\r\n            type,\r\n            funcs: []\r\n        }\r\n    };\r\n}\r\nexport function nextTokenIsLeftParenOrPeriod(state, context) {\r\n    next(state, context);\r\n    return state.token === 131083 || state.token === 13;\r\n}\r\nexport function nextTokenIsLeftParen(parser, context) {\r\n    next(parser, context);\r\n    return parser.token === 131083;\r\n}\r\nexport function secludeGrammar(state, context, minprec = 0, callback) {\r\n    const { assignable, bindable, pendingCoverInitializeError } = state;\r\n    state.bindable = true;\r\n    state.assignable = true;\r\n    state.pendingCoverInitializeError = null;\r\n    const result = callback(state, context, minprec);\r\n    if (state.pendingCoverInitializeError !== null) {\r\n        report(state, state.pendingCoverInitializeError);\r\n    }\r\n    state.bindable = bindable;\r\n    state.assignable = assignable;\r\n    state.pendingCoverInitializeError = pendingCoverInitializeError;\r\n    return result;\r\n}\r\nexport function acquireGrammar(state, context, minprec, callback) {\r\n    const { assignable, bindable, pendingCoverInitializeError } = state;\r\n    state.bindable = true;\r\n    state.assignable = true;\r\n    state.pendingCoverInitializeError = null;\r\n    const result = callback(state, context, minprec);\r\n    state.bindable = state.bindable && bindable;\r\n    state.assignable = state.assignable && assignable;\r\n    state.pendingCoverInitializeError = pendingCoverInitializeError || state.pendingCoverInitializeError;\r\n    return result;\r\n}\r\nexport function isValidSimpleAssignmentTarget(node) {\r\n    return node.type === 'Identifier' || node.type === 'MemberExpression' ? true : false;\r\n}\r\n//# sourceMappingURL=common.js.map","map":"{\"version\":3,\"file\":\"common.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/common.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"D:/cherow_gh/cherow1/common.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"common.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/common.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"D:/cherow_gh/cherow1/common.d.ts","writeByteOrderMark":false,"text":"import * as ESTree from './estree';\r\nimport { Token } from './token';\r\nimport { Errors } from './errors';\r\nexport declare const enum Context {\r\n    Empty = 0,\r\n    OptionsNext = 1,\r\n    OptionsRanges = 2,\r\n    OptionsJSX = 4,\r\n    OptionsRaw = 8,\r\n    OptionsWebCompat = 16,\r\n    OptionsLoc = 32,\r\n    OptionsGlobalReturn = 64,\r\n    OptionsExperimental = 128,\r\n    OptionsNative = 256,\r\n    RequireIdentifier = 512,\r\n    Strict = 1024,\r\n    Module = 2048,\r\n    TopLevel = 4096,\r\n    DisallowInContext = 8192,\r\n    InClass = 16384,\r\n    AllowPossibleRegEx = 32768,\r\n    TaggedTemplate = 65536,\r\n    OptionsDirectives = 131072,\r\n    SuperProperty = 262144,\r\n    SuperCall = 524288,\r\n    YieldContext = 2097152,\r\n    AwaitContext = 4194304,\r\n    InArgList = 8388608,\r\n    InConstructor = 16777216,\r\n    InMethod = 33554432,\r\n    AllowNewTarget = 67108864,\r\n    AllowReturn = 134217728,\r\n    LocationTracking = 34\r\n}\r\nexport declare const enum Flags {\r\n    Empty = 0,\r\n    NewLine = 1,\r\n    LastIsCR = 2,\r\n    Float = 4,\r\n    Octal = 8,\r\n    Binary = 16,\r\n    SeenPrototype = 32,\r\n    SimpleParameterList = 64,\r\n    HasPrivateName = 128,\r\n    InArrowContext = 256,\r\n    HasStrictReserved = 512,\r\n    StrictEvalArguments = 1024,\r\n    HasConstructor = 2048\r\n}\r\nexport declare const enum Type {\r\n    None = 0,\r\n    ArgList = 1,\r\n    Variable = 2,\r\n    Let = 4,\r\n    Const = 8,\r\n    ClassExprDecl = 16,\r\n    ConciseBody = 64\r\n}\r\nexport declare const enum Origin {\r\n    None = 0,\r\n    Statement = 1,\r\n    ForStatement = 2,\r\n    Export = 4,\r\n    CatchClause = 8,\r\n    AsyncArgs = 16,\r\n    ArgList = 32,\r\n    ClassExprDecl = 64,\r\n    Declaration = 128,\r\n    AsyncArrow = 256,\r\n    AsyncFunction = 512\r\n}\r\nexport declare const enum ScopeType {\r\n    None = 0,\r\n    BlockStatement = 1,\r\n    ForStatement = 2,\r\n    SwitchStatement = 3,\r\n    CatchClause = 4,\r\n    ArgumentList = 5\r\n}\r\nexport declare const enum LabelledState {\r\n    None = 0,\r\n    AllowAsLabelled = 1,\r\n    Disallow = 2\r\n}\r\nexport declare const enum Modifiers {\r\n    None = 0,\r\n    Method = 1,\r\n    Computed = 2,\r\n    Shorthand = 4,\r\n    Generator = 8,\r\n    Async = 16,\r\n    Static = 32,\r\n    Constructor = 64,\r\n    ClassField = 128,\r\n    Getter = 256,\r\n    Setter = 512,\r\n    Extends = 1024,\r\n    GetSet = 768\r\n}\r\nexport declare const enum Arrows {\r\n    None = 0,\r\n    ConciseBody = 1,\r\n    Plain = 2,\r\n    Async = 4\r\n}\r\nexport declare const enum Grammar {\r\n    None = 0,\r\n    Bindable = 1,\r\n    Assignable = 2,\r\n    NotBindable = 4,\r\n    NotAssignable = 8,\r\n    NotAssignbleOrBindable = 12,\r\n    BindableAndAssignable = 3\r\n}\r\nexport declare type OnComment = void | ESTree.Comment[] | ((type: string, value: string, start?: number, end?: number) => any);\r\nexport declare type OnToken = void | Token[] | ((token: Token, start?: number, end?: number) => any);\r\nexport interface ScopeState {\r\n    var: any;\r\n    lexVars: any;\r\n    lex: any;\r\n}\r\nexport interface LexicalScope {\r\n    childScope: any;\r\n    flags: ScopeType;\r\n    functions: void | {\r\n        pattern?: string;\r\n        flags?: string;\r\n    };\r\n}\r\nexport interface ParserState {\r\n    source: string;\r\n    onComment: any;\r\n    onToken: any;\r\n    flags: Flags;\r\n    grammar: Grammar;\r\n    index: number;\r\n    line: number;\r\n    startIndex: number;\r\n    startLine: number;\r\n    startColumn: number;\r\n    column: number;\r\n    token: Token;\r\n    tokenValue: any;\r\n    tokenRaw: string;\r\n    currentChar: any;\r\n    length: number;\r\n    lastRegExpError: any;\r\n    numCapturingParens: number;\r\n    largestBackReference: number;\r\n    lastChar: number;\r\n    inCatch: boolean;\r\n    assignable: boolean;\r\n    bindable: boolean;\r\n    exportedNames: any[];\r\n    exportedBindings: any[];\r\n    labelSet: any;\r\n    labelSetStack: {\r\n        [key: string]: boolean;\r\n    }[];\r\n    iterationStack: (boolean | LabelState)[];\r\n    switchStatement: LabelState;\r\n    iterationStatement: LabelState;\r\n    labelDepth: number;\r\n    functionBoundaryStack: any;\r\n    pendingCoverInitializeError: Errors | null;\r\n    tokenRegExp: void | {\r\n        pattern: string;\r\n        flags: string;\r\n    };\r\n}\r\nexport declare function unreachable(...values: never[]): never;\r\nexport declare function pushComment(context: Context, array: any[]): any;\r\nexport declare function pushToken(context: Context, array: any[]): any;\r\nexport declare function finishNode<T extends ESTree.Node>(context: Context, start: number, end: number, node: T): T;\r\nexport declare function optional(state: ParserState, context: Context, t: Token): boolean;\r\nexport declare function expect(state: ParserState, context: Context, t: Token): void;\r\nexport declare function consumeSemicolon(state: ParserState, context: Context): void | boolean;\r\nexport declare function addVariable(state: ParserState, context: Context, scope: any, bindingType: Type, origin: Origin, checkDuplicates: boolean, isVarDecl: boolean, key: string): void;\r\nexport declare function checkForDuplicateLexicals(scope: ScopeState, key: string, context: Context, origin: Origin): boolean;\r\nexport declare function checkIfExistInLexicalBindings(state: ParserState, context: Context, scope: ScopeState, origin: Origin, skipParent: any): boolean;\r\nexport declare function checkIfExistInLexicalParentScope(state: ParserState, context: Context, scope: ScopeState, origin: Origin, key: string): void;\r\nexport declare function addFunctionName(state: any, context: Context, scope: any, bindingType: Type, origin: Origin, isVarDecl: boolean): void;\r\nexport declare function validateFunctionArgs(state: ParserState, arg: any): void;\r\nexport declare function lookAheadOrScan<T>(state: ParserState, context: Context, callback: (state: ParserState, context: Context) => T, isLookahead: boolean): T;\r\nexport declare function isLexical(state: ParserState, context: Context): boolean;\r\nexport declare function reinterpret(state: ParserState, ast: any): void;\r\nexport declare function nameIsArgumentsOrEval(value: string): boolean;\r\nexport declare function isValidIdentifier(context: Context, t: Token): boolean;\r\nexport declare function validateBindingIdentifier(state: ParserState, context: Context, type: Type, token?: Token): boolean;\r\nexport declare function addToExportedNamesAndCheckForDuplicates(state: ParserState, exportedName: any): void;\r\nexport declare function addToExportedBindings(state: ParserState, exportedName: any): void;\r\nexport declare function nextTokenIsFuncKeywordOnSameLine(state: ParserState, context: Context): boolean;\r\nexport declare function addLabel(state: ParserState, label: string): void;\r\nexport declare function addCrossingBoundary(state: ParserState): void;\r\nexport declare function validateContinueLabel(state: ParserState, label: string): void;\r\nexport declare function validateBreakStatement(state: ParserState, label: any): void;\r\nexport declare function getLabel(state: ParserState, label: string, iterationStatement?: boolean, crossBoundary?: boolean): LabelState;\r\nexport declare function addVariableAndDeduplicate(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, isVarDecl: boolean, name: string): void;\r\nexport declare function createScope(type: ScopeType): ScopeState;\r\nexport declare function createSubScope(parent: ScopeState, type: ScopeType): ScopeState;\r\nexport declare function nextTokenIsLeftParenOrPeriod(state: ParserState, context: Context): boolean;\r\nexport declare function nextTokenIsLeftParen(parser: ParserState, context: Context): boolean;\r\nexport declare function secludeGrammar<T>(state: ParserState, context: Context, minprec: number | undefined, callback: (state: ParserState, context: Context, precedence: number) => T): T;\r\nexport declare function acquireGrammar<T>(state: ParserState, context: Context, minprec: number, callback: (state: ParserState, context: Context, precedence: number) => T): T;\r\nexport declare function isValidSimpleAssignmentTarget(node: ESTree.Node): boolean;\r\n//# sourceMappingURL=common.d.ts.map"}}
