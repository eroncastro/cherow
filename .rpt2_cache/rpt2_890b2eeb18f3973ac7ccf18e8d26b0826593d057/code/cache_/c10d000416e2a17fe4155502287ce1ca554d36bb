{"code":"import {} from './utils';\r\nlet $flag = 0;\r\nconst $ERROR = 0;\r\nconst $WHITE = 1 << ++$flag;\r\nconst $SPACE = (1 << ++$flag) | $WHITE;\r\nconst $TAB = (1 << ++$flag) | $WHITE;\r\nconst $NL = (1 << ++$flag) | $WHITE;\r\nconst $CRLF = (1 << ++$flag) | $WHITE | $NL;\r\nconst $COMMENT = (1 << ++$flag) | $WHITE;\r\nconst $COMMENT_SINGLE = (1 << ++$flag) | $WHITE | $COMMENT;\r\nconst $COMMENT_MULTI = (1 << ++$flag) | $WHITE | $COMMENT;\r\nconst $COMMENT_HTML = (1 << ++$flag) | $WHITE | $COMMENT;\r\nconst $NUMBER = 1 << ++$flag;\r\nconst $NUMBER_HEX = (1 << ++$flag) | $NUMBER;\r\nconst $NUMBER_DEC = (1 << ++$flag) | $NUMBER;\r\nconst $NUMBER_BIN = (1 << ++$flag) | $NUMBER;\r\nconst $NUMBER_OCT = (1 << ++$flag) | $NUMBER;\r\nconst $NUMBER_OLD = (1 << ++$flag) | $NUMBER;\r\nconst $STRING = 1 << ++$flag;\r\nconst $STRING_SINGLE = (1 << ++$flag) | $STRING;\r\nconst $STRING_DOUBLE = (1 << ++$flag) | $STRING;\r\nconst $IDENT = 1 << ++$flag;\r\nconst $PUNCTUATOR = 1 << ++$flag;\r\nconst $REGEX = 1 << ++$flag;\r\nconst $REGEXU = (1 << ++$flag) | $REGEX;\r\nconst $TICK = 1 << ++$flag;\r\nconst $TICK_HEAD = (1 << ++$flag) | $TICK;\r\nconst $TICK_BODY = (1 << ++$flag) | $TICK;\r\nconst $TICK_TAIL = (1 << ++$flag) | $TICK;\r\nconst $TICK_PURE = (1 << ++$flag) | $TICK;\r\nconst $TICK_BAD_ESCAPE = 1 << ++$flag;\r\nconst $ASI = 1 << ++$flag;\r\nconst $EOF = 1 << ++$flag;\r\nASSERT($flag < 32, 'cannot use more than 32 flags');\r\n$flag = 0;\r\nconst LF_NO_FLAGS = 0;\r\nconst LF_CAN_FUNC_STMT = 1 << ++$flag;\r\nconst LF_CAN_NEW_DOT_TARGET = 1 << ++$flag;\r\nconst LF_DO_WHILE_ASI = 1 << ++$flag;\r\nconst LF_FOR_REGEX = 1 << ++$flag;\r\nconst LF_IN_ASYNC = 1 << ++$flag;\r\nconst LF_IN_CONSTRUCTOR = 1 << ++$flag;\r\nconst LF_IN_FOR_LHS = 1 << ++$flag;\r\nconst LF_IN_FUNC_ARGS = 1 << ++$flag;\r\nconst LF_IN_GENERATOR = 1 << ++$flag;\r\nconst LF_IN_GLOBAL = 1 << ++$flag;\r\nconst LF_IN_ITERATION = 1 << ++$flag;\r\nconst LF_IN_SCOPE_ROOT = 1 << ++$flag;\r\nconst LF_IN_SWITCH = 1 << ++$flag;\r\nconst LF_IN_TEMPLATE = 1 << ++$flag;\r\nconst LF_NO_ASI = 1 << ++$flag;\r\nconst LF_STRICT_MODE = 1 << ++$flag;\r\nconst LF_SUPER_CALL = 1 << ++$flag;\r\nconst LF_SUPER_PROP = 1 << ++$flag;\r\nASSERT($flag < 32, 'cannot use more than 32 flags');\r\nconst INITIAL_LEXER_FLAGS = LF_FOR_REGEX | LF_IN_GLOBAL | LF_IN_SCOPE_ROOT;\r\nfunction LF_DEBUG(flags) {\r\n    let bak = flags;\r\n    let s = [];\r\n    if (!flags) {\r\n        s.push('LF_NO_FLAGS');\r\n    }\r\n    if (flags & LF_STRICT_MODE) {\r\n        flags ^= LF_STRICT_MODE;\r\n        s.push('LF_STRICT_MODE');\r\n    }\r\n    if (flags & LF_FOR_REGEX) {\r\n        flags ^= LF_FOR_REGEX;\r\n        s.push('LF_FOR_REGEX');\r\n    }\r\n    if (flags & LF_IN_TEMPLATE) {\r\n        flags ^= LF_IN_TEMPLATE;\r\n        s.push('LF_IN_TEMPLATE');\r\n    }\r\n    if (flags & LF_IN_ASYNC) {\r\n        flags ^= LF_IN_ASYNC;\r\n        s.push('LF_IN_ASYNC');\r\n    }\r\n    if (flags & LF_IN_GENERATOR) {\r\n        flags ^= LF_IN_GENERATOR;\r\n        s.push('LF_IN_GENERATOR');\r\n    }\r\n    if (flags & LF_IN_CONSTRUCTOR) {\r\n        flags ^= LF_IN_CONSTRUCTOR;\r\n        s.push('LF_IN_CONSTRUCTOR');\r\n    }\r\n    if (flags & LF_IN_FUNC_ARGS) {\r\n        flags ^= LF_IN_FUNC_ARGS;\r\n        s.push('LF_IN_FUNC_ARGS');\r\n    }\r\n    if (flags & LF_CAN_FUNC_STMT) {\r\n        flags ^= LF_CAN_FUNC_STMT;\r\n        s.push('LF_CAN_FUNC_STMT');\r\n    }\r\n    if (flags & LF_IN_SCOPE_ROOT) {\r\n        flags ^= LF_IN_SCOPE_ROOT;\r\n        s.push('LF_IN_SCOPE_ROOT');\r\n    }\r\n    if (flags & LF_IN_GLOBAL) {\r\n        flags ^= LF_IN_GLOBAL;\r\n        s.push('LF_IN_GLOBAL');\r\n    }\r\n    if (flags & LF_IN_ITERATION) {\r\n        flags ^= LF_IN_ITERATION;\r\n        s.push('LF_IN_ITERATION');\r\n    }\r\n    if (flags & LF_IN_SWITCH) {\r\n        flags ^= LF_IN_SWITCH;\r\n        s.push('LF_IN_SWITCH');\r\n    }\r\n    if (flags & LF_CAN_NEW_DOT_TARGET) {\r\n        flags ^= LF_CAN_NEW_DOT_TARGET;\r\n        s.push('LF_CAN_NEW_DOT_TARGET');\r\n    }\r\n    if (flags & LF_IN_FOR_LHS) {\r\n        flags ^= LF_IN_FOR_LHS;\r\n        s.push('LF_IN_FOR_LHS');\r\n    }\r\n    if (flags & LF_NO_ASI) {\r\n        flags ^= LF_NO_ASI;\r\n        s.push('LF_NO_ASI');\r\n    }\r\n    if (flags & LF_DO_WHILE_ASI) {\r\n        flags ^= LF_DO_WHILE_ASI;\r\n        s.push('LF_DO_WHILE_ASI');\r\n    }\r\n    if (flags & LF_SUPER_CALL) {\r\n        flags ^= LF_SUPER_CALL;\r\n        s.push('LF_SUPER_CALL');\r\n    }\r\n    if (flags & LF_SUPER_PROP) {\r\n        flags ^= LF_SUPER_PROP;\r\n        s.push('LF_SUPER_PROP');\r\n    }\r\n    if (flags) {\r\n        throw new Error('UNKNOWN_FLAGS: ' + flags.toString(2) + ' (was: ' + bak.toString(2) + '), so far: [' + s.join('|') + ']');\r\n    }\r\n    return s.join('|');\r\n}\r\nconst BAD_ESCAPE = true;\r\nconst GOOD_ESCAPE = false;\r\nconst GOAL_MODULE = true;\r\nconst GOAL_SCRIPT = false;\r\nconst ALWAYS_GOOD = 0;\r\nconst GOOD_WITH_U_FLAG = 1;\r\nconst GOOD_SANS_U_FLAG = 2;\r\nconst ALWAYS_BAD = 4;\r\nconst FIRST_CHAR = true;\r\nconst NON_START = false;\r\nconst CHARCLASS_BAD = 0x110000;\r\nconst CHARCLASS_BAD_RANGE = 0x110001;\r\nconst CHARCLASS_BAD_SANS_U_FLAG = 1 << 23;\r\nconst CHARCLASS_BAD_WITH_U_FLAG = 1 << 24;\r\nconst CHARCLASS_CLASS_ESCAPE = 1 << 25;\r\nconst EOF_SYMBOL = 0x10000;\r\nconst COLLECT_TOKENS_NONE = 0;\r\nconst COLLECT_TOKENS_SOLID = 1;\r\nconst COLLECT_TOKENS_ALL = 2;\r\nconst WEB_COMPAT_OFF = false;\r\nconst WEB_COMPAT_ON = true;\r\nconst RETURN_ANY_TOKENS = true;\r\nconst RETURN_SOLID_TOKENS = false;\r\nconst WHITESPACE_TOKEN = true;\r\nconst SOLID_TOKEN = false;\r\nconst PARSING_FROM_TICK = true;\r\nconst PARSING_SANS_TICK = false;\r\nconst FAIL_GRACEFULLY = true;\r\nconst FAIL_HARD = false;\r\nconst FOR_TEMPLATE = true;\r\nconst NOT_TEMPLATE = false;\r\nlet NOT_A_REGEX_ERROR = '';\r\nlet CODEPOINT_FROM_ESCAPE = -1;\r\nlet INVALID_IDENT_CHAR = 0;\r\nlet VALID_SINGLE_CHAR = 1;\r\nlet VALID_DOUBLE_CHAR = 2;\r\nlet ID_START_REGEX = /|/;\r\nlet ID_CONTINUE_REGEX = /|/;\r\n(function () {\r\n    try {\r\n        ID_START_REGEX = new RegExp('^\\\\p{ID_Start}$', 'u');\r\n        ID_CONTINUE_REGEX = new RegExp('^\\\\p{ID_Continue}$', 'u');\r\n    }\r\n    catch (e) {\r\n        console.warn('Unable to create regexes with unicode property escapes; unicode support disabled');\r\n    }\r\n})();\r\nfunction ZeTokenizer(input, targetEsVersion = 6, moduleGoal = GOAL_MODULE, collectTokens = COLLECT_TOKENS_NONE, webCompat = WEB_COMPAT_ON, gracefulErrors = FAIL_HARD, tokenStorage = []) {\r\n    ASSERT(typeof input === 'string', 'input string should be string; ' + typeof input);\r\n    ASSERT((targetEsVersion >= 6 && targetEsVersion <= 9) || targetEsVersion === Infinity, 'only support v6~9 right now');\r\n    const supportRegexPropertyEscapes = targetEsVersion === 9 || targetEsVersion === Infinity;\r\n    const supportRegexLookbehinds = targetEsVersion === 9 || targetEsVersion === Infinity;\r\n    const supportRegexDotallFlag = targetEsVersion === 9 || targetEsVersion === Infinity;\r\n    const supportRegexNamedGroups = targetEsVersion === 9 || targetEsVersion === Infinity;\r\n    let pointer = 0;\r\n    let len = input.length;\r\n    let wasWhite = false;\r\n    let consumedNewline = false;\r\n    let consumedComment = false;\r\n    let finished = false;\r\n    let lastParsedIdent = '';\r\n    let lastRegexUnicodeEscapeOrd = 0;\r\n    let cache = input.charCodeAt(0);\r\n    let webModeWarnings = [];\r\n    let tokens = null;\r\n    let anyTokenCount = 0;\r\n    let solidTokenCount = 0;\r\n    if (collectTokens !== COLLECT_TOKENS_NONE) {\r\n        tokens = tokenStorage;\r\n        nextToken.tokens = tokens;\r\n    }\r\n    function peek() {\r\n        ASSERT(neof(), 'pointer not oob');\r\n        ASSERT(!arguments.length, 'no args');\r\n        ASSERT(cache === input.charCodeAt(pointer), 'cache should be up to date');\r\n        return cache;\r\n    }\r\n    function peekUnicode() {\r\n        ASSERT(neof(), 'pointer not oob');\r\n        ASSERT(!arguments.length, 'no args');\r\n        ASSERT(cache === input.charCodeAt(pointer), 'cache should be up to date');\r\n        if (cache > 127)\r\n            return input.codePointAt(pointer);\r\n        return cache;\r\n    }\r\n    function peekd(delta) {\r\n        ASSERT(delta, 'jump should be at least something otehrwise use peek()');\r\n        ASSERT(pointer + delta >= 0 && pointer + delta < len, 'pointer not oob');\r\n        ASSERT(arguments.length === 1, 'one args');\r\n        return input.charCodeAt(pointer + delta);\r\n    }\r\n    function peeky(ord) {\r\n        ASSERT(neof(), 'pointer not oob');\r\n        ASSERT(arguments.length === 1, 'one args');\r\n        return peek() === ord;\r\n    }\r\n    function peekyd(d, ord) {\r\n        ASSERT(neofd(d), 'pointer not oob [' + d + '][' + pointer + ']');\r\n        ASSERT(typeof ord === 'number', 'ord shoud be number');\r\n        ASSERT(arguments.length === 2, 'two args');\r\n        return peekd(d) === ord;\r\n    }\r\n    function slice(from, to) {\r\n        ASSERT(typeof from === 'number' && from >= 0 && from <= len, 'from shoud be valid index');\r\n        ASSERT(typeof to === 'number' && to >= 0 && to <= len, 'to shoud be valid index');\r\n        ASSERT(arguments.length === 2, 'two args');\r\n        return input.slice(from, to);\r\n    }\r\n    function peekSkip() {\r\n        ASSERT(!arguments.length, 'no args');\r\n        let t = cache;\r\n        cache = skipPeek();\r\n        return t;\r\n    }\r\n    function skipPeek() {\r\n        ASSERT(!arguments.length, 'no args');\r\n        return cache = input.charCodeAt(++pointer);\r\n    }\r\n    function skip() {\r\n        ASSERT(neof(), 'pointer not oob');\r\n        ASSERT(!arguments.length, 'no args');\r\n        cache = input.charCodeAt(++pointer);\r\n    }\r\n    function eof() {\r\n        return pointer >= len;\r\n    }\r\n    function eofd(d) {\r\n        return pointer >= len - d;\r\n    }\r\n    function neof() {\r\n        return pointer < len;\r\n    }\r\n    function neofd(d) {\r\n        return pointer < len - d;\r\n    }\r\n    function ASSERT_skip(chr) {\r\n        ASSERT(neof(), 'should not be oob before the skip');\r\n        ASSERT(arguments.length === 1, 'require explicit char');\r\n        ASSERT(peeky(chr), 'skip expecting different char', chr, peek());\r\n        skip();\r\n    }\r\n    function nextToken(lexerFlags = INITIAL_LEXER_FLAGS, _returnAny = RETURN_SOLID_TOKENS) {\r\n        ASSERT(arguments.length >= 1 && arguments.length <= 4, 'arg count 1~4');\r\n        ASSERT(!finished, 'should not next() after eof token');\r\n        let token;\r\n        do {\r\n            ++anyTokenCount;\r\n            if (neof()) {\r\n                let cstart = cache;\r\n                let start = pointer;\r\n                wasWhite = false;\r\n                let consumedTokenType = next(lexerFlags);\r\n                token = createToken(consumedTokenType, start, pointer, consumedNewline, wasWhite, cstart);\r\n                if (collectTokens === COLLECT_TOKENS_ALL)\r\n                    tokens.push(token);\r\n            }\r\n            else {\r\n                token = createToken($EOF, pointer, pointer, consumedNewline, WHITESPACE_TOKEN, 0);\r\n                finished = true;\r\n                break;\r\n            }\r\n        } while (wasWhite && _returnAny === RETURN_SOLID_TOKENS);\r\n        ++solidTokenCount;\r\n        if (collectTokens === COLLECT_TOKENS_SOLID)\r\n            tokens.push(token);\r\n        if (!wasWhite) {\r\n            consumedNewline = false;\r\n            consumedComment = false;\r\n        }\r\n        return token;\r\n    }\r\n    function addAsi() {\r\n        let token = createToken($ASI, pointer, pointer, consumedNewline, SOLID_TOKEN, $$SEMI_3B);\r\n        if (collectTokens !== COLLECT_TOKENS_NONE)\r\n            tokens.push(token, tokens.pop());\r\n        ++anyTokenCount;\r\n        ++solidTokenCount;\r\n    }\r\n    function createToken(type, start, stop, nl, ws, c) {\r\n        ASSERT(typeof c === 'number' && c >= 0 && c <= 0x10ffff, 'valid c');\r\n        let str = slice(start, stop);\r\n        let canon = type === $IDENT ? lastParsedIdent : str;\r\n        return {\r\n            _t: debug_toktype(type, 1),\r\n            type,\r\n            ws,\r\n            nl,\r\n            start,\r\n            stop,\r\n            c,\r\n            str,\r\n            canon,\r\n            toString() {\r\n                return `{# ${debug_toktype(type, 1)} : nl=${nl ? 'Y' : 'N'} ws=${ws ? 'Y' : 'N'} ${start}:${stop} curc=${c} \\`${str}\\`${canon !== str ? ' (canonical=`' + canon + '`)' : ''}#}`;\r\n            },\r\n        };\r\n    }\r\n    function next(lexerFlags) {\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags bit flags');\r\n        let c = peekSkip();\r\n        if (isAsciiLetter(c))\r\n            return parseIdentifierRest(c, String.fromCharCode(c));\r\n        switch (c) {\r\n            case $$SPACE_20:\r\n                wasWhite = true;\r\n                return $SPACE;\r\n            case $$DOT_2E:\r\n                return parseLeadingDot();\r\n            case $$PAREN_L_28:\r\n                return $PUNCTUATOR;\r\n            case $$PAREN_R_29:\r\n                return $PUNCTUATOR;\r\n            case $$CR_0D:\r\n                return parseCR();\r\n            case $$LF_0A:\r\n                return parseNewline();\r\n            case $$COMMA_2C:\r\n                return $PUNCTUATOR;\r\n            case $$TAB_09:\r\n                wasWhite = true;\r\n                return $TAB;\r\n            case $$DQUOTE_22:\r\n                return parseDoubleString(lexerFlags);\r\n            case $$PLUS_2B:\r\n                return parseSameOrCompound(c);\r\n            case $$TICK_60:\r\n                return parseTemplateString(lexerFlags, PARSING_FROM_TICK);\r\n            case $$0_30:\r\n                return parseLeadingZero(lexerFlags);\r\n            case $$1_31:\r\n            case $$2_32:\r\n            case $$3_33:\r\n            case $$4_34:\r\n            case $$5_35:\r\n            case $$6_36:\r\n            case $$7_37:\r\n            case $$8_38:\r\n            case $$9_39:\r\n                return parseDecimal();\r\n            case $$FWDSLASH_2F:\r\n                return parseFwdSlash(lexerFlags);\r\n            case $$EXCL_21:\r\n                return parseExcl();\r\n            case $$AND_26:\r\n                return parseSameOrCompound(c);\r\n            case $$DASH_2D:\r\n                if (!eofd(1) && moduleGoal === GOAL_SCRIPT && peek() === $$DASH_2D && peekd(1) === $$GT_3E) {\r\n                    if (consumedNewline || consumedComment) {\r\n                        return parseCommentHtmlClose();\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n                return parseSameOrCompound(c);\r\n            case $$SQUOTE_27:\r\n                return parseSingleString(lexerFlags);\r\n            case $$STAR_2A:\r\n                return parseStar();\r\n            case $$$_24:\r\n                return parseIdentifierRest(c, '$');\r\n            case $$PERCENT_25:\r\n                return parseCompoundAssignment();\r\n            case $$FF_0C:\r\n                wasWhite = true;\r\n                return $WHITE;\r\n            case $$VTAB_0B:\r\n                wasWhite = true;\r\n                return $WHITE;\r\n            case $$SEMI_3B:\r\n                return $PUNCTUATOR;\r\n            case $$IS_3D:\r\n                return parseEqual();\r\n            case $$CURLY_L_7B:\r\n                return $PUNCTUATOR;\r\n            case $$CURLY_R_7D:\r\n                if ((lexerFlags & LF_IN_TEMPLATE) === LF_IN_TEMPLATE)\r\n                    return parseTemplateString(lexerFlags, PARSING_SANS_TICK);\r\n                return $PUNCTUATOR;\r\n            case $$SQUARE_L_5B:\r\n                return $PUNCTUATOR;\r\n            case $$SQUARE_R_5D:\r\n                return $PUNCTUATOR;\r\n            case $$COLON_3A:\r\n                return $PUNCTUATOR;\r\n            case $$LODASH_5F:\r\n                return parseIdentifierRest(c, '_');\r\n            case $$OR_7C:\r\n                return parseSameOrCompound(c);\r\n            case $$QMARK_3F:\r\n                return $PUNCTUATOR;\r\n            case $$LT_3C:\r\n                if (!eofd(3) && moduleGoal === GOAL_SCRIPT && peek() === $$EXCL_21 && peekd(1) === $$DASH_2D && peekd(2) === $$DASH_2D) {\r\n                    return parseCommentHtmlOpen();\r\n                }\r\n                return parseLtPunctuator();\r\n            case $$GT_3E:\r\n                return parseGtPunctuator();\r\n            case $$XOR_5E:\r\n                return parseCompoundAssignment();\r\n            case $$TILDE_7E:\r\n                return $PUNCTUATOR;\r\n            case $$BACKSLASH_5C:\r\n                return parseBackslash();\r\n            case $$NBSP_A0:\r\n                wasWhite = true;\r\n                return $WHITE;\r\n            default:\r\n                return parseOtherUnicode(c);\r\n        }\r\n    }\r\n    function parseLeadingDot() {\r\n        if (eof())\r\n            return $PUNCTUATOR;\r\n        let c = peek();\r\n        if (c === $$DOT_2E) {\r\n            return parseTripleDot();\r\n        }\r\n        if (isAsciiNumber(c)) {\r\n            return parseNumberFromDot(c);\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseTripleDot() {\r\n        if (peekd(1) === $$DOT_2E) {\r\n            ASSERT_skip($$DOT_2E);\r\n            ASSERT_skip($$DOT_2E);\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseNumberFromDot(c) {\r\n        ASSERT_skip(c);\r\n        if (neof()) {\r\n            let d = skipDigits();\r\n            parseExponentMaybe(d);\r\n        }\r\n        return $NUMBER_DEC;\r\n    }\r\n    function parseCR() {\r\n        wasWhite = true;\r\n        if (neof() && peeky($$LF_0A)) {\r\n            ASSERT_skip($$LF_0A);\r\n            return $CRLF;\r\n        }\r\n        return $NL;\r\n    }\r\n    function parseSingleString(lexerFlags) {\r\n        ASSERT(arguments.length === 1, 'need 1 arg');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        return parseAnyString($$SQUOTE_27, $STRING_SINGLE, lexerFlags);\r\n    }\r\n    function parseDoubleString(lexerFlags) {\r\n        ASSERT(arguments.length === 1, 'need 1 arg');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        return parseAnyString($$DQUOTE_22, $STRING_DOUBLE, lexerFlags);\r\n    }\r\n    function parseAnyString(marker, tokenType, lexerFlags) {\r\n        ASSERT(arguments.length === 3, 'need 3 args');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        let bad = false;\r\n        let c;\r\n        while (neof()) {\r\n            c = peek();\r\n            if (c === marker) {\r\n                ASSERT_skip(marker);\r\n                break;\r\n            }\r\n            if (isLfPsLs(c)) {\r\n                bad = true;\r\n                break;\r\n            }\r\n            if (c === $$CR_0D) {\r\n                if (neof() && peeky($$LF_0A))\r\n                    ASSERT_skip($$LF_0A);\r\n                bad = true;\r\n                break;\r\n            }\r\n            ASSERT_skip(c);\r\n            if (c === $$BACKSLASH_5C) {\r\n                bad = parseStringEscape(lexerFlags, NOT_TEMPLATE) === BAD_ESCAPE || bad;\r\n            }\r\n        }\r\n        if (bad || c !== marker) {\r\n            console.warn('Tokenizer $ERROR: unclosed string or illegal escape');\r\n            return $ERROR;\r\n        }\r\n        return tokenType;\r\n    }\r\n    function parseStringEscape(lexerFlags, forTemplate) {\r\n        ASSERT(arguments.length === parseStringEscape.length, 'need args');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let c = peekSkip();\r\n        switch (c) {\r\n            case $$U_75:\r\n                return parseIdentOrStringEscapeUnicode();\r\n            case $$X_78:\r\n                return parseStringEscapeHex();\r\n            case $$0_30:\r\n            case $$1_31:\r\n            case $$2_32:\r\n            case $$3_33:\r\n            case $$4_34:\r\n            case $$5_35:\r\n            case $$6_36:\r\n            case $$7_37:\r\n            case $$8_38:\r\n            case $$9_39:\r\n                return parseStringEscapeOctal(c, forTemplate, lexerFlags);\r\n            case $$CR_0D:\r\n                if (neof() && peeky($$LF_0A))\r\n                    ASSERT_skip($$LF_0A);\r\n                break;\r\n        }\r\n        return GOOD_ESCAPE;\r\n    }\r\n    function parseIdentOrStringEscapeUnicode() {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let c = peek();\r\n        if (c === $$CURLY_L_7B) {\r\n            ASSERT_skip($$CURLY_L_7B);\r\n            return parseStringEscapeUnicodeVary();\r\n        }\r\n        else {\r\n            return parseStringEscapeUnicodeQuad(c);\r\n        }\r\n    }\r\n    function parseStringEscapeUnicodeQuad(a) {\r\n        if (eofd(3))\r\n            return BAD_ESCAPE;\r\n        let b = peekd(1);\r\n        let c = peekd(2);\r\n        let d = peekd(3);\r\n        if (isHex(a) && isHex(b) && isHex(c) && isHex(d)) {\r\n            ASSERT_skip(a);\r\n            ASSERT_skip(b);\r\n            ASSERT_skip(c);\r\n            ASSERT_skip(d);\r\n            return GOOD_ESCAPE;\r\n        }\r\n        else {\r\n            return BAD_ESCAPE;\r\n        }\r\n    }\r\n    function parseStringEscapeUnicodeVary() {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let a = peek();\r\n        if (!isHex(a))\r\n            return BAD_ESCAPE;\r\n        ASSERT_skip(a);\r\n        if (a === $$0_30) {\r\n            if (eof())\r\n                return BAD_ESCAPE;\r\n            a = skipZeroes();\r\n            if (!isHex(a))\r\n                return a === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n            ASSERT_skip(a);\r\n        }\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let b = peek();\r\n        if (!isHex(b))\r\n            return b === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n        ASSERT_skip(b);\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let c = peek();\r\n        if (!isHex(c))\r\n            return c === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n        ASSERT_skip(c);\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let d = peek();\r\n        if (!isHex(d))\r\n            return d === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n        ASSERT_skip(d);\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let e = peek();\r\n        if (!isHex(e))\r\n            return e === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n        ASSERT_skip(e);\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let f = peek();\r\n        if (!isHex(f))\r\n            return f === $$CURLY_R_7D ? GOOD_ESCAPE : BAD_ESCAPE;\r\n        ASSERT_skip(f);\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        if (peek() !== $$CURLY_R_7D)\r\n            return BAD_ESCAPE;\r\n        ASSERT_skip($$CURLY_R_7D);\r\n        if (a === $$0_30)\r\n            return GOOD_ESCAPE;\r\n        if (a === $$1_31 && b === $$0_30)\r\n            return GOOD_ESCAPE;\r\n        return BAD_ESCAPE;\r\n    }\r\n    function skipZeroes() {\r\n        ASSERT(neof(), 'should already been checked');\r\n        let c = peek();\r\n        while (c === $$0_30) {\r\n            ASSERT_skip($$0_30);\r\n            if (eof())\r\n                return 0;\r\n            c = peek();\r\n        }\r\n        return c;\r\n    }\r\n    function parseStringEscapeHex() {\r\n        if (eofd(1))\r\n            return BAD_ESCAPE;\r\n        let a = peek();\r\n        let b = peekd(1);\r\n        if (isHex(a) && isHex(b)) {\r\n            ASSERT_skip(a);\r\n            ASSERT_skip(b);\r\n            return GOOD_ESCAPE;\r\n        }\r\n        else {\r\n            return BAD_ESCAPE;\r\n        }\r\n    }\r\n    function parseStringEscapeOctal(a, forTemplate, lexerFlags) {\r\n        ASSERT(arguments.length === parseStringEscapeOctal.length, 'need args');\r\n        ASSERT(typeof a === 'number', 'first digit ord');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        if ((lexerFlags & LF_STRICT_MODE) === LF_STRICT_MODE || forTemplate === FOR_TEMPLATE) {\r\n            if (a === $$0_30) {\r\n                if (eof())\r\n                    return GOOD_ESCAPE;\r\n                let b = peek();\r\n                if (b < $$0_30 || b > $$9_39)\r\n                    return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        if (a === $$8_38 || a === $$9_39)\r\n            return BAD_ESCAPE;\r\n        return GOOD_ESCAPE;\r\n    }\r\n    function parseSameOrCompound(c) {\r\n        if (neof()) {\r\n            let d = peek();\r\n            if (d === c) {\r\n                ASSERT_skip(c);\r\n            }\r\n            else if (d === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseTemplateString(lexerFlags, fromTick) {\r\n        ASSERT(arguments.length === 2, 'need 2 args');\r\n        ASSERT(typeof lexerFlags === 'number', 'lexerFlags number');\r\n        let badEscapes = false;\r\n        let c;\r\n        while (neof()) {\r\n            c = peek();\r\n            while (c === $$$_24) {\r\n                ASSERT_skip($$$_24);\r\n                if (eof()) {\r\n                    console.warn('Tokenizer $ERROR: unclosed template string');\r\n                    return $ERROR;\r\n                }\r\n                c = peek();\r\n                if (c === $$CURLY_L_7B) {\r\n                    ASSERT_skip($$CURLY_L_7B);\r\n                    return (fromTick ? $TICK_HEAD : $TICK_BODY) | (badEscapes ? $TICK_BAD_ESCAPE : 0);\r\n                }\r\n            }\r\n            if (c === $$TICK_60) {\r\n                ASSERT_skip($$TICK_60);\r\n                return (fromTick ? $TICK_PURE : $TICK_TAIL) | (badEscapes ? $TICK_BAD_ESCAPE : 0);\r\n            }\r\n            ASSERT_skip(c);\r\n            if (c === $$BACKSLASH_5C) {\r\n                badEscapes = parseStringEscape(lexerFlags, FOR_TEMPLATE) || badEscapes;\r\n            }\r\n        }\r\n        console.warn('Tokenizer $ERROR: unclosed template literal');\r\n        return $ERROR;\r\n    }\r\n    function parseLeadingZero(lexerFlags) {\r\n        if (eof())\r\n            return $NUMBER_DEC;\r\n        let c = peek();\r\n        if (isAsciiNumber(c)) {\r\n            skip();\r\n            if (neof())\r\n                skipDigits();\r\n            if ((lexerFlags & LF_STRICT_MODE) === LF_STRICT_MODE) {\r\n                console.warn('Tokenizer $ERROR: \"illegal\" octal escape in strict mode');\r\n                return $ERROR;\r\n            }\r\n            return $NUMBER_OLD;\r\n        }\r\n        else if (c === $$DOT_2E) {\r\n            parseFromFractionDot();\r\n        }\r\n        else if (c === $$X_78 || c === $$X_UC_58) {\r\n            ASSERT_skip(c);\r\n            return parseHex();\r\n        }\r\n        else if (c === $$O_6F || c === $$O_UC_4F) {\r\n            ASSERT_skip(c);\r\n            return parseOctal();\r\n        }\r\n        else if (c === $$B_62 || c === $$B_UC_42) {\r\n            ASSERT_skip(c);\r\n            return parseBinary();\r\n        }\r\n        else if (c === $$E_65 || c === $$E_UC_45) {\r\n            parseExponentMaybe(c);\r\n        }\r\n        return $NUMBER_DEC;\r\n    }\r\n    function parseDecimal() {\r\n        if (neof()) {\r\n            let c = skipDigits();\r\n            if (eof())\r\n                return $NUMBER_DEC;\r\n            if (c === $$DOT_2E)\r\n                parseFromFractionDot();\r\n            else\r\n                parseExponentMaybe(c);\r\n        }\r\n        return $NUMBER_DEC;\r\n    }\r\n    function skipDigits() {\r\n        let c = peek();\r\n        while (isAsciiNumber(c)) {\r\n            ASSERT_skip(c);\r\n            if (eof())\r\n                return 0;\r\n            c = peek();\r\n        }\r\n        return c;\r\n    }\r\n    function parseExponentMaybe(c) {\r\n        if (neofd(1) && c === $$E_65 || c === $$E_UC_45) {\r\n            let d = peekd(1);\r\n            let e = d;\r\n            if (d === $$DASH_2D || d === $$PLUS_2B) {\r\n                if (eofd(2)) {\r\n                    return;\r\n                }\r\n                e = peekd(2);\r\n            }\r\n            if (isAsciiNumber(e)) {\r\n                ASSERT(peek() === $$E_65 || peek() === $$E_UC_45, 'should skip an e');\r\n                skip();\r\n                if (d === $$DASH_2D || d === $$PLUS_2B) {\r\n                    ASSERT(peek() === $$DASH_2D || peek() === $$PLUS_2B, 'should skip + or -');\r\n                    skip();\r\n                }\r\n                ASSERT(isAsciiNumber(e), 'should be digit');\r\n                skip();\r\n                if (neof())\r\n                    skipDigits();\r\n            }\r\n        }\r\n    }\r\n    function parseFromFractionDot() {\r\n        ASSERT_skip($$DOT_2E);\r\n        if (neof()) {\r\n            let c = skipDigits();\r\n            parseExponentMaybe(c);\r\n        }\r\n    }\r\n    function parseHex() {\r\n        if (eof()) {\r\n            console.warn('Tokenizer $ERROR: 0x is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        if (!isHex(peek())) {\r\n            console.warn('Tokenizer $ERROR: 0x is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        while (neof() && isHex(peek()))\r\n            skip();\r\n        return $NUMBER_HEX;\r\n    }\r\n    function isHex(ord) {\r\n        if (isAsciiNumber(ord))\r\n            return true;\r\n        let x = ord | 32;\r\n        if (x >= $$A_61 && x <= $$F_66)\r\n            return true;\r\n        return false;\r\n    }\r\n    function parseOctal() {\r\n        if (eof()) {\r\n            console.warn('Tokenizer $ERROR: 0o is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        if (!isOctal(peek())) {\r\n            console.warn('Tokenizer $ERROR: 0o is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        while (neof() && isOctal(peek()))\r\n            skip();\r\n        return $NUMBER_OCT;\r\n    }\r\n    function isOctal(ord) {\r\n        return ord >= $$0_30 && ord <= $$7_37;\r\n    }\r\n    function parseBinary() {\r\n        if (eof()) {\r\n            console.warn('Tokenizer $ERROR: 0b is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        if (!isBinary(peek())) {\r\n            console.warn('Tokenizer $ERROR: 0b is illegal without a digit');\r\n            return $ERROR;\r\n        }\r\n        while (neof() && isBinary(peek()))\r\n            skip();\r\n        return $NUMBER_BIN;\r\n    }\r\n    function isBinary(ord) {\r\n        return ord === $$0_30 || ord === $$1_31;\r\n    }\r\n    function parseExcl() {\r\n        if (eof())\r\n            return $PUNCTUATOR;\r\n        if (peeky($$IS_3D)) {\r\n            ASSERT_skip($$IS_3D);\r\n            if (neof() && peeky($$IS_3D)) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n            return $PUNCTUATOR;\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseStar() {\r\n        if (neof()) {\r\n            let c = peek();\r\n            if (c === $$STAR_2A) {\r\n                ASSERT_skip($$STAR_2A);\r\n                if (neof() && peeky($$IS_3D)) {\r\n                    ASSERT_skip($$IS_3D);\r\n                }\r\n            }\r\n            else if (c === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseIdentifierRest(cLeading, prev) {\r\n        ASSERT(typeof cLeading === 'number', 'should get the parsed ident start');\r\n        ASSERT(isIdentStart(cLeading, CODEPOINT_FROM_ESCAPE) !== INVALID_IDENT_CHAR, 'ident start should already have been confirmed');\r\n        ASSERT(typeof prev === 'string', 'prev should be string so far or empty');\r\n        return _parseIdentifierRest(cLeading, prev);\r\n    }\r\n    function _parseIdentifierRest(c, prev) {\r\n        ASSERT(typeof c === 'number', 'c is an ord');\r\n        ASSERT(typeof prev === 'string', 'prev should be string so far or empty');\r\n        if (neof()) {\r\n            let c = peek();\r\n            do {\r\n                if (c === $$BACKSLASH_5C) {\r\n                    if (peekd(1) === $$U_75) {\r\n                        ASSERT_skip($$BACKSLASH_5C);\r\n                        ASSERT_skip($$U_75);\r\n                        c = parseRegexUnicodeEscape2();\r\n                        if (c === INVALID_IDENT_CHAR || c === CHARCLASS_BAD) {\r\n                            regexSyntaxError('Found invalid quad unicode escape, the escape must be part of the ident so the ident is an error');\r\n                            return $ERROR;\r\n                        }\r\n                        if ((c & CHARCLASS_BAD_SANS_U_FLAG) === CHARCLASS_BAD_SANS_U_FLAG) {\r\n                            c = c ^ CHARCLASS_BAD_SANS_U_FLAG;\r\n                        }\r\n                        let wide = isIdentRestChr(c, CODEPOINT_FROM_ESCAPE);\r\n                        if (wide === INVALID_IDENT_CHAR) {\r\n                            regexSyntaxError('An escape that might be part of an identifier cannot be anything else so if it is invalid it must be an error');\r\n                            return $ERROR;\r\n                        }\r\n                        if (wide === VALID_SINGLE_CHAR)\r\n                            prev += String.fromCharCode(c);\r\n                        else\r\n                            prev += String.fromCodePoint(c);\r\n                    }\r\n                    else {\r\n                        regexSyntaxError('Only unicode escapes are legal in identifier names');\r\n                        return $ERROR;\r\n                    }\r\n                }\r\n                else {\r\n                    let wide = isIdentRestChr(c, pointer);\r\n                    if (wide === INVALID_IDENT_CHAR)\r\n                        break;\r\n                    if (wide === VALID_DOUBLE_CHAR) {\r\n                        prev += input.slice(pointer, pointer + 2);\r\n                        skip();\r\n                        skip();\r\n                    }\r\n                    else {\r\n                        ASSERT(wide === VALID_SINGLE_CHAR, 'enum');\r\n                        ASSERT_skip(c);\r\n                        prev += String.fromCharCode(c);\r\n                    }\r\n                }\r\n                if (eof())\r\n                    break;\r\n                c = peek();\r\n            } while (true);\r\n            if (c === $$BACKSLASH_5C) {\r\n                ASSERT_skip($$BACKSLASH_5C);\r\n                return parseIdentFromUnicodeEscape(NON_START, prev);\r\n            }\r\n        }\r\n        lastParsedIdent = prev;\r\n        return $IDENT;\r\n    }\r\n    function parseIdentFromUnicodeEscape(fromStart, prev) {\r\n        ASSERT(typeof prev === 'string', 'prev should be string so far or empty');\r\n        if (eof()) {\r\n            lastParsedIdent = prev;\r\n            console.warn('Tokenizer $ERROR: encountered backslash at end of input');\r\n            return $ERROR;\r\n        }\r\n        if (peeky($$U_75)) {\r\n            ASSERT_skip($$U_75);\r\n        }\r\n        else {\r\n            THROW('Only unicode escapes are supported in identifier escapes');\r\n        }\r\n        let start = pointer;\r\n        if (parseIdentOrStringEscapeUnicode() === GOOD_ESCAPE) {\r\n            let data;\r\n            if (peekyd(start - pointer, $$CURLY_L_7B)) {\r\n                data = slice(start + 1, pointer);\r\n                if (eof()) {\r\n                    lastParsedIdent = prev;\r\n                    console.warn('Tokenizer $ERROR: Identifier contained dynamic unicode escape that was not closed');\r\n                    return $ERROR;\r\n                }\r\n                if (peeky($$CURLY_R_7D)) {\r\n                    ASSERT_skip($$CURLY_R_7D);\r\n                }\r\n                else {\r\n                    lastParsedIdent = prev;\r\n                    console.warn('Tokenizer $ERROR: Identifier contained dynamic unicode escape that was not closed');\r\n                    return $ERROR;\r\n                }\r\n            }\r\n            else {\r\n                data = slice(start, pointer);\r\n            }\r\n            ASSERT(data.length > 0, 'a valid escape should contain at least one digit');\r\n            ASSERT(data.charCodeAt(0) !== $$CURLY_L_7B && isHex(data.charCodeAt(0)), 'if wrapped, the opener should be removed');\r\n            ASSERT(data.charCodeAt(data.length - 1) !== $$CURLY_R_7D && isHex(data.charCodeAt(data.length - 1)), 'if wrapped, the closer should not be consumed yet');\r\n            let ord = parseInt(data, 16);\r\n            if (ord > 0xffff)\r\n                prev += String.fromCodePoint(ord);\r\n            else\r\n                prev += String.fromCharCode(ord);\r\n            if (fromStart === FIRST_CHAR && isIdentStart(ord, CODEPOINT_FROM_ESCAPE) !== INVALID_IDENT_CHAR) {\r\n                return _parseIdentifierRest(ord, prev);\r\n            }\r\n            else if (fromStart === NON_START && isIdentRestChr(ord, CODEPOINT_FROM_ESCAPE) !== INVALID_IDENT_CHAR) {\r\n                return _parseIdentifierRest(ord, prev);\r\n            }\r\n            else {\r\n                lastParsedIdent = prev;\r\n                console.warn('Tokenizer $ERROR: identifier escape did not yield a valid identifier character');\r\n                return $ERROR;\r\n            }\r\n        }\r\n        _parseIdentifierRest(0, prev);\r\n        lastParsedIdent = prev;\r\n        console.warn('Tokenizer $ERROR: only unicode escapes are supported in identifiers');\r\n        return $ERROR;\r\n    }\r\n    function isIdentStart(c, offset) {\r\n        ASSERT(isIdentStart.length === arguments.length, 'all args');\r\n        if (isAsciiLetter(c))\r\n            return VALID_SINGLE_CHAR;\r\n        if (c === $$$_24 || c === $$LODASH_5F)\r\n            return VALID_SINGLE_CHAR;\r\n        if (c > 127) {\r\n            return veryExpensiveUnicodeCheck(c, offset, ID_START_REGEX);\r\n        }\r\n        return INVALID_IDENT_CHAR;\r\n    }\r\n    function isIdentRestChr(c, offset) {\r\n        ASSERT(isIdentRestChr.length === arguments.length, 'all args');\r\n        if (isAsciiLetter(c))\r\n            return VALID_SINGLE_CHAR;\r\n        if (isAsciiNumber(c))\r\n            return VALID_SINGLE_CHAR;\r\n        if (c === $$$_24 || c === $$LODASH_5F)\r\n            return VALID_SINGLE_CHAR;\r\n        if (c > 127) {\r\n            if (c === $$ZWNJ_200C || c === $$ZWJ_200D)\r\n                return VALID_SINGLE_CHAR;\r\n            return veryExpensiveUnicodeCheck(c, offset, ID_CONTINUE_REGEX);\r\n        }\r\n        return INVALID_IDENT_CHAR;\r\n    }\r\n    function veryExpensiveUnicodeCheck(c, offset, regexScanner) {\r\n        if (offset !== CODEPOINT_FROM_ESCAPE) {\r\n            c = input.codePointAt(offset);\r\n        }\r\n        let s = String.fromCodePoint(c);\r\n        ASSERT(s.length === 1 || s.length === 2, 'up to four bytes...');\r\n        if (regexScanner.test(s)) {\r\n            return s.length === 1 ? VALID_SINGLE_CHAR : VALID_DOUBLE_CHAR;\r\n        }\r\n        return INVALID_IDENT_CHAR;\r\n    }\r\n    function isAsciiLetter(c) {\r\n        let d = c | 32;\r\n        return d >= $$A_61 && d <= $$Z_7A;\r\n    }\r\n    function isAsciiNumber(c) {\r\n        return c >= $$0_30 && c <= $$9_39;\r\n    }\r\n    function parseCompoundAssignment() {\r\n        if (neof() && peeky($$IS_3D)) {\r\n            ASSERT_skip($$IS_3D);\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseFwdSlash(lexerFlags) {\r\n        if (eof()) {\r\n            return $PUNCTUATOR;\r\n        }\r\n        let c = peek();\r\n        if (c === $$FWDSLASH_2F) {\r\n            ASSERT_skip($$FWDSLASH_2F);\r\n            wasWhite = true;\r\n            return parseSingleComment();\r\n        }\r\n        else if (c === $$STAR_2A) {\r\n            ASSERT_skip($$STAR_2A);\r\n            return parseMultiComment();\r\n        }\r\n        else {\r\n            return parseSingleFwdSlash(lexerFlags, c);\r\n        }\r\n    }\r\n    function parseSingleFwdSlash(lexerFlags, c) {\r\n        if ((lexerFlags & LF_FOR_REGEX) === LF_FOR_REGEX) {\r\n            return parseRegex(c);\r\n        }\r\n        else {\r\n            if (c === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n            return $PUNCTUATOR;\r\n        }\r\n    }\r\n    function parseSingleComment() {\r\n        consumedComment = true;\r\n        while (neof()) {\r\n            let c = peek();\r\n            if (c === $$CR_0D || isLfPsLs(c)) {\r\n                break;\r\n            }\r\n            skip();\r\n        }\r\n        return $COMMENT_SINGLE;\r\n    }\r\n    function parseMultiComment() {\r\n        consumedComment = true;\r\n        let c;\r\n        while (neof()) {\r\n            c = peekSkip();\r\n            while (c === $$STAR_2A) {\r\n                if (eof()) {\r\n                    console.warn('Tokenizer $ERROR: unclosed multi line comment, early eof after star');\r\n                    return $ERROR;\r\n                }\r\n                c = peekSkip();\r\n                if (c === $$FWDSLASH_2F) {\r\n                    wasWhite = true;\r\n                    return $COMMENT_MULTI;\r\n                }\r\n            }\r\n            if (c === $$CR_0D || isLfPsLs(c)) {\r\n                consumedNewline = true;\r\n            }\r\n        }\r\n        console.warn('Tokenizer $ERROR: unclosed multi line comment, early eof');\r\n        return $ERROR;\r\n    }\r\n    function parseCommentHtmlOpen() {\r\n        parseSingleComment();\r\n        wasWhite = true;\r\n        return $COMMENT_HTML;\r\n    }\r\n    function parseCommentHtmlClose() {\r\n        parseSingleComment();\r\n        wasWhite = true;\r\n        return $COMMENT_HTML;\r\n    }\r\n    function parseEqual() {\r\n        if (neof()) {\r\n            let c = peek();\r\n            if (c === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n                if (neof() && peeky($$IS_3D)) {\r\n                    ASSERT_skip($$IS_3D);\r\n                }\r\n            }\r\n            else if (c === $$GT_3E) {\r\n                ASSERT_skip($$GT_3E);\r\n            }\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseLtPunctuator() {\r\n        if (neof()) {\r\n            let c = peek();\r\n            if (c === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n            else if (c === $$LT_3C) {\r\n                ASSERT_skip($$LT_3C);\r\n                if (neof() && peeky($$IS_3D)) {\r\n                    ASSERT_skip($$IS_3D);\r\n                }\r\n            }\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseGtPunctuator() {\r\n        if (neof()) {\r\n            let c = peek();\r\n            if (c === $$IS_3D) {\r\n                ASSERT_skip($$IS_3D);\r\n            }\r\n            else if (c === $$GT_3E) {\r\n                ASSERT_skip($$GT_3E);\r\n                if (neof()) {\r\n                    c = peek();\r\n                    if (c === $$IS_3D) {\r\n                        ASSERT_skip($$IS_3D);\r\n                    }\r\n                    else if (c === $$GT_3E) {\r\n                        ASSERT_skip($$GT_3E);\r\n                        if (neof() && peeky($$IS_3D)) {\r\n                            ASSERT_skip($$IS_3D);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return $PUNCTUATOR;\r\n    }\r\n    function parseNewline() {\r\n        consumedNewline = true;\r\n        wasWhite = true;\r\n        return $NL;\r\n    }\r\n    function parseBackslash() {\r\n        return parseIdentFromUnicodeEscape(FIRST_CHAR, '');\r\n    }\r\n    let lastRegexState = NOT_A_REGEX_ERROR;\r\n    function regexSyntaxError(desc, ...rest) {\r\n        lastRegexState = desc + (rest.length ? ': [' + rest.join(', ') + ']' : '');\r\n        console.warn('Potential tokenizer error:', lastRegexState);\r\n        return ALWAYS_BAD;\r\n    }\r\n    let nCapturingParens = 0;\r\n    let largestBackReference = 0;\r\n    function parseRegex(c) {\r\n        nCapturingParens = 0;\r\n        largestBackReference = 0;\r\n        lastRegexState = NOT_A_REGEX_ERROR;\r\n        let ustatusBody = parseRegexBody(c);\r\n        let ustatusFlags = parseRegexFlags();\r\n        if (nCapturingParens < largestBackReference) {\r\n            if (webCompat === WEB_COMPAT_ON) {\r\n                ustatusBody = updateRegexUflagState(ustatusBody, GOOD_SANS_U_FLAG, 'Regex was bad with and without u-flag');\r\n            }\r\n            else {\r\n                ustatusBody = regexSyntaxError('Largest back reference index exceeded the number of capturing groups');\r\n            }\r\n        }\r\n        if (lastRegexState !== NOT_A_REGEX_ERROR) {\r\n            console.warn('Tokenizer $ERROR: ' + lastRegexState);\r\n            return $ERROR;\r\n        }\r\n        if (ustatusBody === ALWAYS_BAD) {\r\n            console.warn('Tokenizer $ERROR: regex body had bad escape');\r\n            return $ERROR;\r\n        }\r\n        if (ustatusFlags === ALWAYS_BAD) {\r\n            console.warn('Tokenizer $ERROR: regex body had bad escape or regex flags occurred twice (should already have called THROW for this)');\r\n            return $ERROR;\r\n        }\r\n        if (ustatusBody === GOOD_WITH_U_FLAG) {\r\n            if (ustatusFlags === GOOD_WITH_U_FLAG)\r\n                return $REGEXU;\r\n            console.warn('Tokenizer $ERROR: regex body had an escape that is only valid with an u flag');\r\n            regexSyntaxError('Regex had syntax that is only valid with the u-flag and flag was in fact not present');\r\n            return $ERROR;\r\n        }\r\n        if (ustatusBody === GOOD_SANS_U_FLAG) {\r\n            if (ustatusFlags !== GOOD_WITH_U_FLAG)\r\n                return $REGEX;\r\n            console.warn('Tokenizer $ERROR: regex body had an escape or char class range that is invalid with a u flag');\r\n            regexSyntaxError('Regex had syntax that is invalid with u-flag and flag was in fact present');\r\n            return $ERROR;\r\n        }\r\n        ASSERT(ustatusBody === ALWAYS_GOOD, 'the body had no syntax depending on a u flag so is always good');\r\n        if (ustatusFlags === GOOD_WITH_U_FLAG)\r\n            return $REGEXU;\r\n        return $REGEX;\r\n    }\r\n    function parseRegexBody(c) {\r\n        ASSERT(c !== $$STAR_2A && c !== $$FWDSLASH_2F, 'earlier checks should already have peeked for a comment token');\r\n        return _parseRegexBody(c, 0, ALWAYS_GOOD);\r\n    }\r\n    function _parseRegexBody(c, groupLevel, uflagStatus) {\r\n        ASSERT(typeof groupLevel === 'number' && groupLevel >= 0, 'valid group level');\r\n        ASSERT(typeof uflagStatus === 'number' && uflagStatus >= 0, 'valid flag');\r\n        let afterAtom = false;\r\n        let badStart = c === $$STAR_2A || c === $$PLUS_2B || c === $$QMARK_3F || c === $$CURLY_L_7B;\r\n        if (badStart) {\r\n            if (c === $$CURLY_L_7B && webCompat === WEB_COMPAT_ON) {\r\n                uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Regex was bad with and without u-flag');\r\n            }\r\n            else {\r\n                uflagStatus = regexSyntaxError('Started with a quantifier but that is not allowed');\r\n            }\r\n        }\r\n        let groupNames = {};\r\n        let namedBackRefs = [];\r\n        do {\r\n            switch (c) {\r\n                case $$FWDSLASH_2F:\r\n                    if (groupLevel !== 0) {\r\n                        return regexSyntaxError('Unclosed group');\r\n                    }\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        for (let i = 0, l = namedBackRefs.length; i < l; ++i) {\r\n                            if (groupNames['#' + namedBackRefs[i]] === undefined) {\r\n                                THROW('Named back reference \\\\k<' + namedBackRefs[i] + '> was not defined in this regex: ' + JSON.stringify(groupNames).replace(/\"/g, ''));\r\n                            }\r\n                        }\r\n                    }\r\n                    ASSERT_skip($$FWDSLASH_2F);\r\n                    return uflagStatus;\r\n                case $$OR_7C:\r\n                    ASSERT_skip($$OR_7C);\r\n                    afterAtom = false;\r\n                    break;\r\n                case $$XOR_5E:\r\n                    ASSERT_skip($$XOR_5E);\r\n                    afterAtom = false;\r\n                    break;\r\n                case $$DOT_2E:\r\n                    ASSERT_skip($$DOT_2E);\r\n                    afterAtom = true;\r\n                    break;\r\n                case $$$_24:\r\n                    ASSERT_skip($$$_24);\r\n                    afterAtom = false;\r\n                    break;\r\n                case $$BACKSLASH_5C:\r\n                    ASSERT_skip($$BACKSLASH_5C);\r\n                    afterAtom = true;\r\n                    if (eof()) {\r\n                        uflagStatus = regexSyntaxError('Early EOF');\r\n                    }\r\n                    else {\r\n                        let d = peek();\r\n                        if (d === $$B_62 || d === $$B_UC_42) {\r\n                            ASSERT_skip(d);\r\n                            afterAtom = false;\r\n                        }\r\n                        else {\r\n                            let escapeStatus = parseRegexAtomEscape(d, namedBackRefs);\r\n                            if (escapeStatus === ALWAYS_BAD) {\r\n                                uflagStatus = ALWAYS_BAD;\r\n                            }\r\n                            else if (escapeStatus === GOOD_SANS_U_FLAG) {\r\n                                uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Unknown reason that is only an error with u-flag');\r\n                            }\r\n                            else if (escapeStatus === GOOD_WITH_U_FLAG) {\r\n                                uflagStatus = updateRegexUflagState(uflagStatus, GOOD_WITH_U_FLAG, 'Unknown reason that is only an error without u-flag');\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case $$PAREN_L_28:\r\n                    let wasAssertion = false;\r\n                    let wasUnfixableAssertion = false;\r\n                    ASSERT_skip($$PAREN_L_28);\r\n                    afterAtom = false;\r\n                    if (eof()) {\r\n                        uflagStatus = regexSyntaxError('Encountered early EOF');\r\n                        break;\r\n                    }\r\n                    c = peek();\r\n                    if (c === $$QMARK_3F) {\r\n                        ASSERT_skip($$QMARK_3F);\r\n                        if (eof()) {\r\n                            uflagStatus = regexSyntaxError('Encountered early EOF');\r\n                            break;\r\n                        }\r\n                        c = peek();\r\n                        if (c === $$COLON_3A || c === $$IS_3D || c === $$EXCL_21 || c === $$LT_3C) {\r\n                            if (c === $$LT_3C) {\r\n                                ASSERT_skip($$LT_3C);\r\n                                c = peek();\r\n                                if (c === $$IS_3D || c === $$EXCL_21) {\r\n                                    if (!supportRegexLookbehinds) {\r\n                                        THROW('Lookbehinds in regular expressions are not supported in the currently targeted language version');\r\n                                    }\r\n                                    ASSERT_skip(c);\r\n                                    wasUnfixableAssertion = true;\r\n                                }\r\n                                else if (!supportRegexNamedGroups) {\r\n                                    ASSERT_skip(c);\r\n                                    uflagStatus = regexSyntaxError('The lookbehind group `(?<` must be followed by `=` or `!` but wasnt [ord=' + c + ']');\r\n                                    break;\r\n                                }\r\n                                else if (c === $$BACKSLASH_5C) {\r\n                                    ASSERT_skip($$BACKSLASH_5C);\r\n                                    ASSERT_skip($$U_75);\r\n                                    c = parseRegexUnicodeEscape2();\r\n                                    if (c === INVALID_IDENT_CHAR || c === CHARCLASS_BAD) {\r\n                                        uflagStatus = regexSyntaxError('Found invalid quad unicode escape');\r\n                                        break;\r\n                                    }\r\n                                    let wasExtendedEscape = false;\r\n                                    if ((c & CHARCLASS_BAD_SANS_U_FLAG) === CHARCLASS_BAD_SANS_U_FLAG) {\r\n                                        uflagStatus = updateRegexUflagStateCharClass(uflagStatus, CHARCLASS_BAD_SANS_U_FLAG, 'Encountered extended unicode escape `\\\\u{}` which is only valid with u-flag but this regex is invalid with u-flag');\r\n                                        c = c ^ CHARCLASS_BAD_SANS_U_FLAG;\r\n                                        wasExtendedEscape = true;\r\n                                    }\r\n                                    let wide = isIdentStart(c, CODEPOINT_FROM_ESCAPE);\r\n                                    if (wide === INVALID_IDENT_CHAR) {\r\n                                        uflagStatus = regexSyntaxError('Named capturing group named contained an invalid unicode escaped char');\r\n                                        break;\r\n                                    }\r\n                                    let result = parseRegexCapturingGroupNameRemainder(c, groupNames);\r\n                                    if (result !== ALWAYS_GOOD) {\r\n                                        uflagStatus = result;\r\n                                        break;\r\n                                    }\r\n                                    c = $$GT_3E;\r\n                                }\r\n                                else {\r\n                                    let wide = isIdentStart(c, pointer);\r\n                                    if (wide === VALID_DOUBLE_CHAR) {\r\n                                        skip();\r\n                                        skip();\r\n                                    }\r\n                                    else {\r\n                                        ASSERT(wide === VALID_SINGLE_CHAR || wide === INVALID_IDENT_CHAR, 'enum');\r\n                                        ASSERT_skip(c);\r\n                                    }\r\n                                    if (wide === INVALID_IDENT_CHAR) {\r\n                                        if (webCompat === WEB_COMPAT_OFF) {\r\n                                            uflagStatus = regexSyntaxError('Could not parse `(?<` as a named capturing group and it was not an assertion; bailing', c);\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    let result = parseRegexCapturingGroupNameRemainder(c, groupNames);\r\n                                    if (result !== ALWAYS_GOOD) {\r\n                                        uflagStatus = result;\r\n                                        break;\r\n                                    }\r\n                                    c = $$GT_3E;\r\n                                }\r\n                            }\r\n                            else if (c === $$IS_3D || c === $$EXCL_21) {\r\n                                ASSERT_skip(c);\r\n                                wasAssertion = true;\r\n                            }\r\n                            if (eof()) {\r\n                                uflagStatus = regexSyntaxError('Encountered early EOF');\r\n                                break;\r\n                            }\r\n                            c = peek();\r\n                        }\r\n                        else {\r\n                            uflagStatus = regexSyntaxError('Illegal character after pseudo group marker `(?` [ord=' + c + ']');\r\n                        }\r\n                    }\r\n                    else {\r\n                        ++nCapturingParens;\r\n                    }\r\n                    let subbad = _parseRegexBody(c, groupLevel + 1, ALWAYS_GOOD);\r\n                    c = peek();\r\n                    if ((wasAssertion || wasUnfixableAssertion) && (c === $$QMARK_3F || c === $$CURLY_L_7B || c === $$STAR_2A || c === $$PLUS_2B)) {\r\n                        if (wasAssertion && webCompat === WEB_COMPAT_ON) {\r\n                            uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Regex Assertion \"atoms\" can not be quantified (so things like `^`, `$`, and `?=` can not have `*`, `+`, `?`, or `{` following it)');\r\n                        }\r\n                        else {\r\n                            uflagStatus = regexSyntaxError('Regex Assertion \"atoms\" can not be quantified (so things like `^`, `$`, and `?=` can not have `*`, `+`, `?`, or `{` following it)');\r\n                        }\r\n                    }\r\n                    afterAtom = true;\r\n                    if (subbad === ALWAYS_BAD) {\r\n                        uflagStatus = ALWAYS_BAD;\r\n                    }\r\n                    else if (subbad === GOOD_SANS_U_FLAG) {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Unknown reason that is only an error with u-flag');\r\n                    }\r\n                    else if (subbad === GOOD_WITH_U_FLAG) {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_WITH_U_FLAG, 'Unknown reason that is only an error without u-flag');\r\n                    }\r\n                    break;\r\n                case $$PAREN_R_29:\r\n                    ASSERT_skip($$PAREN_R_29);\r\n                    if (groupLevel > 0)\r\n                        return uflagStatus;\r\n                    uflagStatus = regexSyntaxError('Found unescaped closing paren `)` without a group being open');\r\n                    afterAtom = true;\r\n                    break;\r\n                case $$SQUARE_L_5B:\r\n                    ASSERT_skip($$SQUARE_L_5B);\r\n                    let charClassEscapeStatus = parseRegexCharClass();\r\n                    if (charClassEscapeStatus === ALWAYS_BAD) {\r\n                        uflagStatus = ALWAYS_BAD;\r\n                    }\r\n                    else if (charClassEscapeStatus === GOOD_SANS_U_FLAG) {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Unknown reason that is only an error with u-flag');\r\n                    }\r\n                    else if (charClassEscapeStatus === GOOD_WITH_U_FLAG) {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_WITH_U_FLAG, 'Unknown reason that is only an error without u-flag');\r\n                    }\r\n                    afterAtom = true;\r\n                    break;\r\n                case $$SQUARE_R_5D:\r\n                    ASSERT_skip($$SQUARE_R_5D);\r\n                    if (webCompat === WEB_COMPAT_ON) {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Regex was bad with and without u-flag');\r\n                    }\r\n                    else {\r\n                        uflagStatus = regexSyntaxError('Encountered unescaped closing square bracket `]` while not parsing a character class');\r\n                    }\r\n                    afterAtom = true;\r\n                    break;\r\n                case $$STAR_2A:\r\n                case $$PLUS_2B:\r\n                case $$QMARK_3F:\r\n                    ASSERT_skip(c);\r\n                    if (afterAtom) {\r\n                        afterAtom = false;\r\n                        if (neof()) {\r\n                            if (peeky($$QMARK_3F)) {\r\n                                ASSERT_skip($$QMARK_3F);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        uflagStatus = regexSyntaxError('Encountered unescaped quantifier (ord=' + c + ') without a value to quantify');\r\n                    }\r\n                    break;\r\n                case $$CURLY_L_7B:\r\n                    ASSERT_skip($$CURLY_L_7B);\r\n                    if (afterAtom) {\r\n                        if (!parseRegexCurlyQuantifier() && webCompat === WEB_COMPAT_OFF) {\r\n                            uflagStatus = regexSyntaxError('Encountered unescaped closing curly `}` while not parsing a quantifier');\r\n                        }\r\n                        if (neof() && peeky($$QMARK_3F)) {\r\n                            ASSERT_skip($$QMARK_3F);\r\n                        }\r\n                        afterAtom = false;\r\n                    }\r\n                    else {\r\n                        if (webCompat === WEB_COMPAT_ON) {\r\n                            uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Regex was bad with and without u-flag');\r\n                        }\r\n                        else {\r\n                            uflagStatus = regexSyntaxError('Encountered unescaped opening curly `}` and the previous character was not part of something quantifiable');\r\n                        }\r\n                    }\r\n                    break;\r\n                case $$CURLY_R_7D:\r\n                    ASSERT_skip($$CURLY_R_7D);\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        uflagStatus = regexSyntaxError('Encountered unescaped closing curly `}` while not parsing a quantifier');\r\n                        afterAtom = false;\r\n                    }\r\n                    else {\r\n                        uflagStatus = updateRegexUflagState(uflagStatus, GOOD_SANS_U_FLAG, 'Found a rhs curly as an Atom, only valid without u-flag and with web compat mode, but already found something that invalidates not having the u-flag so cant validate this regex');\r\n                        afterAtom = false;\r\n                    }\r\n                    break;\r\n                case $$CR_0D:\r\n                case $$LF_0A:\r\n                case $$PS_2028:\r\n                case $$LS_2029:\r\n                    return regexSyntaxError('Encountered early EOF');\r\n                default:\r\n                    ASSERT_skip(c);\r\n                    afterAtom = true;\r\n            }\r\n            if (eof())\r\n                break;\r\n            c = peek();\r\n        } while (true);\r\n        return regexSyntaxError('Found EOF before regex was closed');\r\n    }\r\n    function parseRegexCapturingGroupNameRemainder(firstCharOrd, groupNames) {\r\n        if (peek() === $$GT_3E) {\r\n            lastParsedIdent = String.fromCodePoint(firstCharOrd);\r\n        }\r\n        else {\r\n            parseIdentifierRest(firstCharOrd, '');\r\n        }\r\n        let name = lastParsedIdent;\r\n        if (groupNames['#' + name]) {\r\n            return regexSyntaxError('Each group name can only be declared once: `' + name + '`');\r\n        }\r\n        groupNames['#' + name] = true;\r\n        ++nCapturingParens;\r\n        if (!peeky($$GT_3E)) {\r\n            if (webCompat === WEB_COMPAT_OFF) {\r\n                return regexSyntaxError('Missing closing angle bracket of name of group');\r\n            }\r\n        }\r\n        ASSERT(input[pointer] === '>', 'to be clear, call site assumes this');\r\n        return ALWAYS_GOOD;\r\n    }\r\n    function parseRegexAtomEscape(c, namedBackRefs) {\r\n        switch (c) {\r\n            case $$U_75:\r\n                ASSERT_skip($$U_75);\r\n                return parseRegexUnicodeEscape();\r\n            case $$X_78:\r\n                ASSERT_skip(c);\r\n                if (eof())\r\n                    return regexSyntaxError('Encountered early EOF while parsing hex escape (1)');\r\n                let a = peek();\r\n                if (!isHex(a))\r\n                    if (webCompat === WEB_COMPAT_ON) {\r\n                        return GOOD_SANS_U_FLAG;\r\n                    }\r\n                    else {\r\n                        return regexSyntaxError('First char of hex escape not a valid digit');\r\n                    }\r\n                ASSERT_skip(a);\r\n                if (eof())\r\n                    return regexSyntaxError('Encountered early EOF while parsing hex escape (2)');\r\n                let b = peek();\r\n                if (!isHex(b)) {\r\n                    if (webCompat === WEB_COMPAT_ON) {\r\n                        return GOOD_SANS_U_FLAG;\r\n                    }\r\n                    else {\r\n                        return regexSyntaxError('Second char of hex escape not a valid digit');\r\n                    }\r\n                }\r\n                ASSERT_skip(b);\r\n                return ALWAYS_GOOD;\r\n            case $$C_63:\r\n                ASSERT_skip($$C_63);\r\n                if (eof())\r\n                    return regexSyntaxError('Encountered early EOF while parsing char escape');\r\n                let d = peek();\r\n                if (isAsciiLetter(d)) {\r\n                    ASSERT_skip(d);\r\n                    return ALWAYS_GOOD;\r\n                }\r\n                if (webCompat === WEB_COMPAT_ON) {\r\n                    return GOOD_SANS_U_FLAG;\r\n                }\r\n                else {\r\n                    return regexSyntaxError('Illegal char escape char (ord=' + d);\r\n                }\r\n            case $$F_66:\r\n                ASSERT_skip(c);\r\n                return ALWAYS_GOOD;\r\n            case $$N_6E:\r\n            case $$R_72:\r\n            case $$T_74:\r\n            case $$V_76:\r\n            case $$D_64:\r\n            case $$D_UC_44:\r\n            case $$S_73:\r\n            case $$S_UC_53:\r\n            case $$W_77:\r\n            case $$W_UC_57:\r\n                ASSERT_skip(c);\r\n                return ALWAYS_GOOD;\r\n            case $$P_70:\r\n            case $$P_UC_50:\r\n                let regexPropState = parseRegexPropertyEscape(c);\r\n                if (regexPropState === ALWAYS_BAD) {\r\n                    return ALWAYS_BAD;\r\n                }\r\n                else if (regexPropState === GOOD_SANS_U_FLAG) {\r\n                    if (webCompat === WEB_COMPAT_ON)\r\n                        return GOOD_SANS_U_FLAG;\r\n                    return ALWAYS_BAD;\r\n                }\r\n                else {\r\n                    ASSERT(regexPropState === GOOD_WITH_U_FLAG, 'parseRegexPropertyEscape should not return ALWAYS_GOOD and this is an enum');\r\n                    if (webCompat === WEB_COMPAT_ON)\r\n                        return ALWAYS_GOOD;\r\n                    return GOOD_WITH_U_FLAG;\r\n                }\r\n            case $$XOR_5E:\r\n            case $$$_24:\r\n            case $$BACKSLASH_5C:\r\n            case $$DOT_2E:\r\n            case $$STAR_2A:\r\n            case $$PLUS_2B:\r\n            case $$QMARK_3F:\r\n            case $$PAREN_L_28:\r\n            case $$PAREN_R_29:\r\n            case $$SQUARE_L_5B:\r\n            case $$SQUARE_R_5D:\r\n            case $$CURLY_L_7B:\r\n            case $$CURLY_R_7D:\r\n            case $$OR_7C:\r\n                ASSERT_skip(c);\r\n                return ALWAYS_GOOD;\r\n            case $$0_30:\r\n                ASSERT_skip($$0_30);\r\n                if (eof())\r\n                    return ALWAYS_GOOD;\r\n                if (isAsciiNumber(peek())) {\r\n                    if (webCompat === WEB_COMPAT_ON) {\r\n                        return GOOD_SANS_U_FLAG;\r\n                    }\r\n                    else {\r\n                        return regexSyntaxError('Back references can not have more two or more consecutive numbers');\r\n                    }\r\n                }\r\n                return ALWAYS_GOOD;\r\n            case $$1_31:\r\n            case $$2_32:\r\n            case $$3_33:\r\n            case $$4_34:\r\n            case $$5_35:\r\n            case $$6_36:\r\n            case $$7_37:\r\n            case $$8_38:\r\n            case $$9_39:\r\n                return parseRegexDecimalEscape(c);\r\n            case $$K_6B:\r\n                ASSERT_skip($$K_6B);\r\n                c = peek();\r\n                if (c !== $$LT_3C) {\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        return regexSyntaxError('Named back reference \\\\k; missing group name', c);\r\n                    }\r\n                    return GOOD_SANS_U_FLAG;\r\n                }\r\n                ASSERT_skip($$LT_3C);\r\n                c = peek();\r\n                let wider = isIdentStart(c, pointer);\r\n                if (wider === VALID_DOUBLE_CHAR) {\r\n                    skip();\r\n                    skip();\r\n                }\r\n                else {\r\n                    ASSERT(wider === VALID_SINGLE_CHAR || wider === INVALID_IDENT_CHAR, 'enum');\r\n                    ASSERT_skip(c);\r\n                }\r\n                if (wider === INVALID_IDENT_CHAR) {\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        return regexSyntaxError('Could not parse `\\\\k<` as a named back reference; bailing', c);\r\n                    }\r\n                    else {\r\n                        return GOOD_SANS_U_FLAG;\r\n                    }\r\n                }\r\n                if (peek() === $$GT_3E) {\r\n                    if (wider === VALID_DOUBLE_CHAR) {\r\n                        lastParsedIdent = input.slice(pointer - 2, pointer);\r\n                    }\r\n                    else {\r\n                        lastParsedIdent = String.fromCharCode(c);\r\n                    }\r\n                }\r\n                else {\r\n                    parseIdentifierRest(c, '');\r\n                }\r\n                namedBackRefs.push(lastParsedIdent);\r\n                if (!peeky($$GT_3E)) {\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        return regexSyntaxError('Missing closing angle bracket of name of group', c);\r\n                    }\r\n                    return GOOD_SANS_U_FLAG;\r\n                }\r\n                ASSERT_skip($$GT_3E);\r\n                return ALWAYS_GOOD;\r\n            case $$FWDSLASH_2F:\r\n                ASSERT_skip($$FWDSLASH_2F);\r\n                return ALWAYS_GOOD;\r\n            case $$CR_0D:\r\n            case $$LF_0A:\r\n            case $$PS_2028:\r\n            case $$LS_2029:\r\n                ASSERT_skip(c);\r\n                return regexSyntaxError('Regexes can not have newlines');\r\n            default:\r\n                let wide = isIdentRestChr(c, pointer);\r\n                if (wide !== INVALID_IDENT_CHAR) {\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        return regexSyntaxError('Cannot escape this regular identifier character [ord=' + c + '][' + String.fromCharCode(c) + ']');\r\n                    }\r\n                }\r\n                if (wide === VALID_DOUBLE_CHAR) {\r\n                    c = input.codePointAt(pointer);\r\n                    skip();\r\n                    skip();\r\n                }\r\n                else {\r\n                    if (wide === INVALID_IDENT_CHAR)\r\n                        console.warn('Tokenizer potential $ERROR: was invalid ident but accepting anyways');\r\n                    ASSERT_skip(c);\r\n                }\r\n                return GOOD_SANS_U_FLAG;\r\n        }\r\n        THROW('dis be dead code');\r\n    }\r\n    function parseRegexDecimalEscape(c) {\r\n        ASSERT(c >= $$1_31 && c <= $$9_39, 'should be digit 1~9');\r\n        ASSERT_skip(c);\r\n        let d = peek();\r\n        if (d >= $$0_30 && d <= $$9_39) {\r\n            ASSERT_skip(d);\r\n            let e = peek();\r\n            if (e >= $$0_30 && e <= $$9_39) {\r\n                if (webCompat === WEB_COMPAT_ON) {\r\n                    return GOOD_SANS_U_FLAG;\r\n                }\r\n                else {\r\n                    return regexSyntaxError('Parsed too many digits');\r\n                }\r\n            }\r\n            else {\r\n                largestBackReference = Math.max(((c - $$0_30) * 10) + (d - $$0_30));\r\n            }\r\n        }\r\n        else {\r\n            largestBackReference = Math.max(largestBackReference, c - $$0_30);\r\n        }\r\n        return ALWAYS_GOOD;\r\n    }\r\n    function parseRegexUnicodeEscape() {\r\n        lastRegexUnicodeEscapeOrd = 0;\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let c = peek();\r\n        if (c === $$CURLY_L_7B) {\r\n            ASSERT_skip($$CURLY_L_7B);\r\n            let r = parseRegexUnicodeEscapeVary();\r\n            if (r === GOOD_ESCAPE) {\r\n                ASSERT_skip($$CURLY_R_7D);\r\n                return GOOD_WITH_U_FLAG;\r\n            }\r\n            return regexSyntaxError('Error while trying to parse new unicode escape');\r\n        }\r\n        else {\r\n            return parseRegexUnicodeEscapeQuad(c);\r\n        }\r\n    }\r\n    function parseRegexUnicodeEscapeQuad(a) {\r\n        if (eofd(3)) {\r\n            if (webCompat === WEB_COMPAT_ON) {\r\n                return GOOD_SANS_U_FLAG;\r\n            }\r\n            else {\r\n                return regexSyntaxError('Encountered early EOF while parsing a unicode escape quad');\r\n            }\r\n        }\r\n        let b = peekd(1);\r\n        let c = peekd(2);\r\n        let d = peekd(3);\r\n        if (isHex(a) && isHex(b) && isHex(c) && isHex(d)) {\r\n            ASSERT_skip(a);\r\n            ASSERT_skip(b);\r\n            ASSERT_skip(c);\r\n            ASSERT_skip(d);\r\n            let firstPart = hexToNum(a) << 12 | hexToNum(b) << 8 | hexToNum(c) << 4 | hexToNum(d);\r\n            if (firstPart >= 0xD800 && firstPart <= 0xDBFF) {\r\n                if (!eofd(5) && peek() === $$BACKSLASH_5C && peekd(1) === $$U_75 && isHex(peekd(2)) && isHex(peekd(3)) && isHex(peekd(4)) && isHex(peekd(5))) {\r\n                    let a = peekd(2);\r\n                    let b = peekd(3);\r\n                    let c = peekd(4);\r\n                    let d = peekd(5);\r\n                    let secondPart = hexToNum(a) << 12 | hexToNum(b) << 8 | hexToNum(c) << 4 | hexToNum(d);\r\n                    if (secondPart >= 0xDC00 && secondPart <= 0xDFFF) {\r\n                        ASSERT_skip($$BACKSLASH_5C);\r\n                        ASSERT_skip($$U_75);\r\n                        skip();\r\n                        skip();\r\n                        skip();\r\n                        skip();\r\n                        lastRegexUnicodeEscapeOrd = (((firstPart & 0x3ff) << 10) | (secondPart & 0x3ff)) + 0x10000;\r\n                        return ALWAYS_GOOD;\r\n                    }\r\n                    return regexSyntaxError('Second quad did not yield a valid surrogate pair value');\r\n                }\r\n                return regexSyntaxError('Encountered illegal quad escaped surrogate pair; the second part of the pair did not meet the requirements');\r\n            }\r\n            lastRegexUnicodeEscapeOrd = firstPart;\r\n            return ALWAYS_GOOD;\r\n        }\r\n        else {\r\n            if (webCompat === WEB_COMPAT_ON) {\r\n                lastRegexUnicodeEscapeOrd = parseInt(a + b + c + d, 16);\r\n                return GOOD_SANS_U_FLAG;\r\n            }\r\n            else {\r\n                return regexSyntaxError('Encountered bad character while trying to parse a unicode escape quad [ords: ' + a + ', ' + b + ', ' + c + ', ' + d + '] -> is hex? ' + [isHex(a), isHex(b), isHex(c), isHex(d)] + ' hex=' + String.fromCharCode(a, b, c, d));\r\n            }\r\n        }\r\n    }\r\n    function parseRegexUnicodeEscapeVary() {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let a = peek();\r\n        if (!isHex(a))\r\n            return BAD_ESCAPE;\r\n        ASSERT_skip(a);\r\n        return _parseRegexUnicodeEscapeVary(a);\r\n    }\r\n    function _parseRegexUnicodeEscapeVary(a) {\r\n        if (a === $$0_30) {\r\n            if (eof())\r\n                return BAD_ESCAPE;\r\n            a = skipZeroes();\r\n            if (!isHex(a)) {\r\n                if (a === $$CURLY_R_7D) {\r\n                    lastRegexUnicodeEscapeOrd = 0;\r\n                    return GOOD_ESCAPE;\r\n                }\r\n                return BAD_ESCAPE;\r\n            }\r\n            ASSERT_skip(a);\r\n        }\r\n        return ___parseRegexUnicodeEscapeVary(a);\r\n    }\r\n    function ___parseRegexUnicodeEscapeVary(a) {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let b = peek();\r\n        if (!isHex(b)) {\r\n            if (b === $$CURLY_R_7D) {\r\n                lastRegexUnicodeEscapeOrd = hexToNum(a);\r\n                return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        ASSERT_skip(b);\r\n        return ____parseRegexUnicodeEscapeVary(a, b);\r\n    }\r\n    function ____parseRegexUnicodeEscapeVary(a, b) {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let c = peek();\r\n        if (!isHex(c)) {\r\n            if (c === $$CURLY_R_7D) {\r\n                lastRegexUnicodeEscapeOrd = hexToNum(a) << 4 | hexToNum(b);\r\n                return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        ASSERT_skip(c);\r\n        return _____parseRegexUnicodeEscapeVary(a, b, c);\r\n    }\r\n    function _____parseRegexUnicodeEscapeVary(a, b, c) {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let d = peek();\r\n        if (!isHex(d)) {\r\n            if (d === $$CURLY_R_7D) {\r\n                lastRegexUnicodeEscapeOrd = hexToNum(a) << 8 | hexToNum(b) << 4 | hexToNum(c);\r\n                return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        ASSERT_skip(d);\r\n        return ______parseRegexUnicodeEscapeVary(a, b, c, d);\r\n    }\r\n    function ______parseRegexUnicodeEscapeVary(a, b, c, d) {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let e = peek();\r\n        if (!isHex(e)) {\r\n            if (e === $$CURLY_R_7D) {\r\n                lastRegexUnicodeEscapeOrd = hexToNum(a) << 12 | hexToNum(b) << 8 | hexToNum(c) << 4 | hexToNum(d);\r\n                return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        ASSERT_skip(e);\r\n        return _______parseRegexUnicodeEscapeVary(a, b, c, d, e);\r\n    }\r\n    function _______parseRegexUnicodeEscapeVary(a, b, c, d, e) {\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        let f = peek();\r\n        if (!isHex(f)) {\r\n            if (f === $$CURLY_R_7D) {\r\n                lastRegexUnicodeEscapeOrd = hexToNum(a) << 16 | hexToNum(b) << 12 | hexToNum(c) << 8 | hexToNum(d) << 4 | hexToNum(e);\r\n                return GOOD_ESCAPE;\r\n            }\r\n            return BAD_ESCAPE;\r\n        }\r\n        ASSERT_skip(f);\r\n        return ________parseRegexUnicodeEscapeVary(a, b, c, d, e, f);\r\n    }\r\n    function ________parseRegexUnicodeEscapeVary(a, b, c, d, e, f) {\r\n        let codePoint = hexToNum(a) << 20 | hexToNum(b) << 16 | hexToNum(c) << 12 | hexToNum(d) << 8 | hexToNum(e) << 4 | hexToNum(f);\r\n        if (codePoint > 0x10ffff)\r\n            return BAD_ESCAPE;\r\n        if (eof())\r\n            return BAD_ESCAPE;\r\n        if (peek() !== $$CURLY_R_7D)\r\n            return BAD_ESCAPE;\r\n        lastRegexUnicodeEscapeOrd = codePoint;\r\n        return GOOD_ESCAPE;\r\n    }\r\n    function parseRegexCharClass() {\r\n        let prev = 0;\r\n        let surrogate = 0;\r\n        let isSurrogate = false;\r\n        let isSurrogateHead = false;\r\n        let wasSurrogate = true;\r\n        let wasSurrogateHead = false;\r\n        let urangeOpen = false;\r\n        let urangeLeft = 0;\r\n        let nrangeOpen = false;\r\n        let nrangeLeft = 0;\r\n        let flagState = ALWAYS_GOOD;\r\n        if (eof())\r\n            return regexSyntaxError('Encountered early EOF while parsing char class');\r\n        let c = peek();\r\n        if (c === $$XOR_5E) {\r\n            ASSERT_skip($$XOR_5E);\r\n            if (eof())\r\n                return regexSyntaxError('Encountered early EOF while parsing char class');\r\n            c = peek();\r\n        }\r\n        let n = 0;\r\n        while (true) {\r\n            if (c === $$SQUARE_R_5D) {\r\n                return parseRegexCharClassEnd(urangeOpen, wasSurrogateHead, urangeLeft, prev, flagState);\r\n            }\r\n            else if (c === $$BACKSLASH_5C) {\r\n                ASSERT_skip($$BACKSLASH_5C);\r\n                c = parseRegexClassCharEscape();\r\n                if (c === INVALID_IDENT_CHAR || c === CHARCLASS_BAD) {\r\n                    flagState = regexSyntaxError('Encountered early EOF while parsing char class');\r\n                }\r\n                else if (c === INVALID_IDENT_CHAR) {\r\n                    flagState = regexSyntaxError('Encountered unicode escape that did not represent a proper character');\r\n                }\r\n                else if (c & CHARCLASS_BAD_WITH_U_FLAG) {\r\n                    c = c ^ CHARCLASS_BAD_WITH_U_FLAG;\r\n                    ASSERT(c <= 0x110000, 'c should now be valid unicode range or one above for error');\r\n                    if (c === CHARCLASS_BAD)\r\n                        flagState = regexSyntaxError('Bad character class body');\r\n                    else\r\n                        flagState = updateRegexUflagState(flagState, GOOD_SANS_U_FLAG, 'Unknown reason that is only an error with u-flag while parsing a character class');\r\n                    ASSERT(flagState === GOOD_SANS_U_FLAG || flagState === ALWAYS_BAD, 'either way, the flag state should now reflect \"bad with u-flag\", or worse');\r\n                }\r\n                else if (c & CHARCLASS_BAD_SANS_U_FLAG) {\r\n                    flagState = updateRegexUflagState(flagState, GOOD_WITH_U_FLAG, 'Unknown reason that is only an error with u-flag while parsing a character class');\r\n                }\r\n            }\r\n            else if (c === $$CR_0D || c === $$LF_0A || c === $$PS_2028 || c === $$LS_2029) {\r\n                return regexSyntaxError('Encountered newline');\r\n            }\r\n            else {\r\n                ASSERT_skip(c);\r\n            }\r\n            if (c === CHARCLASS_CLASS_ESCAPE) {\r\n                isSurrogate = false;\r\n                isSurrogateHead = false;\r\n            }\r\n            else if (wasSurrogateHead && isSurrogateTail(c)) {\r\n                isSurrogate = true;\r\n                isSurrogateHead = false;\r\n                surrogate = getSurrogate(prev, c);\r\n            }\r\n            else if (!wasSurrogate && !wasSurrogateHead && (c & 0x1fffff) > 0xffff) {\r\n                isSurrogate = true;\r\n                isSurrogateHead = false;\r\n                surrogate = c;\r\n            }\r\n            else {\r\n                isSurrogate = false;\r\n                isSurrogateHead = isSurrogateLead(c);\r\n            }\r\n            if (urangeOpen) {\r\n                let urangeRight = isSurrogate ? surrogate : wasSurrogateHead ? prev : c;\r\n                if (!isSurrogateHead || wasSurrogateHead) {\r\n                    urangeOpen = false;\r\n                    if (urangeLeft === CHARCLASS_BAD_RANGE || urangeRight === CHARCLASS_BAD_RANGE || urangeLeft > urangeRight) {\r\n                        flagState = updateRegexUflagState(flagState, GOOD_SANS_U_FLAG, 'Encountered incorrect range (bad left, bad right, or left>right) which is illegal with u-flag and for unknown reasons it was also illegal without u-flag');\r\n                    }\r\n                }\r\n            }\r\n            else if (c === $$DASH_2D && n > 0) {\r\n                urangeOpen = true;\r\n            }\r\n            else {\r\n                urangeLeft = isSurrogate ? surrogate : c;\r\n            }\r\n            if (nrangeOpen) {\r\n                nrangeOpen = false;\r\n                if (nrangeLeft === CHARCLASS_CLASS_ESCAPE || c === CHARCLASS_CLASS_ESCAPE) {\r\n                    if (webCompat === WEB_COMPAT_OFF) {\r\n                        flagState = regexSyntaxError('Range error with u-flag and unknown reason why regex is invalid without u-flag so it cannot be a valid regex');\r\n                    }\r\n                    else {\r\n                        flagState = updateRegexUflagState(flagState, GOOD_SANS_U_FLAG, 'Range error with u-flag and unknown reason why regex is invalid without u-flag so it cannot be a valid regex');\r\n                    }\r\n                }\r\n                else if (nrangeLeft === CHARCLASS_BAD_RANGE || c === CHARCLASS_BAD_RANGE || nrangeLeft > c) {\r\n                    flagState = updateRegexUflagState(flagState, GOOD_WITH_U_FLAG, 'Unknown reason that is an error with u-flag while parsing a character class');\r\n                }\r\n            }\r\n            else if (c === $$DASH_2D && n > 0) {\r\n                nrangeOpen = true;\r\n            }\r\n            else {\r\n                nrangeLeft = c;\r\n            }\r\n            wasSurrogate = isSurrogate;\r\n            wasSurrogateHead = isSurrogateHead;\r\n            prev = c;\r\n            ++n;\r\n            if (eof())\r\n                break;\r\n            c = peek();\r\n        }\r\n        return regexSyntaxError('Unexpected early EOF while parsing character class');\r\n    }\r\n    function updateRegexUflagState(currentState, newState, error) {\r\n        ASSERT(newState === GOOD_WITH_U_FLAG || newState === GOOD_SANS_U_FLAG, 'should not be used for all good or bad');\r\n        if (currentState === (newState === GOOD_WITH_U_FLAG ? GOOD_SANS_U_FLAG : GOOD_WITH_U_FLAG))\r\n            currentState = regexSyntaxError(error);\r\n        else if (currentState === ALWAYS_GOOD)\r\n            currentState = newState;\r\n        else {\r\n            ASSERT(currentState === newState || currentState === ALWAYS_BAD, 'enum');\r\n        }\r\n        return currentState;\r\n    }\r\n    function updateRegexUflagStateCharClass(currentState, newState, error) {\r\n        ASSERT(newState === CHARCLASS_BAD || newState === CHARCLASS_BAD_WITH_U_FLAG || newState === CHARCLASS_BAD_SANS_U_FLAG, 'charclass state enum');\r\n        if (newState === CHARCLASS_BAD_WITH_U_FLAG)\r\n            return updateRegexUflagState(currentState, GOOD_SANS_U_FLAG, error);\r\n        if (newState === CHARCLASS_BAD_SANS_U_FLAG)\r\n            return updateRegexUflagState(currentState, GOOD_WITH_U_FLAG, error);\r\n        if (newState === CHARCLASS_BAD)\r\n            return updateRegexUflagState(currentState, ALWAYS_BAD, error);\r\n        ASSERT(newState === 0, 'I guess?');\r\n        return currentState;\r\n    }\r\n    function parseRegexClassCharEscape() {\r\n        if (eof())\r\n            return -1;\r\n        let c = peek();\r\n        switch (c) {\r\n            case $$U_75:\r\n                ASSERT_skip($$U_75);\r\n                return parseRegexUnicodeEscape2();\r\n            case $$X_78:\r\n                ASSERT_skip($$X_78);\r\n                if (eofd(1))\r\n                    return CHARCLASS_BAD;\r\n                let a = peek();\r\n                if (!isHex(a))\r\n                    return CHARCLASS_BAD;\r\n                ASSERT_skip(a);\r\n                let b = peek();\r\n                if (!isHex(b))\r\n                    return CHARCLASS_BAD;\r\n                ASSERT_skip(b);\r\n                return (hexToNum(a) << 4) | hexToNum(b);\r\n            case $$C_63:\r\n                ASSERT_skip($$C_63);\r\n                if (neof()) {\r\n                    let d = peek();\r\n                    if (isAsciiLetter(d)) {\r\n                        ASSERT_skip(d);\r\n                        return d;\r\n                    }\r\n                    if (webCompat === WEB_COMPAT_ON) {\r\n                        return CHARCLASS_BAD_WITH_U_FLAG;\r\n                    }\r\n                }\r\n                return CHARCLASS_BAD;\r\n            case $$B_62:\r\n                ASSERT_skip($$B_62);\r\n                return $$BACKSPACE_08;\r\n            case $$B_UC_42:\r\n                return CHARCLASS_BAD_RANGE;\r\n            case $$F_66:\r\n                ASSERT_skip($$F_66);\r\n                return 0x000C;\r\n            case $$N_6E:\r\n                ASSERT_skip($$N_6E);\r\n                return 0x000A;\r\n            case $$R_72:\r\n                ASSERT_skip($$R_72);\r\n                return 0x000D;\r\n            case $$T_74:\r\n                ASSERT_skip($$T_74);\r\n                return 0x0009;\r\n            case $$V_76:\r\n                ASSERT_skip($$V_76);\r\n                return 0x000B;\r\n            case $$D_64:\r\n            case $$D_UC_44:\r\n            case $$S_73:\r\n            case $$S_UC_53:\r\n            case $$W_77:\r\n            case $$W_UC_57:\r\n                ASSERT_skip(c);\r\n                return CHARCLASS_CLASS_ESCAPE;\r\n            case $$P_70:\r\n            case $$P_UC_50:\r\n                let regexPropState = parseRegexPropertyEscape(c);\r\n                if (regexPropState === ALWAYS_BAD) {\r\n                    return CHARCLASS_BAD;\r\n                }\r\n                else if (regexPropState === GOOD_SANS_U_FLAG) {\r\n                    if (webCompat === WEB_COMPAT_ON)\r\n                        return CHARCLASS_BAD_WITH_U_FLAG;\r\n                    return CHARCLASS_BAD;\r\n                }\r\n                else {\r\n                    ASSERT(regexPropState === GOOD_WITH_U_FLAG, 'parseRegexPropertyEscape should not return ALWAYS_GOOD and this is an enum');\r\n                    if (webCompat === WEB_COMPAT_ON)\r\n                        return CHARCLASS_CLASS_ESCAPE;\r\n                    return CHARCLASS_BAD_SANS_U_FLAG;\r\n                }\r\n            case $$0_30:\r\n                ASSERT_skip(c);\r\n                if (webCompat === WEB_COMPAT_ON) {\r\n                    return parseOctalFromSecondDigit(c) | CHARCLASS_BAD_WITH_U_FLAG;\r\n                }\r\n                if (neof() && isAsciiNumber(peek()))\r\n                    return CHARCLASS_BAD;\r\n                return $$NULL_00;\r\n            case $$1_31:\r\n            case $$2_32:\r\n            case $$3_33:\r\n            case $$4_34:\r\n            case $$5_35:\r\n            case $$6_36:\r\n            case $$7_37:\r\n                ASSERT_skip(c);\r\n                if (webCompat === WEB_COMPAT_ON) {\r\n                    return parseOctalFromSecondDigit(c) | CHARCLASS_BAD_WITH_U_FLAG;\r\n                }\r\n                return CHARCLASS_BAD;\r\n            case $$8_38:\r\n            case $$9_39:\r\n                ASSERT_skip(c);\r\n                return parseDecimalEscape(c);\r\n            case $$XOR_5E:\r\n            case $$$_24:\r\n            case $$BACKSLASH_5C:\r\n            case $$DOT_2E:\r\n            case $$STAR_2A:\r\n            case $$PLUS_2B:\r\n            case $$QMARK_3F:\r\n            case $$PAREN_L_28:\r\n            case $$PAREN_R_29:\r\n            case $$SQUARE_L_5B:\r\n            case $$SQUARE_R_5D:\r\n            case $$CURLY_L_7B:\r\n            case $$CURLY_R_7D:\r\n            case $$OR_7C:\r\n                ASSERT_skip(c);\r\n                return c;\r\n            case $$FWDSLASH_2F:\r\n                ASSERT_skip($$FWDSLASH_2F);\r\n                return $$FWDSLASH_2F;\r\n            case $$DASH_2D:\r\n                ASSERT_skip($$DASH_2D);\r\n                if (webCompat === WEB_COMPAT_ON) {\r\n                    webModeWarnings.push([pointer, 'Escaping dash in char class']);\r\n                    return $$DASH_2D;\r\n                }\r\n                else {\r\n                    return $$DASH_2D | CHARCLASS_BAD_SANS_U_FLAG;\r\n                }\r\n            default:\r\n                ASSERT(![$$BACKSLASH_5C, $$XOR_5E, $$$_24, $$DOT_2E, $$STAR_2A, $$PLUS_2B, $$QMARK_3F, $$PAREN_L_28, $$PAREN_R_29, $$SQUARE_L_5B, $$SQUARE_R_5D, $$CURLY_L_7B, $$CURLY_R_7D, $$OR_7C].includes(c), 'all these u-flag chars should be checked above');\r\n                let wide = isIdentRestChr(c, pointer);\r\n                if (wide === INVALID_IDENT_CHAR) {\r\n                    ASSERT_skip(c);\r\n                    return c | CHARCLASS_BAD_WITH_U_FLAG;\r\n                }\r\n                console.warn('Tokenizer $ERROR: the char class had an escape that would not be valid with and without u-flag');\r\n                if (wide === VALID_DOUBLE_CHAR) {\r\n                    skip();\r\n                    skip();\r\n                    return CHARCLASS_BAD;\r\n                }\r\n                if (wide === VALID_SINGLE_CHAR) {\r\n                    ASSERT_skip(c);\r\n                    return CHARCLASS_BAD;\r\n                }\r\n        }\r\n        ASSERT_skip(c);\r\n        return CHARCLASS_BAD;\r\n    }\r\n    function parseRegexPropertyEscape(c) {\r\n        ASSERT(c === $$P_70 || c === $$P_UC_50, 'this should be \\\\p');\r\n        ASSERT(peek() === c, 'not yet consumed');\r\n        if (!supportRegexPropertyEscapes) {\r\n            if (webCompat === WEB_COMPAT_ON)\r\n                return GOOD_SANS_U_FLAG;\r\n            return regexSyntaxError('Property escapes are not supported by the currently targeted language version  ');\r\n        }\r\n        if (skipPeek() !== $$CURLY_L_7B) {\r\n            if (webCompat === WEB_COMPAT_ON)\r\n                return GOOD_SANS_U_FLAG;\r\n            return regexSyntaxError('Property escape \\\\p must be followed by a curly bracket (and would be illegal without u-flag)');\r\n        }\r\n        if (skipPeek() === $$CURLY_R_7D) {\r\n            return regexSyntaxError('Cannot have empty property name brackets (and would be illegal without u-flag too)');\r\n        }\r\n        while (skipPeek() !== $$CURLY_R_7D) {\r\n            if (eof()) {\r\n                if (webCompat === WEB_COMPAT_ON)\r\n                    return GOOD_SANS_U_FLAG;\r\n                return regexSyntaxError('Unexpected EOF while parsing property escape (which would be illegal without u-flag too)');\r\n            }\r\n        }\r\n        ASSERT_skip($$CURLY_R_7D);\r\n        return GOOD_WITH_U_FLAG;\r\n    }\r\n    function hexToNum(c) {\r\n        ASSERT(isHex(c), 'hexToNum c should be verified hex');\r\n        if (c <= $$9_39)\r\n            return c - $$0_30;\r\n        if (c <= $$Z_UC_5A)\r\n            return (c - $$A_UC_41) + 10;\r\n        return (c - $$A_61) + 10;\r\n    }\r\n    function parseRegexFlags() {\r\n        let g = 0;\r\n        let i = 0;\r\n        let m = 0;\r\n        let u = 0;\r\n        let y = 0;\r\n        let s = 0;\r\n        let bad = 0;\r\n        while (neof()) {\r\n            let c = peek();\r\n            switch (c) {\r\n                case $$G_67:\r\n                    ++g;\r\n                    break;\r\n                case $$I_69:\r\n                    ++i;\r\n                    break;\r\n                case $$M_6D:\r\n                    ++m;\r\n                    break;\r\n                case $$U_75:\r\n                    ++u;\r\n                    break;\r\n                case $$Y_79:\r\n                    ++y;\r\n                    break;\r\n                case $$S_73:\r\n                    if (!supportRegexDotallFlag)\r\n                        THROW('The dotall flag `s` is not supported in the currently targeted language version');\r\n                    ++s;\r\n                    break;\r\n                case $$BACKSLASH_5C:\r\n                    break;\r\n                default:\r\n                    if (isAsciiLetter(c)) {\r\n                        ++bad;\r\n                        regexSyntaxError('Unknown regex flag [ord=' + c + ']');\r\n                    }\r\n                    else if (bad) {\r\n                        return ALWAYS_BAD;\r\n                    }\r\n                    else if ((g | i | m | u | y | s) > 1) {\r\n                        return regexSyntaxError('Encountered at least one regex flag twice');\r\n                    }\r\n                    else {\r\n                        return u > 0 ? GOOD_WITH_U_FLAG : GOOD_SANS_U_FLAG;\r\n                    }\r\n            }\r\n            ASSERT_skip(c);\r\n            if (c === $$BACKSLASH_5C) {\r\n                if (eof())\r\n                    return regexSyntaxError('Encountered early EOF while trying to parse a regex flag that is escaped (the backslash is the very last char which is illegal)');\r\n                if (peeky($$U_75)) {\r\n                    ASSERT_skip($$U_75);\r\n                    parseRegexUnicodeEscape();\r\n                }\r\n                ++bad;\r\n                regexSyntaxError('Unknown regex flag [ord=' + c + ']');\r\n            }\r\n        }\r\n        if (bad) {\r\n            return ALWAYS_BAD;\r\n        }\r\n        else if ((g | i | m | u | y | s) > 1) {\r\n            return regexSyntaxError('Encountered at least one regex flag twice');\r\n        }\r\n        else {\r\n            return u > 0 ? GOOD_WITH_U_FLAG : GOOD_SANS_U_FLAG;\r\n        }\r\n    }\r\n    function parseRegexCurlyQuantifier() {\r\n        if (eof())\r\n            return false;\r\n        let hasLow = false;\r\n        let hasHi = false;\r\n        let min = 0;\r\n        let max = 0;\r\n        let c;\r\n        let start = true;\r\n        let badNumber = false;\r\n        do {\r\n            c = peek();\r\n            if (!isAsciiNumber(c))\r\n                break;\r\n            ASSERT_skip(c);\r\n            hasLow = true;\r\n            if (start) {\r\n                start = false;\r\n                if (c === $$0_30) {\r\n                    if (eof())\r\n                        return false;\r\n                    c = peek();\r\n                    if (!isAsciiNumber(c))\r\n                        break;\r\n                    badNumber = true;\r\n                    ASSERT_skip(c);\r\n                }\r\n            }\r\n            min = (min * 10) + (c - $$0_30);\r\n        } while (neof());\r\n        if (c === $$COMMA_2C) {\r\n            ASSERT_skip($$COMMA_2C);\r\n            start = true;\r\n            if (eof())\r\n                return false;\r\n            do {\r\n                c = peek();\r\n                if (!isAsciiNumber(c))\r\n                    break;\r\n                ASSERT_skip(c);\r\n                hasHi = true;\r\n                if (start) {\r\n                    start = false;\r\n                    if (c === $$0_30) {\r\n                        if (eof())\r\n                            return false;\r\n                        c = peek();\r\n                        if (!isAsciiNumber(c))\r\n                            break;\r\n                        badNumber = true;\r\n                        ASSERT_skip(c);\r\n                    }\r\n                }\r\n                max = (max * 10) + (c - $$0_30);\r\n            } while (neof());\r\n        }\r\n        if (c === $$CURLY_R_7D) {\r\n            ASSERT_skip($$CURLY_R_7D);\r\n            return !badNumber && (hasLow !== hasHi || (hasLow && hasHi && min <= max));\r\n        }\r\n        return false;\r\n    }\r\n    function isSurrogateLead(c) {\r\n        return c >= 0xD800 && c <= 0xDBFF;\r\n    }\r\n    function isSurrogateTail(c) {\r\n        return c >= 0xDC00 && c <= 0xDFFF;\r\n    }\r\n    function getSurrogate(c1, c2) {\r\n        return (c1 - 0xD800) * 0x400 + (c2 - 0xDC00) + 0x10000;\r\n    }\r\n    function parseRegexCharClassEnd(urangeOpen, wasSurrogateHead, urangeLeft, prev, flagState) {\r\n        ASSERT_skip($$SQUARE_R_5D);\r\n        if (urangeOpen && wasSurrogateHead && (urangeLeft === CHARCLASS_BAD_RANGE || prev === CHARCLASS_BAD_RANGE || urangeLeft > prev)) {\r\n            if (flagState === GOOD_WITH_U_FLAG)\r\n                return regexSyntaxError('Unknown reason that is only an error without u-flag');\r\n            if (flagState === ALWAYS_BAD)\r\n                return ALWAYS_BAD;\r\n            return GOOD_SANS_U_FLAG;\r\n        }\r\n        return flagState;\r\n    }\r\n    function parseDecimalEscape(c) {\r\n        if (c === $$C_63 || c === $$K_6B)\r\n            return BAD_ESCAPE;\r\n        return c | CHARCLASS_BAD_WITH_U_FLAG;\r\n    }\r\n    function parseOctalFromSecondDigit(firstChar) {\r\n        if (isLowerOctal(firstChar)) {\r\n            let secondChar = peek();\r\n            if (isOctal(secondChar)) {\r\n                ASSERT_skip(secondChar);\r\n                let thirdChar = peek();\r\n                if (isOctal(thirdChar)) {\r\n                    ASSERT_skip(thirdChar);\r\n                    return ((firstChar - $$0_30) * 8 * 8) + ((secondChar - $$0_30) * 8) + (thirdChar - $$0_30);\r\n                }\r\n                else {\r\n                    return ((firstChar - $$0_30) * 8) + (thirdChar - $$0_30);\r\n                }\r\n            }\r\n            else {\r\n                return firstChar - $$0_30;\r\n            }\r\n        }\r\n        else {\r\n            let secondChar = peek();\r\n            if (isOctal(secondChar)) {\r\n                ASSERT_skip(secondChar);\r\n                let thirdChar = peek();\r\n                if (isLowerOctal(thirdChar)) {\r\n                    ASSERT_skip(thirdChar);\r\n                    return ((firstChar - $$0_30) * 8 * 8) + ((secondChar - $$0_30) * 8) + (thirdChar - $$0_30);\r\n                }\r\n                else {\r\n                    return ((firstChar - $$0_30) * 8) + (thirdChar - $$0_30);\r\n                }\r\n            }\r\n            else {\r\n                return firstChar - $$0_30;\r\n            }\r\n        }\r\n    }\r\n    function isLowerOctal(c) {\r\n        return c >= $$0_30 && c <= $$3_33;\r\n    }\r\n    function isUpperOctal(c) {\r\n        return c >= $$4_34 && c <= $$7_37;\r\n    }\r\n    function parseRegexUnicodeEscape2() {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let c = peek();\r\n        if (c === $$CURLY_L_7B) {\r\n            ASSERT_skip($$CURLY_L_7B);\r\n            let r = parseRegexUnicodeEscapeVary2();\r\n            if (r === CHARCLASS_BAD || eof())\r\n                return CHARCLASS_BAD;\r\n            let x = peek();\r\n            if (x !== $$CURLY_R_7D)\r\n                return CHARCLASS_BAD;\r\n            ASSERT_skip($$CURLY_R_7D);\r\n            return r | CHARCLASS_BAD_SANS_U_FLAG;\r\n        }\r\n        else {\r\n            return parseRegexUnicodeEscapeQuad2(c);\r\n        }\r\n    }\r\n    function parseRegexUnicodeEscapeQuad2(a) {\r\n        if (eofd(3))\r\n            return CHARCLASS_BAD;\r\n        let b = peekd(1);\r\n        let c = peekd(2);\r\n        let d = peekd(3);\r\n        if (isHex(a) && isHex(b) && isHex(c) && isHex(d)) {\r\n            ASSERT_skip(a);\r\n            ASSERT_skip(b);\r\n            ASSERT_skip(c);\r\n            ASSERT_skip(d);\r\n            let firstPart = (hexToNum(a) << 12) | (hexToNum(b) << 8) | (hexToNum(c) << 4) | hexToNum(d);\r\n            if (firstPart >= 0xD800 && firstPart <= 0xDBFF) {\r\n                if (!eofd(5) && peek() === $$BACKSLASH_5C && peekd(1) === $$U_75 && isHex(peekd(2)) && isHex(peekd(3)) && isHex(peekd(4)) && isHex(peekd(5))) {\r\n                    let a = peekd(2);\r\n                    let b = peekd(3);\r\n                    let c = peekd(4);\r\n                    let d = peekd(5);\r\n                    let secondPart = hexToNum(a) << 12 | hexToNum(b) << 8 | hexToNum(c) << 4 | hexToNum(d);\r\n                    if (secondPart >= 0xDC00 && secondPart <= 0xDFFF) {\r\n                        ASSERT_skip($$BACKSLASH_5C);\r\n                        ASSERT_skip($$U_75);\r\n                        skip();\r\n                        skip();\r\n                        skip();\r\n                        skip();\r\n                        return (((firstPart & 0x3ff) << 10) | (secondPart & 0x3ff)) + 0x10000;\r\n                    }\r\n                    regexSyntaxError('Second quad did not yield a valid surrogate pair value');\r\n                }\r\n                regexSyntaxError('Encountered illegal quad escaped surrogate pair; the second part of the pair did not meet the requirements');\r\n                return CHARCLASS_BAD;\r\n            }\r\n            return firstPart;\r\n        }\r\n        else {\r\n            return CHARCLASS_BAD;\r\n        }\r\n    }\r\n    function parseRegexUnicodeEscapeVary2() {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let a = peek();\r\n        if (!isHex(a))\r\n            return CHARCLASS_BAD;\r\n        ASSERT_skip(a);\r\n        return _parseRegexUnicodeEscapeVary2(a);\r\n    }\r\n    function _parseRegexUnicodeEscapeVary2(a) {\r\n        if (a === $$0_30) {\r\n            if (eof())\r\n                return CHARCLASS_BAD;\r\n            a = skipZeroes();\r\n            if (!isHex(a)) {\r\n                return 0;\r\n            }\r\n            ASSERT_skip(a);\r\n        }\r\n        return __parseRegexUnicodeEscapeVary2(a);\r\n    }\r\n    function __parseRegexUnicodeEscapeVary2(a) {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let b = peek();\r\n        if (!isHex(b)) {\r\n            return hexToNum(a);\r\n        }\r\n        ASSERT_skip(b);\r\n        return ___parseRegexUnicodeEscapeVary2(a, b);\r\n    }\r\n    function ___parseRegexUnicodeEscapeVary2(a, b) {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let c = peek();\r\n        if (!isHex(c)) {\r\n            return (hexToNum(a) << 4) | hexToNum(b);\r\n        }\r\n        ASSERT_skip(c);\r\n        return ____parseRegexUnicodeEscapeVary2(a, b, c);\r\n    }\r\n    function ____parseRegexUnicodeEscapeVary2(a, b, c) {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let d = peek();\r\n        if (!isHex(d)) {\r\n            return (hexToNum(a) << 8) | (hexToNum(b) << 4) | hexToNum(c);\r\n        }\r\n        ASSERT_skip(d);\r\n        return _____parseRegexUnicodeEscapeVary2(a, b, c, d);\r\n    }\r\n    function _____parseRegexUnicodeEscapeVary2(a, b, c, d) {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let e = peek();\r\n        if (!isHex(e)) {\r\n            return (hexToNum(a) << 12) | (hexToNum(b) << 8) | (hexToNum(c) << 4) | hexToNum(d);\r\n        }\r\n        ASSERT_skip(e);\r\n        return ______parseRegexUnicodeEscapeVary2(a, b, c, d, e);\r\n    }\r\n    function ______parseRegexUnicodeEscapeVary2(a, b, c, d, e) {\r\n        if (eof())\r\n            return CHARCLASS_BAD;\r\n        let f = peek();\r\n        if (!isHex(f)) {\r\n            return (hexToNum(a) << 16) | (hexToNum(b) << 12) | (hexToNum(c) << 8) | (hexToNum(d) << 4) | hexToNum(e);\r\n        }\r\n        ASSERT_skip(f);\r\n        let r = (hexToNum(a) << 20) | (hexToNum(b) << 16) | (hexToNum(c) << 12) | (hexToNum(d) << 8) | (hexToNum(e) << 4) | hexToNum(f);\r\n        return Math.min(0x110000, r);\r\n    }\r\n    function parseOtherUnicode(c) {\r\n        switch (c) {\r\n            case $$BOM_FEFF:\r\n                return $WHITE;\r\n            case $$PS_2028:\r\n                return parseNewline();\r\n            case $$LS_2029:\r\n                return parseNewline();\r\n            default:\r\n                let cu = input.codePointAt(pointer - 1);\r\n                let wide = isIdentStart(cu, pointer - 1);\r\n                if (wide !== INVALID_IDENT_CHAR) {\r\n                    if (wide === VALID_DOUBLE_CHAR)\r\n                        skip();\r\n                    return parseIdentifierRest(cu, String.fromCodePoint(cu));\r\n                }\r\n                if (c === $$BOM_FEFF) {\r\n                    return $WHITE;\r\n                }\r\n                console.warn('Tokenizer $ERROR: unexpected unicode character: ' + c + ' (' + String.fromCharCode(c) + ')');\r\n                return $ERROR;\r\n        }\r\n    }\r\n    function THROW(str) {\r\n        console.error('Throwing this error:', str);\r\n        _THROW('Tokenizer error! ' + str);\r\n    }\r\n    function _THROW(str) {\r\n        console.log('\\n');\r\n        console.log('Error at #|#\\n' + GETPOS('#|#'));\r\n        if (gracefulErrors === FAIL_HARD)\r\n            throw new Error(str);\r\n        else\r\n            console.error(str);\r\n    }\r\n    function DEBUG() {\r\n        return 'Tokenizer at #|#\\n' + GETPOS('#|#');\r\n    }\r\n    function GETPOS(sep) {\r\n        if (input.length < 100)\r\n            return '```\\n' + slice(0, pointer) + sep + slice(pointer, input.length) + '\\n```';\r\n        return '```\\n' + slice(Math.max(0, pointer - 20), pointer) + sep + slice(pointer, Math.min(len, pointer + 20)) + '\\n```';\r\n    }\r\n    nextToken.asi = addAsi;\r\n    nextToken.throw = _THROW;\r\n    nextToken.getTokenCountAny = () => anyTokenCount;\r\n    nextToken.getTokenCountSolid = () => solidTokenCount;\r\n    nextToken.DEBUG = DEBUG;\r\n    nextToken.GETPOS = GETPOS;\r\n    return nextToken;\r\n}\r\nfunction isLfPsLs(c) {\r\n    return (c === $$LF_0A || c === $$PS_2028 || c === $$LS_2029);\r\n}\r\nfunction debug_toktype(type, ignoreUnknown) {\r\n    ASSERT(typeof type === 'number', 'expecting valid type');\r\n    if (type & $TICK_BAD_ESCAPE)\r\n        return debug_toktype(type ^ $TICK_BAD_ESCAPE, ignoreUnknown) + '+$TICK_BAD_ESCAPE';\r\n    switch (type) {\r\n        case $ASI: return 'ASI';\r\n        case $COMMENT: return 'COMMENT';\r\n        case $COMMENT_SINGLE: return 'COMMENT_SINGLE';\r\n        case $COMMENT_MULTI: return 'COMMENT_MULTI';\r\n        case $COMMENT_HTML: return 'COMMENT_HTML';\r\n        case $CRLF: return 'CRLF';\r\n        case $EOF: return 'EOF';\r\n        case $ERROR: return 'ERROR';\r\n        case $IDENT: return 'IDENT';\r\n        case $NL: return 'NL';\r\n        case $NUMBER: return 'NUMBER';\r\n        case $NUMBER_DEC: return 'NUMBER_DEC';\r\n        case $NUMBER_HEX: return 'NUMBER_HEX';\r\n        case $NUMBER_OCT: return 'NUMBER_OCT';\r\n        case $NUMBER_BIN: return 'NUMBER_BIN';\r\n        case $NUMBER_OLD: return 'NUMBER_OLD';\r\n        case $PUNCTUATOR: return 'PUNCTUATOR';\r\n        case $REGEX: return 'REGEX';\r\n        case $REGEXU: return 'REGEXU';\r\n        case $SPACE: return 'SPACE';\r\n        case $STRING: return 'STRING';\r\n        case $STRING_DOUBLE: return 'STRING_DOUBLE';\r\n        case $STRING_SINGLE: return 'STRING_SINGLE';\r\n        case $TAB: return 'TAB';\r\n        case $TICK: return 'TICK';\r\n        case $TICK_BODY: return 'TICK_BODY';\r\n        case $TICK_HEAD: return 'TICK_HEAD';\r\n        case $TICK_PURE: return 'TICK_PURE';\r\n        case $TICK_TAIL: return 'TICK_TAIL';\r\n        case $TICK_BAD_ESCAPE: return 'TICK_BAD_ESCAPE';\r\n        case $WHITE: return 'WHITE';\r\n        default:\r\n            if (ignoreUnknown)\r\n                return 'UNKNOWN[' + type + ']';\r\n            throw new Error('debug_toktype: UNKNOWN[' + JSON.stringify(type) + ']');\r\n    }\r\n}\r\nexport default ZeTokenizer;\r\nexport { $ASI, $COMMENT, $COMMENT_HTML, $COMMENT_SINGLE, $COMMENT_MULTI, $CRLF, $EOF, $ERROR, $IDENT, $NL, $NUMBER, $NUMBER_HEX, $NUMBER_DEC, $NUMBER_BIN, $NUMBER_OCT, $NUMBER_OLD, $PUNCTUATOR, $REGEX, $REGEXU, $SPACE, $STRING, $STRING_DOUBLE, $STRING_SINGLE, $TAB, $TICK, $TICK_BAD_ESCAPE, $TICK_BODY, $TICK_HEAD, $TICK_PURE, $TICK_TAIL, $WHITE, COLLECT_TOKENS_NONE, COLLECT_TOKENS_SOLID, COLLECT_TOKENS_ALL, FAIL_GRACEFULLY, FAIL_HARD, GOAL_MODULE, GOAL_SCRIPT, LF_CAN_FUNC_STMT, LF_CAN_NEW_DOT_TARGET, LF_FOR_REGEX, LF_IN_ASYNC, LF_IN_CONSTRUCTOR, LF_IN_FOR_LHS, LF_IN_FUNC_ARGS, LF_IN_GENERATOR, LF_IN_GLOBAL, LF_IN_ITERATION, LF_IN_SCOPE_ROOT, LF_IN_SWITCH, LF_IN_TEMPLATE, LF_NO_ASI, LF_NO_FLAGS, LF_DO_WHILE_ASI, LF_STRICT_MODE, LF_SUPER_CALL, LF_SUPER_PROP, INITIAL_LEXER_FLAGS, LF_DEBUG, RETURN_ANY_TOKENS, RETURN_SOLID_TOKENS, WEB_COMPAT_OFF, WEB_COMPAT_ON, debug_toktype, };\r\n//# sourceMappingURL=zetokenizer.js.map","map":"{\"version\":3,\"file\":\"zetokenizer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/zetokenizer.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"D:/cherow_gh/cherow1/zetokenizer.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"zetokenizer.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/zetokenizer.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"D:/cherow_gh/cherow1/zetokenizer.d.ts","writeByteOrderMark":false,"text":"declare const $ERROR = 0;\r\ndeclare const $WHITE: number;\r\ndeclare const $SPACE: number;\r\ndeclare const $TAB: number;\r\ndeclare const $NL: number;\r\ndeclare const $CRLF: number;\r\ndeclare const $COMMENT: number;\r\ndeclare const $COMMENT_SINGLE: number;\r\ndeclare const $COMMENT_MULTI: number;\r\ndeclare const $COMMENT_HTML: number;\r\ndeclare const $NUMBER: number;\r\ndeclare const $NUMBER_HEX: number;\r\ndeclare const $NUMBER_DEC: number;\r\ndeclare const $NUMBER_BIN: number;\r\ndeclare const $NUMBER_OCT: number;\r\ndeclare const $NUMBER_OLD: number;\r\ndeclare const $STRING: number;\r\ndeclare const $STRING_SINGLE: number;\r\ndeclare const $STRING_DOUBLE: number;\r\ndeclare const $IDENT: number;\r\ndeclare const $PUNCTUATOR: number;\r\ndeclare const $REGEX: number;\r\ndeclare const $REGEXU: number;\r\ndeclare const $TICK: number;\r\ndeclare const $TICK_HEAD: number;\r\ndeclare const $TICK_BODY: number;\r\ndeclare const $TICK_TAIL: number;\r\ndeclare const $TICK_PURE: number;\r\ndeclare const $TICK_BAD_ESCAPE: number;\r\ndeclare const $ASI: number;\r\ndeclare const $EOF: number;\r\ndeclare const LF_NO_FLAGS = 0;\r\ndeclare const LF_CAN_FUNC_STMT: number;\r\ndeclare const LF_CAN_NEW_DOT_TARGET: number;\r\ndeclare const LF_DO_WHILE_ASI: number;\r\ndeclare const LF_FOR_REGEX: number;\r\ndeclare const LF_IN_ASYNC: number;\r\ndeclare const LF_IN_CONSTRUCTOR: number;\r\ndeclare const LF_IN_FOR_LHS: number;\r\ndeclare const LF_IN_FUNC_ARGS: number;\r\ndeclare const LF_IN_GENERATOR: number;\r\ndeclare const LF_IN_GLOBAL: number;\r\ndeclare const LF_IN_ITERATION: number;\r\ndeclare const LF_IN_SCOPE_ROOT: number;\r\ndeclare const LF_IN_SWITCH: number;\r\ndeclare const LF_IN_TEMPLATE: number;\r\ndeclare const LF_NO_ASI: number;\r\ndeclare const LF_STRICT_MODE: number;\r\ndeclare const LF_SUPER_CALL: number;\r\ndeclare const LF_SUPER_PROP: number;\r\ndeclare const INITIAL_LEXER_FLAGS: number;\r\ndeclare function LF_DEBUG(flags: any): string;\r\ndeclare const GOAL_MODULE = true;\r\ndeclare const GOAL_SCRIPT = false;\r\ndeclare const COLLECT_TOKENS_NONE = 0;\r\ndeclare const COLLECT_TOKENS_SOLID = 1;\r\ndeclare const COLLECT_TOKENS_ALL = 2;\r\ndeclare const WEB_COMPAT_OFF = false;\r\ndeclare const WEB_COMPAT_ON = true;\r\ndeclare const RETURN_ANY_TOKENS = true;\r\ndeclare const RETURN_SOLID_TOKENS = false;\r\ndeclare const FAIL_GRACEFULLY = true;\r\ndeclare const FAIL_HARD = false;\r\ndeclare function ZeTokenizer(input: any, targetEsVersion?: number, moduleGoal?: boolean, collectTokens?: number, webCompat?: boolean, gracefulErrors?: boolean, tokenStorage?: never[]): {\r\n    (lexerFlags?: number, _returnAny?: boolean): {\r\n        _t: any;\r\n        type: any;\r\n        ws: any;\r\n        nl: any;\r\n        start: any;\r\n        stop: any;\r\n        c: any;\r\n        str: any;\r\n        canon: any;\r\n        toString(): string;\r\n    };\r\n    tokens: any;\r\n    asi: () => void;\r\n    throw: (str: any) => void;\r\n    getTokenCountAny(): number;\r\n    getTokenCountSolid(): number;\r\n    DEBUG: () => string;\r\n    GETPOS: (sep: any) => string;\r\n};\r\ndeclare function debug_toktype(type: any, ignoreUnknown: any): any;\r\nexport default ZeTokenizer;\r\nexport { $ASI, $COMMENT, $COMMENT_HTML, $COMMENT_SINGLE, $COMMENT_MULTI, $CRLF, $EOF, $ERROR, $IDENT, $NL, $NUMBER, $NUMBER_HEX, $NUMBER_DEC, $NUMBER_BIN, $NUMBER_OCT, $NUMBER_OLD, $PUNCTUATOR, $REGEX, $REGEXU, $SPACE, $STRING, $STRING_DOUBLE, $STRING_SINGLE, $TAB, $TICK, $TICK_BAD_ESCAPE, $TICK_BODY, $TICK_HEAD, $TICK_PURE, $TICK_TAIL, $WHITE, COLLECT_TOKENS_NONE, COLLECT_TOKENS_SOLID, COLLECT_TOKENS_ALL, FAIL_GRACEFULLY, FAIL_HARD, GOAL_MODULE, GOAL_SCRIPT, LF_CAN_FUNC_STMT, LF_CAN_NEW_DOT_TARGET, LF_FOR_REGEX, LF_IN_ASYNC, LF_IN_CONSTRUCTOR, LF_IN_FOR_LHS, LF_IN_FUNC_ARGS, LF_IN_GENERATOR, LF_IN_GLOBAL, LF_IN_ITERATION, LF_IN_SCOPE_ROOT, LF_IN_SWITCH, LF_IN_TEMPLATE, LF_NO_ASI, LF_NO_FLAGS, LF_DO_WHILE_ASI, LF_STRICT_MODE, LF_SUPER_CALL, LF_SUPER_PROP, INITIAL_LEXER_FLAGS, LF_DEBUG, RETURN_ANY_TOKENS, RETURN_SOLID_TOKENS, WEB_COMPAT_OFF, WEB_COMPAT_ON, debug_toktype, };\r\n//# sourceMappingURL=zetokenizer.d.ts.map"}}
