{"map":"{\"version\":3,\"file\":\"state.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/state.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { consumeSemicolon, reinterpret, validateBindingIdentifier, addToExportedNamesAndCheckForDuplicates, addToExportedBindings, nextTokenIsFuncKeywordOnSameLine, getLabel, validateContinueLabel, validateBreakStatement, addCrossingBoundary, addLabel, addVariableAndDeduplicate, isValidIdentifier } from './common';\r\nimport { KeywordDescTable } from './token';\r\nimport { next } from './scanner';\r\nimport { consumeTemplateBrace } from './scanner/template';\r\nimport { optional, expect, addVariable, checkIfExistInLexicalBindings, checkFunctionsArgForDuplicate, addFunctionName, isLexical, lookAheadOrScan } from './common';\r\nimport { createSubScope, createScope } from './scope';\r\nimport { report } from './errors';\r\nexport function create(source, onComment, onToken) {\r\n    return {\r\n        source,\r\n        onComment,\r\n        onToken,\r\n        flags: 0,\r\n        index: 0,\r\n        line: 1,\r\n        column: 0,\r\n        startIndex: 0,\r\n        startLine: 1,\r\n        startColumn: 0,\r\n        token: 536870912,\r\n        tokenValue: undefined,\r\n        tokenRaw: '',\r\n        tokenRegExp: undefined,\r\n        lastRegExpError: undefined,\r\n        numCapturingParens: 0,\r\n        largestBackReference: 0,\r\n        length: source.length,\r\n        currentChar: source.charCodeAt(0),\r\n        lastChar: 0,\r\n        inCatch: false,\r\n        exportedNames: [],\r\n        exportedBindings: [],\r\n        labelSet: undefined,\r\n        labelSetStack: [],\r\n        iterationStack: [],\r\n        labelDepth: 0,\r\n        switchStatement: 0,\r\n        iterationStatement: 0,\r\n        functionBoundaryStack: undefined\r\n    };\r\n}\r\nexport function parseTopLevel(state, context, scope) {\r\n    next(state, context | 32768);\r\n    const statements = [];\r\n    while (state.token === 131075) {\r\n        const tokenValue = state.tokenValue;\r\n        if (!(context & 1024) && tokenValue.length === 10 && tokenValue === 'use strict') {\r\n            context |= 1024;\r\n        }\r\n        statements.push(parseDirective(state, context, scope));\r\n    }\r\n    while (state.token !== 536870912) {\r\n        if (context & 2048)\r\n            statements.push(parseModuleItem(state, context, scope));\r\n        else\r\n            statements.push(parseStatementListItem(state, context, scope));\r\n    }\r\n    return statements;\r\n}\r\nexport function parseDirective(state, context, scope) {\r\n    if ((context & 131072) === 0)\r\n        return parseStatementListItem(state, context, scope);\r\n    const directive = state.tokenRaw.slice(1, -1);\r\n    const expression = parseExpression(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ExpressionStatement',\r\n        expression,\r\n        directive\r\n    };\r\n}\r\nfunction parseModuleItem(state, context, scope) {\r\n    switch (state.token) {\r\n        case 20563:\r\n            return parseExportDeclaration(state, context, scope);\r\n        case 151641:\r\n            return parseImportDeclaration(state, context, scope);\r\n        default:\r\n            return parseStatementListItem(state, context, scope);\r\n    }\r\n}\r\nfunction parseExportDeclaration(state, context, scope) {\r\n    expect(state, context, 20563);\r\n    const specifiers = [];\r\n    let declaration = null;\r\n    let source = null;\r\n    if (optional(state, context | 32768, 20560)) {\r\n        switch (state.token) {\r\n            case 151639: {\r\n                declaration = parseHoistableFunctionDeclaration(state, context | 512, scope, true, false);\r\n                break;\r\n            }\r\n            case 151629:\r\n                declaration = parseHostedClassDeclaration(state, context | 512, scope, true);\r\n                break;\r\n            case 1060972:\r\n                declaration = parseAsyncFunctionOrAssignmentExpression(state, context | 512, scope, true);\r\n                break;\r\n            default:\r\n                declaration = parseAssignmentExpression(state, context);\r\n                consumeSemicolon(state, context);\r\n        }\r\n        addToExportedNamesAndCheckForDuplicates(state, 'default');\r\n        addToExportedBindings(state, '*default*');\r\n        addVariable(state, context, scope, 0, true, false, '*default*');\r\n        return {\r\n            type: 'ExportDefaultDeclaration',\r\n            declaration\r\n        };\r\n    }\r\n    switch (state.token) {\r\n        case 21105203: {\r\n            next(state, context);\r\n            expect(state, context, 12401);\r\n            if (state.token !== 131075)\r\n                report(state, 0);\r\n            source = parseLiteral(state, context);\r\n            consumeSemicolon(state, context);\r\n            return {\r\n                type: 'ExportAllDeclaration',\r\n                source\r\n            };\r\n        }\r\n        case 131084: {\r\n            const exportedNames = [];\r\n            const exportedBindings = [];\r\n            expect(state, context, 131084);\r\n            while (state.token !== 536870927) {\r\n                const tokenValue = state.tokenValue;\r\n                const token = state.token;\r\n                const local = parseIdentifier(state, context);\r\n                let exported;\r\n                if (state.token === 16920683) {\r\n                    next(state, context);\r\n                    if (!(state.token & 274432))\r\n                        report(state, 0);\r\n                    exportedNames.push(state.tokenValue);\r\n                    exportedBindings.push(tokenValue);\r\n                    exported = parseIdentifier(state, context);\r\n                }\r\n                else {\r\n                    validateBindingIdentifier(state, context, 8, token);\r\n                    exportedNames.push(state.tokenValue);\r\n                    exportedBindings.push(state.tokenValue);\r\n                    exported = local;\r\n                }\r\n                specifiers.push({\r\n                    type: 'ExportSpecifier',\r\n                    local,\r\n                    exported\r\n                });\r\n                if (state.token !== 536870927)\r\n                    expect(state, context, 18);\r\n            }\r\n            expect(state, context, 536870927);\r\n            if (state.token === 12401) {\r\n                next(state, context);\r\n                if (state.token !== 131075)\r\n                    report(state, 0);\r\n                source = parseLiteral(state, context);\r\n            }\r\n            else {\r\n                let i = 0;\r\n                let iMax = exportedNames.length;\r\n                for (; i < iMax; i++) {\r\n                    addToExportedNamesAndCheckForDuplicates(state, exportedNames[i]);\r\n                }\r\n                i = 0;\r\n                iMax = exportedBindings.length;\r\n                for (; i < iMax; i++) {\r\n                    addToExportedBindings(state, exportedBindings[i]);\r\n                }\r\n            }\r\n            consumeSemicolon(state, context);\r\n            break;\r\n        }\r\n        case 151629:\r\n            declaration = parseHostedClassDeclaration(state, context, scope, false);\r\n            break;\r\n        case 402821192:\r\n            declaration = parseLexicalDeclaration(state, context, 4, 4, scope);\r\n            if (checkIfExistInLexicalBindings(state, context, scope))\r\n                report(state, 0);\r\n            break;\r\n        case 402804809:\r\n            declaration = parseLexicalDeclaration(state, context, 8, 4, scope);\r\n            if (checkIfExistInLexicalBindings(state, context, scope))\r\n                report(state, 0);\r\n            break;\r\n        case 268587079:\r\n            declaration = parseVariableStatement(state, context, 2, 4, scope);\r\n            break;\r\n        case 151639:\r\n            declaration = parseHoistableFunctionDeclaration(state, context, scope, true, false);\r\n            break;\r\n        case 1060972:\r\n            declaration = parseAsyncFunctionOrAssignmentExpression(state, context, scope, false);\r\n            break;\r\n        default:\r\n            report(state, 0);\r\n    }\r\n    return {\r\n        type: 'ExportNamedDeclaration',\r\n        source,\r\n        specifiers,\r\n        declaration\r\n    };\r\n}\r\nexport function parseImportDeclaration(state, context, scope) {\r\n    expect(state, context, 151641);\r\n    let source;\r\n    const specifiers = [];\r\n    if ((state.token & 274432) === 274432) {\r\n        validateBindingIdentifier(state, context, 8);\r\n        addVariable(state, context, scope, 0, true, false, state.tokenValue);\r\n        specifiers.push({\r\n            type: 'ImportDefaultSpecifier',\r\n            local: parseIdentifier(state, context)\r\n        });\r\n        if (optional(state, context, 18)) {\r\n            if (state.token === 21105203) {\r\n                parseImportNamespace(state, context, scope, specifiers);\r\n            }\r\n            else if (state.token === 131084) {\r\n                parseImportSpecifierOrNamedImports(state, context, scope, specifiers);\r\n            }\r\n            else\r\n                report(state, 0);\r\n        }\r\n        source = parseModuleSpecifier(state, context);\r\n    }\r\n    else if (state.token === 131075) {\r\n        source = parseLiteral(state, context);\r\n    }\r\n    else {\r\n        if (state.token === 21105203) {\r\n            parseImportNamespace(state, context, scope, specifiers);\r\n        }\r\n        else if (state.token === 131084) {\r\n            parseImportSpecifierOrNamedImports(state, context, scope, specifiers);\r\n        }\r\n        else\r\n            report(state, 0);\r\n        source = parseModuleSpecifier(state, context);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ImportDeclaration',\r\n        specifiers,\r\n        source\r\n    };\r\n}\r\nfunction parseImportSpecifierOrNamedImports(state, context, scope, specifiers) {\r\n    expect(state, context, 131084);\r\n    while (state.token !== 536870927) {\r\n        const tokenValue = state.tokenValue;\r\n        const token = state.token;\r\n        if (!(state.token & 274432))\r\n            report(state, 0);\r\n        const imported = parseIdentifier(state, context);\r\n        let local;\r\n        if (optional(state, context, 16920683)) {\r\n            validateBindingIdentifier(state, context, 8);\r\n            addVariable(state, context, scope, 8, true, false, state.tokenValue);\r\n            local = parseIdentifier(state, context);\r\n        }\r\n        else {\r\n            validateBindingIdentifier(state, context, 8, token);\r\n            addVariable(state, context, scope, 8, true, false, tokenValue);\r\n            local = imported;\r\n        }\r\n        specifiers.push({\r\n            type: 'ImportSpecifier',\r\n            local,\r\n            imported\r\n        });\r\n        if (state.token !== 536870927)\r\n            expect(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n}\r\nfunction parseImportNamespace(state, context, scope, specifiers) {\r\n    next(state, context);\r\n    expect(state, context, 16920683);\r\n    validateBindingIdentifier(state, context, 8);\r\n    addVariable(state, context, scope, 8, true, false, state.tokenValue);\r\n    const local = parseIdentifier(state, context);\r\n    specifiers.push({\r\n        type: 'ImportNamespaceSpecifier',\r\n        local\r\n    });\r\n}\r\nfunction parseModuleSpecifier(state, context) {\r\n    expect(state, context, 12401);\r\n    if (state.token !== 131075)\r\n        report(state, 0);\r\n    return parseLiteral(state, context);\r\n}\r\nfunction parseAsyncFunctionOrAssignmentExpression(state, context, scope, isDefault) {\r\n    return lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)\r\n        ? parseHoistableFunctionDeclaration(state, context, scope, isDefault, true)\r\n        : parseAssignmentExpression(state, context);\r\n}\r\nfunction parseStatementListItem(state, context, scope) {\r\n    switch (state.token) {\r\n        case 151639:\r\n            return parseFunctionDeclaration(state, context, scope, 128, false);\r\n        case 151629:\r\n            return parseClassDeclaration(state, context, scope);\r\n        case 402804809:\r\n            return parseLexicalDeclaration(state, context, 8, 1, scope);\r\n        case 402821192:\r\n            return parseLetOrExpressionStatement(state, context, scope);\r\n        case 1060972:\r\n            return parseAsyncFunctionOrExpressionStatement(state, context, scope);\r\n        default:\r\n            return parseStatement(state, context, scope, 1);\r\n    }\r\n}\r\nfunction parseAsyncFunctionOrExpressionStatement(state, context, scope) {\r\n    return lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)\r\n        ? parseFunctionDeclaration(state, context, scope, 0, true)\r\n        : parseExpressionOrLabelledStatement(state, context, scope, 2);\r\n}\r\nfunction parseLetOrExpressionStatement(state, context, scope) {\r\n    return lookAheadOrScan(state, context, isLexical, true)\r\n        ? parseLexicalDeclaration(state, context, 4, 1, scope)\r\n        : parseExpressionOrLabelledStatement(state, context, scope, 2);\r\n}\r\nfunction parseStatement(state, context, scope, label) {\r\n    switch (state.token) {\r\n        case 268587079:\r\n            return parseVariableStatement(state, context, 2, 1, scope);\r\n        case 151645:\r\n            return parseSwitchStatement(state, context, scope);\r\n        case 20561:\r\n            return parseDoWhileStatement(state, context, scope);\r\n        case 20571:\r\n            return parseReturnStatement(state, context);\r\n        case 20577:\r\n            return parseWhileStatement(state, context, scope);\r\n        case 20578:\r\n            return parseWithStatement(state, context, scope);\r\n        case 20554:\r\n            return parseBreakStatement(state, context);\r\n        case 20558:\r\n            return parseContinueStatement(state, context);\r\n        case 20559:\r\n            return parseDebuggerStatement(state, context);\r\n        case 20576:\r\n            return parseTryStatement(state, context, scope);\r\n        case 151647:\r\n            return parseThrowStatement(state, context);\r\n        case 20568:\r\n            return parseIfStatement(state, context, scope);\r\n        case 536870929:\r\n            return parseEmptyStatement(state, context);\r\n        case 131084:\r\n            return parseBlockStatement(state, (context | 4096) ^ 4096, createSubScope(scope, 1));\r\n        case 20566:\r\n            return parseForStatement(state, context, scope);\r\n        case 151639:\r\n        case 151629:\r\n            report(state, 0);\r\n        default:\r\n            return parseExpressionOrLabelledStatement(state, context, scope, label);\r\n    }\r\n}\r\nexport function parseBlockStatement(state, context, scope) {\r\n    const body = [];\r\n    next(state, context);\r\n    while (state.token !== 536870927) {\r\n        body.push(parseStatementListItem(state, context, scope));\r\n    }\r\n    expect(state, context | 32768, 536870927);\r\n    return {\r\n        type: 'BlockStatement',\r\n        body\r\n    };\r\n}\r\nexport function parseEmptyStatement(state, context) {\r\n    next(state, context);\r\n    return {\r\n        type: 'EmptyStatement'\r\n    };\r\n}\r\nexport function parseThrowStatement(state, context) {\r\n    next(state, context);\r\n    if (state.flags & 1)\r\n        report(state, 54);\r\n    const argument = parseExpression(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ThrowStatement',\r\n        argument\r\n    };\r\n}\r\nexport function parseIfStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const consequent = parseConsequentOrAlternate(state, context, scope);\r\n    const alternate = optional(state, context, 20562)\r\n        ? parseConsequentOrAlternate(state, context, scope)\r\n        : null;\r\n    return {\r\n        type: 'IfStatement',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    };\r\n}\r\nfunction parseConsequentOrAlternate(state, context, scope) {\r\n    return context & (16 | 1024) || state.token !== 151639\r\n        ? parseStatement(state, (context | 4096) ^ 4096, scope, 2)\r\n        : parseFunctionDeclaration(state, context, scope, 1, false);\r\n}\r\nfunction parseSwitchStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const discriminant = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    expect(state, context, 131084);\r\n    const cases = [];\r\n    let seenDefault = false;\r\n    const switchScope = createSubScope(scope, 3);\r\n    const previousSwitchStatement = state.switchStatement;\r\n    state.switchStatement = 1;\r\n    while (state.token !== 536870927) {\r\n        let test = null;\r\n        if (optional(state, context, 20555)) {\r\n            test = parseExpression(state, context);\r\n        }\r\n        else {\r\n            expect(state, context, 20560);\r\n            if (seenDefault)\r\n                report(state, 0);\r\n            seenDefault = true;\r\n        }\r\n        cases.push(parseCaseOrDefaultClauses(state, context, test, switchScope));\r\n    }\r\n    state.switchStatement = previousSwitchStatement;\r\n    expect(state, context, 536870927);\r\n    return {\r\n        type: 'SwitchStatement',\r\n        discriminant,\r\n        cases\r\n    };\r\n}\r\nexport function parseReturnStatement(state, context) {\r\n    if (!(context & (64 | 134217728)))\r\n        report(state, 55);\r\n    next(state, context | 32768);\r\n    const argument = (state.token & 536870912) < 1 && (state.flags & 1) < 1\r\n        ? parseExpression(state, context & ~134217728)\r\n        : null;\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ReturnStatement',\r\n        argument\r\n    };\r\n}\r\nexport function parseWhileStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    return {\r\n        type: 'WhileStatement',\r\n        test,\r\n        body\r\n    };\r\n}\r\nexport function parseContinueStatement(state, context) {\r\n    next(state, context);\r\n    let label = null;\r\n    if (!(state.flags & 1) && state.token & 4096) {\r\n        const tokenValue = state.tokenValue;\r\n        label = parseIdentifier(state, context);\r\n        validateContinueLabel(state, tokenValue);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    if (label === null && state.iterationStatement === 0 && state.switchStatement === 0) {\r\n        report(state, 50);\r\n    }\r\n    return {\r\n        type: 'ContinueStatement',\r\n        label\r\n    };\r\n}\r\nexport function parseBreakStatement(state, context) {\r\n    next(state, context);\r\n    let label = null;\r\n    if (!(state.flags & 1) && state.token & 4096) {\r\n        const tokenValue = state.tokenValue;\r\n        label = parseIdentifier(state, context);\r\n        validateBreakStatement(state, tokenValue);\r\n    }\r\n    else if (state.iterationStatement === 0 && state.switchStatement === 0) {\r\n        report(state, 51);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'BreakStatement',\r\n        label\r\n    };\r\n}\r\nexport function parseWithStatement(state, context, scope) {\r\n    if (context & 1024)\r\n        report(state, 52);\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const object = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    return {\r\n        type: 'WithStatement',\r\n        object,\r\n        body\r\n    };\r\n}\r\nexport function parseDebuggerStatement(state, context) {\r\n    next(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'DebuggerStatement'\r\n    };\r\n}\r\nexport function parseTryStatement(state, context, scope) {\r\n    next(state, context);\r\n    const block = parseBlockStatement(state, context, createSubScope(scope, 1));\r\n    const handler = optional(state, context, 20556) ? parseCatchBlock(state, context, scope) : null;\r\n    const finalizer = optional(state, context, 20565)\r\n        ? parseBlockStatement(state, (context | 4096) ^ 4096, createSubScope(scope, 1))\r\n        : null;\r\n    if (!handler && !finalizer)\r\n        report(state, 0);\r\n    return {\r\n        type: 'TryStatement',\r\n        block,\r\n        handler,\r\n        finalizer\r\n    };\r\n}\r\nexport function parseCatchBlock(state, context, scope) {\r\n    let param = null;\r\n    let secondScope = scope;\r\n    if (optional(state, context, 131083)) {\r\n        const catchScope = createSubScope(scope, 4);\r\n        if (state.token === 16)\r\n            report(state, 0);\r\n        param = parseBindingIdentifierOrPattern(state, context, catchScope, 1, 8, false);\r\n        if (state.token === 8388637)\r\n            report(state, 0);\r\n        if (checkIfExistInLexicalBindings(state, context, catchScope, true))\r\n            report(state, 45, state.tokenValue);\r\n        expect(state, context, 16);\r\n        secondScope = createSubScope(catchScope, 1);\r\n    }\r\n    const body = parseBlockStatement(state, context, secondScope);\r\n    return {\r\n        type: 'CatchClause',\r\n        param,\r\n        body\r\n    };\r\n}\r\nexport function parseDoWhileStatement(state, context, scope) {\r\n    expect(state, context, 20561);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    expect(state, context, 20577);\r\n    expect(state, context, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    optional(state, context, 536870929);\r\n    return {\r\n        type: 'DoWhileStatement',\r\n        body,\r\n        test\r\n    };\r\n}\r\nexport function parseCaseOrDefaultClauses(state, context, test, scope) {\r\n    expect(state, context, 21);\r\n    const consequent = [];\r\n    while (state.token !== 20555 &&\r\n        state.token !== 536870927 &&\r\n        state.token !== 20560) {\r\n        consequent.push(parseStatementListItem(state, (context | 4096) ^ 4096, scope));\r\n    }\r\n    return {\r\n        type: 'SwitchCase',\r\n        test,\r\n        consequent\r\n    };\r\n}\r\nfunction parseForStatement(state, context, scope) {\r\n    next(state, context);\r\n    const forAwait = optional(state, context, 667757);\r\n    scope = createSubScope(scope, 2);\r\n    expect(state, context, 131083);\r\n    let init = null;\r\n    let declarations = null;\r\n    let test = null;\r\n    let update = null;\r\n    let right;\r\n    let isPattern = false;\r\n    if (state.token !== 536870929) {\r\n        if ((state.token & 268435456) !== 0) {\r\n            const kind = KeywordDescTable[state.token & 255];\r\n            if (optional(state, context, 268587079)) {\r\n                declarations = parseVariableDeclarationList(state, context | 8192, 2, 2, false, scope);\r\n                init = { type: 'VariableDeclaration', kind, declarations };\r\n            }\r\n            else if (state.token === 402821192) {\r\n                const tokenValue = state.tokenValue;\r\n                next(state, context);\r\n                if (state.token === 33707825) {\r\n                    if (context & 1024)\r\n                        report(state, 0);\r\n                    init = { type: 'Identifier', name: tokenValue };\r\n                }\r\n                else {\r\n                    declarations = parseVariableDeclarationList(state, context, 4, 2, true, scope);\r\n                    if (checkIfExistInLexicalBindings(state, context, scope, true))\r\n                        report(state, 45, state.tokenValue);\r\n                    init = { type: 'VariableDeclaration', kind, declarations };\r\n                }\r\n            }\r\n            else if (optional(state, context, 402804809)) {\r\n                declarations = parseVariableDeclarationList(state, context, 8, 2, false, scope);\r\n                if (checkIfExistInLexicalBindings(state, context, scope, true))\r\n                    report(state, 45, state.tokenValue);\r\n                init = { type: 'VariableDeclaration', kind, declarations };\r\n            }\r\n        }\r\n        else {\r\n            isPattern = state.token === 131091 || state.token === 131084;\r\n            init = parseExpression(state, context | 8192);\r\n        }\r\n    }\r\n    if (forAwait ? expect(state, context, 12402) : optional(state, context, 12402)) {\r\n        if (state.inCatch)\r\n            report(state, 0);\r\n        if (isPattern)\r\n            reinterpret(init);\r\n        right = parseAssignmentExpression(state, context);\r\n        expect(state, context, 16);\r\n        const previousIterationStatement = state.iterationStatement;\r\n        state.iterationStatement = 1;\r\n        const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n        state.iterationStatement = previousIterationStatement;\r\n        return {\r\n            type: 'ForOfStatement',\r\n            body,\r\n            left: init,\r\n            right,\r\n            await: forAwait\r\n        };\r\n    }\r\n    if (optional(state, context, 33707825)) {\r\n        if (isPattern)\r\n            reinterpret(init);\r\n        right = parseExpression(state, context);\r\n        expect(state, context, 16);\r\n        const previousIterationStatement = state.iterationStatement;\r\n        state.iterationStatement = 1;\r\n        const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n        state.iterationStatement = previousIterationStatement;\r\n        return {\r\n            type: 'ForInStatement',\r\n            body,\r\n            left: init,\r\n            right\r\n        };\r\n    }\r\n    expect(state, context, 536870929);\r\n    if (state.token !== 536870929) {\r\n        test = parseExpression(state, context);\r\n    }\r\n    expect(state, context, 536870929);\r\n    if (state.token !== 16)\r\n        update = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    return {\r\n        type: 'ForStatement',\r\n        body,\r\n        init,\r\n        test,\r\n        update\r\n    };\r\n}\r\nexport function parseExpressionOrLabelledStatement(state, context, scope, label) {\r\n    const token = state.token;\r\n    const tokenValue = state.tokenValue;\r\n    const expr = parseExpression(state, context);\r\n    if (token & 4096 && state.token === 21) {\r\n        next(state, context | 32768);\r\n        validateBindingIdentifier(state, context, 0, token);\r\n        if (getLabel(state, `@${tokenValue}`, false, true)) {\r\n            report(state, 53, tokenValue);\r\n        }\r\n        addLabel(state, tokenValue);\r\n        let body = null;\r\n        if ((context & (16 | 1024)) === 0 &&\r\n            (state.token === 151639 && label === 1)) {\r\n            body = parseFunctionDeclaration(state, context, scope, 1, false);\r\n        }\r\n        else\r\n            body = parseStatement(state, (context | 4096) ^ 4096, scope, label);\r\n        state.labelDepth--;\r\n        return {\r\n            type: 'LabeledStatement',\r\n            label: expr,\r\n            body\r\n        };\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ExpressionStatement',\r\n        expression: expr\r\n    };\r\n}\r\nexport function parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    switch (state.token) {\r\n        case 131084:\r\n            return parserObjectAssignmentPattern(state, context, scope, type, origin, verifyDuplicates);\r\n        case 131091:\r\n            return parseArrayAssignmentPattern(state, context, scope, type, origin, verifyDuplicates);\r\n        default:\r\n            return parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n}\r\nexport function parseBindingIdentifier(state, context, scope, type, origin, checkForDuplicates) {\r\n    const name = state.tokenValue;\r\n    validateBindingIdentifier(state, context, type);\r\n    addVariable(state, context, scope, type, checkForDuplicates, (origin === 1 || origin === 2 || origin === 4) &&\r\n        type === 2\r\n        ? true\r\n        : false, name);\r\n    if (origin === 4) {\r\n        addToExportedNamesAndCheckForDuplicates(state, state.tokenValue);\r\n        addToExportedBindings(state, state.tokenValue);\r\n    }\r\n    next(state, context | 32768);\r\n    return {\r\n        type: 'Identifier',\r\n        name\r\n    };\r\n}\r\nexport function parseAssignmentRestElement(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nfunction AssignmentRestProperty(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nexport function parseArrayAssignmentPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 131091);\r\n    const elements = [];\r\n    while (state.token !== 20) {\r\n        if (optional(state, context, 18)) {\r\n            elements.push(null);\r\n        }\r\n        else {\r\n            if (state.token === 14) {\r\n                elements.push(parseAssignmentRestElement(state, context, scope, type, origin, verifyDuplicates));\r\n                break;\r\n            }\r\n            else {\r\n                elements.push(parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates));\r\n            }\r\n            if (state.token !== 20)\r\n                expect(state, context, 18);\r\n        }\r\n    }\r\n    expect(state, context, 20);\r\n    return {\r\n        type: 'ArrayPattern',\r\n        elements\r\n    };\r\n}\r\nexport function parserObjectAssignmentPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    const properties = [];\r\n    expect(state, context, 131084);\r\n    while (state.token !== 536870927) {\r\n        if (state.token === 14) {\r\n            properties.push(AssignmentRestProperty(state, context, scope, type, origin, verifyDuplicates));\r\n            break;\r\n        }\r\n        properties.push(parseAssignmentProperty(state, context, scope, type, origin, verifyDuplicates));\r\n        if (state.token !== 536870927)\r\n            expect(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n    return {\r\n        type: 'ObjectPattern',\r\n        properties\r\n    };\r\n}\r\nexport function parseAssignmentPattern(state, context, left) {\r\n    return {\r\n        type: 'AssignmentPattern',\r\n        left,\r\n        right: parseAssignmentExpression(state, context)\r\n    };\r\n}\r\nexport function parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates) {\r\n    const left = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return !optional(state, context, 8388637)\r\n        ? left\r\n        : {\r\n            type: 'AssignmentPattern',\r\n            left,\r\n            right: parseAssignmentExpression(state, context)\r\n        };\r\n}\r\nexport function parseComputedPropertyName(state, context) {\r\n    expect(state, context, 131091);\r\n    const key = parseAssignmentExpression(state, context);\r\n    expect(state, context, 20);\r\n    return key;\r\n}\r\nfunction parseAssignmentProperty(state, context, scope, type, origin, verifyDuplicates) {\r\n    const { token } = state;\r\n    let key;\r\n    let value;\r\n    let computed = false;\r\n    let shorthand = false;\r\n    if (token & 4096) {\r\n        key = parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n        shorthand = !optional(state, context, 21);\r\n        if (shorthand) {\r\n            const hasInitializer = optional(state, context, 8388637);\r\n            value = hasInitializer ? parseAssignmentPattern(state, context, key) : key;\r\n        }\r\n        else\r\n            value = parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n    else {\r\n        if (state.token === 131075 || state.token === 131074) {\r\n            key = parseLiteral(state, context);\r\n        }\r\n        else if (state.token === 131091) {\r\n            computed = true;\r\n            key = parseComputedPropertyName(state, context);\r\n        }\r\n        else\r\n            key = parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n        expect(state, context, 21);\r\n        value = parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n    return {\r\n        type: 'Property',\r\n        kind: 'init',\r\n        key,\r\n        computed,\r\n        value,\r\n        method: false,\r\n        shorthand\r\n    };\r\n}\r\nexport function parseFunctionDeclaration(state, context, scope, origin, isAsync) {\r\n    next(state, context);\r\n    const isGenerator = (origin & 1) === 0 && optional(state, context, 21105203);\r\n    let funcScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token !== 131083 && state.token & 274432) {\r\n        validateBindingIdentifier(state, ((context | (2097152 | 4194304)) ^ (2097152 | 4194304)) |\r\n            (context & 1024\r\n                ? 2097152\r\n                : context & 2097152\r\n                    ? 2097152\r\n                    : 0 | (context & 2048)\r\n                        ? 4194304\r\n                        : context & 4194304\r\n                            ? 4194304\r\n                            : 0), (context & 2048) !== 2048 && (context & 4096) === 4096\r\n            ? 2\r\n            : 4);\r\n        if (origin & 1)\r\n            scope = createSubScope(scope, 1);\r\n        addFunctionName(state, context, scope, (context & 2048) !== 2048 && (context & 4096) === 4096\r\n            ? 2\r\n            : 4, true);\r\n        funcScope = createSubScope(funcScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    else if (!(context & 512))\r\n        report(state, 0);\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    context = (context | 262144) ^ 262144;\r\n    const paramScoop = createSubScope(funcScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864, paramScoop, 32);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), firstRestricted, origin);\r\n    return {\r\n        type: 'FunctionDeclaration',\r\n        params,\r\n        body,\r\n        async: (context & 4194304) !== 0,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nfunction parseHostedClassDeclaration(state, context, scope, isNotDefault) {\r\n    next(state, context);\r\n    context = (context | 1024 | 16777216) ^ (1024 | 16777216);\r\n    let id = null;\r\n    let superClass = null;\r\n    let name = '';\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        name = state.tokenValue;\r\n        validateBindingIdentifier(state, context, 16);\r\n        addVariableAndDeduplicate(state, context, scope, 4, true, name);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (isNotDefault)\r\n        addToExportedNamesAndCheckForDuplicates(state, name);\r\n    addToExportedBindings(state, name);\r\n    if (optional(state, context, 20564)) {\r\n        superClass = parseLeftHandSideExpression(state, context);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 128);\r\n    return {\r\n        type: 'ClassDeclaration',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nexport function parseHoistableFunctionDeclaration(state, context, scope, isNotDefault, isAsync) {\r\n    next(state, context);\r\n    const isGenerator = optional(state, context, 21105203);\r\n    let funcScope = createScope(1);\r\n    let id = null;\r\n    let name = '';\r\n    if (state.token & 274432) {\r\n        name = state.tokenValue;\r\n        validateBindingIdentifier(state, context, 4);\r\n        addFunctionName(state, context, scope, 4, true);\r\n        funcScope = createSubScope(funcScope, 1);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (isNotDefault)\r\n        addToExportedNamesAndCheckForDuplicates(state, name);\r\n    addToExportedBindings(state, name);\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    context = (context | 262144) ^ 262144;\r\n    const paramScoop = createSubScope(funcScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864, paramScoop, 32);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), undefined, 0);\r\n    return {\r\n        type: 'FunctionDeclaration',\r\n        params,\r\n        body,\r\n        async: (context & 4194304) !== 0,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nexport function parseFormalParameters(state, context, scope, origin) {\r\n    expect(state, context, 131083);\r\n    const params = [];\r\n    state.flags = (state.flags | 64) ^ 64;\r\n    while (state.token !== 16) {\r\n        if (state.token === 14) {\r\n            params.push(parseRestElement(state, context, scope, 1, 0));\r\n            break;\r\n        }\r\n        else {\r\n            if (optional(state, context, 18)) {\r\n                if (state.token === 18)\r\n                    report(state, 0);\r\n            }\r\n            else {\r\n                let left = parseBindingIdentifierOrPattern(state, context, scope, 1, origin, false);\r\n                if (optional(state, context | 32768, 8388637)) {\r\n                    if (state.token & 2097152 && context & 2097152)\r\n                        report(state, 0);\r\n                    left = parseAssignmentPattern(state, context, left);\r\n                }\r\n                params.push(left);\r\n            }\r\n        }\r\n    }\r\n    expect(state, context, 16);\r\n    if ((context & (1024 | 33554432)) !== 0)\r\n        checkFunctionsArgForDuplicate(state, scope.lex, true);\r\n    return params;\r\n}\r\nexport function parseRestElement(state, context, scope, type, origin) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, false);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nexport function parseFunctionBody(state, context, scope, firstRestricted, origin) {\r\n    const body = [];\r\n    expect(state, context, 131084);\r\n    const isStrict = (context & 1024) === 1024;\r\n    context = (context | 4096 | 134217728 | 1048576) ^ 1048576;\r\n    if (state.token !== 536870927) {\r\n        while ((state.token & 131075) === 131075) {\r\n            if (state.tokenValue.length === 10 && state.tokenValue === 'use strict') {\r\n                context |= 1024;\r\n            }\r\n            body.push(parseDirective(state, context, scope));\r\n        }\r\n        if (context & 1024) {\r\n            if ((firstRestricted && firstRestricted === 'eval') || firstRestricted === 'arguments')\r\n                report(state, 61);\r\n        }\r\n        if (state.flags & 64)\r\n            report(state, 61);\r\n        if (!isStrict && (context & 1024) !== 0 && (context & 1048576) === 0) {\r\n            checkFunctionsArgForDuplicate(state, scope.lex['@'], true);\r\n        }\r\n        const previousSwitchStatement = state.switchStatement;\r\n        const previousIterationStatement = state.iterationStatement;\r\n        if ((state.iterationStatement & 1) === 1) {\r\n            state.iterationStatement = 2;\r\n        }\r\n        addCrossingBoundary(state);\r\n        while (state.token !== 536870927) {\r\n            body.push(parseStatementListItem(state, context, scope));\r\n        }\r\n        state.labelDepth--;\r\n        state.switchStatement = previousSwitchStatement;\r\n        state.iterationStatement = previousIterationStatement;\r\n    }\r\n    expect(state, origin & 128 ? context | 32768 : context, 536870927);\r\n    return {\r\n        type: 'BlockStatement',\r\n        body\r\n    };\r\n}\r\nexport function parseVariableStatement(state, context, type, origin, scope) {\r\n    const { token } = state;\r\n    next(state, context);\r\n    const declarations = parseVariableDeclarationList(state, context, type, origin, false, scope);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'VariableDeclaration',\r\n        kind: KeywordDescTable[token & 255],\r\n        declarations\r\n    };\r\n}\r\nexport function parseLexicalDeclaration(state, context, type, origin, scope) {\r\n    const { token } = state;\r\n    next(state, context);\r\n    const declarations = parseVariableDeclarationList(state, context, type, origin, false, scope);\r\n    if (checkIfExistInLexicalBindings(state, context, scope))\r\n        report(state, 0);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'VariableDeclaration',\r\n        kind: KeywordDescTable[token & 255],\r\n        declarations\r\n    };\r\n}\r\nexport function parseVariableDeclarationList(state, context, type, origin, checkForDuplicates, scope) {\r\n    const elementCount = 1;\r\n    const list = [parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope)];\r\n    while (optional(state, context, 18)) {\r\n        list.push(parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope));\r\n    }\r\n    if (origin === 2 && (state.token === 33707825 || state.token === 12402)) {\r\n        if (state.token === 12402 ||\r\n            type === 2 ||\r\n            context & (16 | 1024)) {\r\n            if (elementCount > 1) {\r\n                report(state, 0);\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope) {\r\n    const id = parseBindingIdentifierOrPattern(state, context, scope, type, origin, checkForDuplicates);\r\n    let init = null;\r\n    if (optional(state, context | 32768, 8388637)) {\r\n        init = parseAssignmentExpression(state, context);\r\n    }\r\n    else if (type & 8 &&\r\n        ((origin & 2) === 0 || (state.token === 536870929 || state.token === 18))) {\r\n        report(state, 49);\r\n    }\r\n    return {\r\n        type: 'VariableDeclarator',\r\n        init,\r\n        id\r\n    };\r\n}\r\nexport function parseExpression(state, context) {\r\n    const expr = parseAssignmentExpression(state, context);\r\n    if (state.token !== 18)\r\n        return expr;\r\n    return parseSequenceExpression(state, context, expr);\r\n}\r\nexport function parseSequenceExpression(state, context, left) {\r\n    const expressions = [left];\r\n    while (optional(state, context, 18)) {\r\n        expressions.push(parseAssignmentExpression(state, context));\r\n    }\r\n    return {\r\n        type: 'SequenceExpression',\r\n        expressions\r\n    };\r\n}\r\nfunction parseYieldExpression(state, context) {\r\n    expect(state, context | 32768, 2265194);\r\n    let argument = null;\r\n    let delegate = false;\r\n    if (!(state.flags & 1)) {\r\n        delegate = optional(state, context, 21105203);\r\n        if (delegate || state.token & 131072) {\r\n            argument = parseAssignmentExpression(state, context);\r\n        }\r\n    }\r\n    return {\r\n        type: 'YieldExpression',\r\n        argument,\r\n        delegate\r\n    };\r\n}\r\nexport function parseAssignmentExpression(state, context) {\r\n    if (state.token & 2097152 && context & 2097152)\r\n        return parseYieldExpression(state, context);\r\n    const expr = parseConditionalExpression(state, context);\r\n    if ((state.token & 8388608) === 8388608) {\r\n        if (state.token === 8388637)\r\n            reinterpret(expr);\r\n        const operator = state.token;\r\n        next(state, context | 32768);\r\n        const right = parseAssignmentExpression(state, context);\r\n        return {\r\n            type: 'AssignmentExpression',\r\n            left: expr,\r\n            operator: KeywordDescTable[operator & 255],\r\n            right\r\n        };\r\n    }\r\n    return expr;\r\n}\r\nfunction parseConditionalExpression(state, context) {\r\n    const test = parseBinaryExpression(state, context, 0);\r\n    if (!optional(state, context | 32768, 22))\r\n        return test;\r\n    const consequent = parseAssignmentExpression(state, context);\r\n    expect(state, context | 32768, 21);\r\n    const alternate = parseAssignmentExpression(state, context);\r\n    return {\r\n        type: 'ConditionalExpression',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    };\r\n}\r\nfunction parseBinaryExpression(state, context, minPrec, left = parseUnaryExpression(state, context)) {\r\n    const bit = -((context & 8192) > 0) & 33707825;\r\n    let t;\r\n    let prec;\r\n    while (state.token & 16908288) {\r\n        t = state.token;\r\n        prec = t & 3840;\r\n        if (prec + ((t === 16911158) << 8) - ((bit === t) << 12) <= minPrec)\r\n            break;\r\n        next(state, context | 32768);\r\n        left = {\r\n            type: t & 65536 ? 'LogicalExpression' : 'BinaryExpression',\r\n            left,\r\n            right: parseBinaryExpression(state, context, prec),\r\n            operator: KeywordDescTable[t & 255]\r\n        };\r\n    }\r\n    return left;\r\n}\r\nfunction parseAwaitExpression(state, context) {\r\n    next(state, context | 32768);\r\n    return {\r\n        type: 'AwaitExpression',\r\n        argument: parseUnaryExpression(state, context)\r\n    };\r\n}\r\nfunction parseUnaryExpression(state, context) {\r\n    const t = state.token;\r\n    if (context & 4194304 && t & 524288) {\r\n        return parseAwaitExpression(state, context);\r\n    }\r\n    else if ((t & 33685504) === 33685504) {\r\n        const { token } = state;\r\n        next(state, context | 32768);\r\n        const argument = parseUnaryExpression(state, context);\r\n        if (state.token === 16911158) {\r\n            report(state, 57);\r\n        }\r\n        if (context & 1024 && token === 33706027) {\r\n            if (argument.type === 'Identifier')\r\n                report(state, 56);\r\n        }\r\n        return {\r\n            type: 'UnaryExpression',\r\n            operator: KeywordDescTable[t & 255],\r\n            argument,\r\n            prefix: true\r\n        };\r\n    }\r\n    return parseUpdateExpression(state, context);\r\n}\r\nfunction parseUpdateExpression(state, context) {\r\n    const { token } = state;\r\n    if ((state.token & 67239936) === 67239936) {\r\n        next(state, context);\r\n        const expr = parseLeftHandSideExpression(state, context);\r\n        return {\r\n            type: 'UpdateExpression',\r\n            argument: expr,\r\n            operator: KeywordDescTable[token & 255],\r\n            prefix: true\r\n        };\r\n    }\r\n    const expression = parseLeftHandSideExpression(state, context);\r\n    if ((state.token & 67239936) === 67239936 && (state.flags & 1) === 0) {\r\n        const operator = state.token;\r\n        next(state, context);\r\n        return {\r\n            type: 'UpdateExpression',\r\n            argument: expression,\r\n            operator: KeywordDescTable[operator & 255],\r\n            prefix: false\r\n        };\r\n    }\r\n    return expression;\r\n}\r\nexport function parseLeftHandSideExpression(state, context) {\r\n    const expr = state.token === 151644\r\n        ? parseSuperExpression(state, context)\r\n        : parseMemberExpression(state, context, parsePrimaryExpression(state, context));\r\n    return parseCallExpression(state, context, expr);\r\n}\r\nfunction parseCallExpression(state, context, expr) {\r\n    while (true) {\r\n        expr = parseMemberExpression(state, context, expr);\r\n        if (state.token !== 131083)\r\n            return expr;\r\n        const args = parseArgumentList(state, context);\r\n        expr = {\r\n            type: 'CallExpression',\r\n            callee: expr,\r\n            arguments: args\r\n        };\r\n    }\r\n}\r\nexport function parseMetaProperty(state, context, id) {\r\n    return {\r\n        meta: id,\r\n        type: 'MetaProperty',\r\n        property: parseIdentifier(state, context)\r\n    };\r\n}\r\nfunction parseSuperExpression(state, context) {\r\n    next(state, context);\r\n    if ((context & 262144) === 0 && (state.token === 131091 || state.token === 13)) {\r\n        report(state, 59);\r\n    }\r\n    else if ((context & 524288) === 0 && state.token === 131083) {\r\n        report(state, 58);\r\n    }\r\n    return { type: 'Super' };\r\n}\r\nfunction parseMemberExpression(state, context, expr) {\r\n    while (true) {\r\n        switch (state.token) {\r\n            case 13:\r\n                next(state, context);\r\n                expr = {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: false,\r\n                    property: parseIdentifier(state, context)\r\n                };\r\n                continue;\r\n            case 131091:\r\n                next(state, context);\r\n                expr = {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: true,\r\n                    property: parseExpression(state, context)\r\n                };\r\n                expect(state, context, 20);\r\n                break;\r\n            case 131081:\r\n                expr = {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parseTemplateLiteral(state, context)\r\n                };\r\n                break;\r\n            case 131080:\r\n                expr = {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parseTemplate(state, context | 65536)\r\n                };\r\n                break;\r\n            default:\r\n                return expr;\r\n        }\r\n    }\r\n}\r\nfunction parseTemplateLiteral(parser, context) {\r\n    return {\r\n        type: 'TemplateLiteral',\r\n        expressions: [],\r\n        quasis: [parseTemplateSpans(parser, context)]\r\n    };\r\n}\r\nfunction parseTemplateHead(parser, context, cooked = null, raw) {\r\n    parser.token = consumeTemplateBrace(parser, context);\r\n    return {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked,\r\n            raw\r\n        },\r\n        tail: false\r\n    };\r\n}\r\nfunction parseTemplate(parser, context, expressions = [], quasis = []) {\r\n    const { tokenValue, tokenRaw } = parser;\r\n    expect(parser, context, 131080);\r\n    expressions.push(parseExpression(parser, context));\r\n    quasis.push(parseTemplateHead(parser, context, tokenValue, tokenRaw));\r\n    if (parser.token === 131081) {\r\n        quasis.push(parseTemplateSpans(parser, context));\r\n    }\r\n    else {\r\n        parseTemplate(parser, context, expressions, quasis);\r\n    }\r\n    return {\r\n        type: 'TemplateLiteral',\r\n        expressions,\r\n        quasis\r\n    };\r\n}\r\nfunction parseTemplateSpans(state, context) {\r\n    const { tokenValue, tokenRaw } = state;\r\n    expect(state, context, 131081);\r\n    return {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked: tokenValue,\r\n            raw: tokenRaw\r\n        },\r\n        tail: true\r\n    };\r\n}\r\nfunction parseArgumentList(state, context) {\r\n    expect(state, context | 32768, 131083);\r\n    const expressions = [];\r\n    while (state.token !== 16) {\r\n        if (state.token === 14) {\r\n            expressions.push(parseSpreadElement(state, context));\r\n        }\r\n        else {\r\n            expressions.push(parseAssignmentExpression(state, context));\r\n        }\r\n        if (state.token !== 16)\r\n            expect(state, context, 18);\r\n    }\r\n    expect(state, context, 16);\r\n    return expressions;\r\n}\r\nfunction parseSpreadElement(state, context) {\r\n    expect(state, context, 14);\r\n    const argument = parseAssignmentExpression(state, context);\r\n    return {\r\n        type: 'SpreadElement',\r\n        argument\r\n    };\r\n}\r\nfunction parseNewExpression(state, context) {\r\n    const id = parseIdentifier(state, context | 32768);\r\n    if (optional(state, context, 13)) {\r\n        if ((context & 67108864) === 0 || state.tokenValue !== 'target')\r\n            report(state, 0);\r\n        return parseMetaProperty(state, context, id);\r\n    }\r\n    return {\r\n        type: 'NewExpression',\r\n        callee: parseMemberExpression(state, context, parsePrimaryExpression(state, context)),\r\n        arguments: state.token === 131083 ? parseArgumentList(state, context) : []\r\n    };\r\n}\r\nexport function parsePrimaryExpression(state, context) {\r\n    switch (state.token) {\r\n        case 131074:\r\n        case 131075:\r\n            return parseLiteral(state, context);\r\n        case 116:\r\n            return parseBigIntLiteral(state, context);\r\n        case 131076:\r\n            return parseRegularExpressionLiteral(state, context);\r\n        case 131091:\r\n            return parseArrayExpression(state, context & ~8192);\r\n        case 131083:\r\n            return parseGroupExpression(state, context);\r\n        case 131084:\r\n            return parseObjectLiteral(state, context & ~8192, -1, 0);\r\n        case 151639:\r\n            return parseFunctionExpression(state, context, false);\r\n        case 151629:\r\n            return parseClassExpression(state, context);\r\n        case 131081:\r\n            return parseTemplateLiteral(state, context);\r\n        case 131080:\r\n            return parseTemplate(state, context);\r\n        case 151642:\r\n            return parseNewExpression(state, context);\r\n        case 151644:\r\n            return parseSuperExpression(state, context);\r\n        case 151558:\r\n        case 151557:\r\n            return parseBooleanLiteral(state, context);\r\n        case 151559:\r\n            return parseNullLiteral(state, context);\r\n        case 151646:\r\n            return parseThisExpression(state, context);\r\n        case 131084:\r\n        case 1060972: {\r\n            const expr = parseIdentifier(state, context);\r\n            if (state.flags & 1)\r\n                return expr;\r\n            if (state.token === 151639) {\r\n                return parseFunctionExpression(state, context, true);\r\n            }\r\n            if (state.token & 274432) {\r\n                if (state.token === 667757)\r\n                    report(state, 0);\r\n                const expr = parseIdentifier(state, context);\r\n                if (optional(state, context, 131082)) {\r\n                    if (state.flags & 1)\r\n                        report(state, 0);\r\n                    if (context & (2097152 | 4194304))\r\n                        report(state, 0);\r\n                    const scope = createScope(5);\r\n                    addVariableAndDeduplicate(state, context, scope, 1, true, state.tokenValue);\r\n                    return parseArrowFunctionExpression(state, context, scope, [expr], true);\r\n                }\r\n            }\r\n            if (optional(state, context, 131082)) {\r\n                if (state.flags & 1)\r\n                    report(state, 0);\r\n                if (context & (2097152 | 4194304))\r\n                    report(state, 0);\r\n                const scope = createScope(5);\r\n                return parseArrowFunctionExpression(state, context, scope, [expr], false);\r\n            }\r\n            return expr;\r\n        }\r\n        case 2265194:\r\n            if (context & (2097152 | 1024))\r\n                report(state, 67);\r\n        default:\r\n            if (isValidIdentifier(context, state.token)) {\r\n                const token = state.token;\r\n                const id = parseIdentifier(state, context | 65536);\r\n                if (optional(state, context, 131082)) {\r\n                    if (token & 2097152 && context & (4194304 | 2097152))\r\n                        report(state, 66);\r\n                    const scopes = createScope(5);\r\n                    addVariableAndDeduplicate(state, context, scopes, 1, true, state.tokenValue);\r\n                    if (context & 4194304 && token === 667757)\r\n                        report(state, 0);\r\n                    return parseArrowFunctionExpression(state, context, scopes, [id], false);\r\n                }\r\n                return id;\r\n            }\r\n            report(state, 0);\r\n    }\r\n}\r\nexport function parseArrayExpression(state, context) {\r\n    expect(state, context | 32768, 131091);\r\n    const elements = [];\r\n    while (state.token !== 20) {\r\n        if (optional(state, context, 18)) {\r\n            elements.push(null);\r\n        }\r\n        else if (state.token === 14) {\r\n            elements.push(parseSpreadElement(state, context));\r\n        }\r\n        else {\r\n            elements.push(parseAssignmentExpression(state, context));\r\n            if (state.token !== 20)\r\n                expect(state, context, 18);\r\n        }\r\n    }\r\n    expect(state, context, 20);\r\n    return {\r\n        type: 'ArrayExpression',\r\n        elements\r\n    };\r\n}\r\nfunction parseFunctionExpression(state, context, isAsync) {\r\n    expect(state, context, 151639);\r\n    const isGenerator = optional(state, context, 21105203);\r\n    let functionScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token & 274432) {\r\n        validateBindingIdentifier(state, context & 1024\r\n            ? 2097152\r\n            : isGenerator\r\n                ? 2097152\r\n                : 0 | (context & 2048) || isGenerator\r\n                    ? 4194304\r\n                    : 0, 2);\r\n        addVariableAndDeduplicate(state, context, functionScope, 2, true, state.tokenValue);\r\n        functionScope = createSubScope(functionScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    context = (context | 262144) ^ 262144;\r\n    const paramScoop = createSubScope(functionScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864, paramScoop, 32);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), firstRestricted, 0);\r\n    return {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: isAsync,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nfunction parseArrowFunctionExpression(state, context, scope, params, isAsync) {\r\n    for (let i = 0; i < params.length; ++i)\r\n        reinterpret(params[i]);\r\n    if (checkIfExistInLexicalBindings(state, context, scope, true))\r\n        report(state, 41);\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    const expression = state.token !== 131084;\r\n    const body = expression\r\n        ? parseAssignmentExpression(state, context)\r\n        : parseFunctionBody(state, context, createSubScope(scope, 1), state.tokenValue, 0);\r\n    return {\r\n        type: 'ArrowFunctionExpression',\r\n        body,\r\n        params,\r\n        id: null,\r\n        async: isAsync,\r\n        expression\r\n    };\r\n}\r\nexport function parseGroupExpression(state, context) {\r\n    expect(state, context | 32768, 131083);\r\n    const scope = createScope(5);\r\n    if (state.token === 16) {\r\n        next(state, context);\r\n        if (!optional(state, context, 131082))\r\n            report(state, 0);\r\n        return parseArrowFunctionExpression(state, context, scope, [], false);\r\n    }\r\n    else if (state.token === 14) {\r\n        const rest = [parseRestElement(state, context, scope, 1, 0)];\r\n        expect(state, context, 16);\r\n        if (!optional(state, context, 131082))\r\n            report(state, 0);\r\n        return parseArrowFunctionExpression(state, context, scope, rest, false);\r\n    }\r\n    let expr = parseAssignmentExpression(state, context);\r\n    if (state.token === 18) {\r\n        const expressions = [expr];\r\n        while (optional(state, context | 32768, 18)) {\r\n            if (state.token === 14) {\r\n                const restElement = parseRestElement(state, context, scope, 1, 0);\r\n                expect(state, context, 16);\r\n                if (!optional(state, context, 131082))\r\n                    report(state, 0);\r\n                expressions.push(restElement);\r\n                return parseArrowFunctionExpression(state, context, scope, expressions, false);\r\n            }\r\n            else if (optional(state, context, 16)) {\r\n                if (state.token !== 131082)\r\n                    report(state, 0);\r\n                return parseArrowFunctionExpression(state, context, scope, expressions, false);\r\n            }\r\n            else {\r\n                expressions.push(parseAssignmentExpression(state, context));\r\n            }\r\n        }\r\n        expr = {\r\n            type: 'SequenceExpression',\r\n            expressions\r\n        };\r\n    }\r\n    expect(state, context, 16);\r\n    if (optional(state, context, 131082)) {\r\n        return parseArrowFunctionExpression(state, context, scope, expr.type === 'SequenceExpression' ? expr.expressions : [expr], false);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseClassDeclaration(state, context, scope) {\r\n    next(state, context);\r\n    context = (context | 1024 | 16777216) ^ 16777216;\r\n    let id = null;\r\n    let superClass = null;\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        validateBindingIdentifier(state, context, 16);\r\n        addVariableAndDeduplicate(state, context, scope, 4, true, state.tokenValue);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    else if (!(context & 512))\r\n        report(state, 0);\r\n    if (optional(state, context, 20564)) {\r\n        superClass = parseLeftHandSideExpression(state, context);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 128);\r\n    return {\r\n        type: 'ClassDeclaration',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nfunction parseClassExpression(state, context) {\r\n    next(state, context);\r\n    context = (context | 1024 | 16777216) ^ (1024 | 16777216);\r\n    let id = null;\r\n    let superClass = null;\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        validateBindingIdentifier(state, context, 16);\r\n        addVariable(state, context, -1, 4, false, false, state.tokenValue);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (optional(state, context, 20564)) {\r\n        superClass = parseLeftHandSideExpression(state, context);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 0);\r\n    return {\r\n        type: 'ClassExpression',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nexport function parseClassBodyAndElementList(state, context, origin) {\r\n    expect(state, context | 32768, 131084);\r\n    const body = [];\r\n    let value;\r\n    let key;\r\n    let objState = 0;\r\n    let token = state.token;\r\n    let tokenValue = state.tokenValue;\r\n    let constructorCount = 0;\r\n    while (state.token !== 536870927) {\r\n        if (optional(state, context, 536870929))\r\n            continue;\r\n        if (state.token & 274432) {\r\n            token = state.token;\r\n            tokenValue = state.tokenValue;\r\n            key = parseIdentifier(state, context);\r\n            if ((token & 36969) === 36969) {\r\n                if (state.tokenValue === 'prototype')\r\n                    report(state, 62);\r\n                if (state.token & 274432) {\r\n                    objState |= 32;\r\n                    token = state.token;\r\n                    key = parseIdentifier(state, context);\r\n                    if (state.token !== 131083) {\r\n                        if (token & 1048576)\r\n                            objState |= 16;\r\n                        if (optional(state, context, 21105203)) {\r\n                            if ((token & 12399) === 12399 || (token & 12400) === 12400)\r\n                                report(state, 1, '*');\r\n                            objState |= 8;\r\n                        }\r\n                        if ((token & 12399) === 12399)\r\n                            objState = (objState & ~256) | 128;\r\n                        else if ((token & 12400) === 12400)\r\n                            objState = (objState & ~128) | 256;\r\n                        if (state.token & 274432) {\r\n                            key = parseIdentifier(state, context);\r\n                        }\r\n                        else if (state.token === 131074 || state.token === 131075) {\r\n                            key = parseLiteral(state, context);\r\n                        }\r\n                        else if (state.token === 131091) {\r\n                            if (token & 1048576)\r\n                                objState |= 16;\r\n                            objState |= 2;\r\n                            key = parseComputedPropertyName(state, context);\r\n                        }\r\n                    }\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131083) {\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131074 || state.token === 131075) {\r\n                    key = parseLiteral(state, context);\r\n                    objState |= 32;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131091) {\r\n                    objState |= 2 | 32;\r\n                    key = parseComputedPropertyName(state, context);\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (optional(state, context, 21105203)) {\r\n                    if (state.tokenValue === 'prototype')\r\n                        report(state, 62);\r\n                    objState |= 8 | 32;\r\n                    if (state.token & 274432) {\r\n                        key = parseIdentifier(state, context);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        objState |= 2;\r\n                        key = parseComputedPropertyName(state, context);\r\n                    }\r\n                    else {\r\n                        report(state, 0);\r\n                    }\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n            }\r\n            else {\r\n                objState &= ~32;\r\n                if (state.token === 18 ||\r\n                    state.token === 536870929 ||\r\n                    state.token === 536870927 ||\r\n                    state.token === 8388637) {\r\n                    report(state, 0);\r\n                }\r\n                else if (state.token === 21) {\r\n                    report(state, 0);\r\n                }\r\n                else if (state.token === 131091) {\r\n                    key = parseComputedPropertyName(state, context);\r\n                    if (token & 1048576) {\r\n                        objState |= 16;\r\n                    }\r\n                    else {\r\n                        objState |= 2;\r\n                        if ((token & 12399) === 12399) {\r\n                            objState = (objState & ~256) | 128;\r\n                        }\r\n                        else if ((token & 12400) === 12400) {\r\n                            objState = (objState & ~128) | 256;\r\n                        }\r\n                    }\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131083) {\r\n                    if (tokenValue === 'constructor') {\r\n                        ++constructorCount;\r\n                        objState |= 64;\r\n                    }\r\n                    objState = objState & ~2;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (optional(state, context, 21105203)) {\r\n                    if ((token & 12399) === 12399 || (token & 12400) === 12400)\r\n                        report(state, 0);\r\n                    objState |= 8;\r\n                    if (token & 1048576)\r\n                        objState |= 16;\r\n                    if (state.token & 274432) {\r\n                        key = parseIdentifier(state, context);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        objState |= 2;\r\n                        key = parseComputedPropertyName(state, context);\r\n                    }\r\n                    else {\r\n                        report(state, 0);\r\n                    }\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131074 || state.token === 131075) {\r\n                    tokenValue = state.tokenValue;\r\n                    key = parseLiteral(state, context);\r\n                    if (tokenValue === 'constructor') {\r\n                        ++constructorCount;\r\n                        objState |= 64;\r\n                    }\r\n                    if (token & 1048576) {\r\n                        if (objState & 64)\r\n                            report(state, 63, 'async accessor');\r\n                        objState |= 16;\r\n                    }\r\n                    else if ((token & 12399) === 12399) {\r\n                        if (objState & 64)\r\n                            report(state, 63, 'get accessor');\r\n                        objState = (objState & ~256) | 128;\r\n                    }\r\n                    else if ((token & 12400) === 12400) {\r\n                        if (objState & 64)\r\n                            report(state, 63, 'set accessor');\r\n                        objState = (objState & ~128) | 256;\r\n                    }\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                    objState |= 1;\r\n                }\r\n                else if (state.token & 274432) {\r\n                    objState = (objState & ~2) | 1;\r\n                    if (token == 1060972)\r\n                        objState |= 16;\r\n                    if ((token & 12399) === 12399) {\r\n                        objState = (objState & ~256) | 128;\r\n                    }\r\n                    else if ((token & 12400) === 12400) {\r\n                        if (state.token & 1048576)\r\n                            report(state, 0);\r\n                        objState = (objState & ~128) | 256;\r\n                    }\r\n                    key = parseIdentifier(state, context);\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n            }\r\n        }\r\n        else if (state.token === 131074 || state.token === 131075) {\r\n            tokenValue = state.tokenValue;\r\n            key = parseLiteral(state, context);\r\n            if (optional(state, context, 21)) {\r\n                report(state, 0);\r\n            }\r\n            else {\r\n                if (tokenValue === 'constructor') {\r\n                    ++constructorCount;\r\n                    objState |= 64;\r\n                }\r\n                value = parseMethodDeclaration(state, context, objState);\r\n                objState |= 1;\r\n            }\r\n        }\r\n        else if (state.token === 131091) {\r\n            key = parseComputedPropertyName(state, context);\r\n            objState = (2 & ~(16 | 8)) | 1;\r\n            if (state.token !== 131083)\r\n                report(state, 0);\r\n            value = parseMethodDeclaration(state, context, objState);\r\n        }\r\n        else if (state.token & 21105203) {\r\n            next(state, context);\r\n            if (state.token & 274432) {\r\n                token = state.token;\r\n                objState &= ~(16 | 2 | 128 | 256);\r\n                key = parseIdentifier(state, context);\r\n                if (state.token === 131083) {\r\n                    value = parseMethodDeclaration(state, context, objState | 8);\r\n                    objState |= 1 | 8;\r\n                }\r\n                else\r\n                    report(state, 0);\r\n            }\r\n            else if (state.token === 131074 || state.token === 131075) {\r\n                if (state.tokenValue === 'constructor')\r\n                    report(state, 63, 'generator');\r\n                key = parseLiteral(state, context);\r\n                value = parseMethodDeclaration(state, context, objState | 8);\r\n                objState |= 1;\r\n            }\r\n            else if (state.token & 131091) {\r\n                key = parseComputedPropertyName(state, context);\r\n                value = parseMethodDeclaration(state, context, objState | 8);\r\n                objState |= 1 | 2;\r\n            }\r\n            else {\r\n                report(state, 1, KeywordDescTable[state.token & 255]);\r\n            }\r\n        }\r\n        else {\r\n            report(state, 1, KeywordDescTable[state.token & 255]);\r\n        }\r\n        optional(state, context, 18);\r\n        body.push({\r\n            type: 'MethodDefinition',\r\n            kind: objState & 64\r\n                ? 'constructor'\r\n                : objState & 128\r\n                    ? 'get'\r\n                    : objState & 256\r\n                        ? 'set'\r\n                        : 'method',\r\n            static: (objState & 32) !== 0,\r\n            computed: (objState & 2) !== 0,\r\n            key,\r\n            value\r\n        });\r\n    }\r\n    if (constructorCount > 1) {\r\n        report(state, 60);\r\n    }\r\n    expect(state, origin & 128 ? context | 32768 : context, 536870927);\r\n    return {\r\n        type: 'ClassBody',\r\n        body\r\n    };\r\n}\r\nfunction parseObjectLiteral(state, context, scope, type) {\r\n    next(state, context);\r\n    let key = null;\r\n    let token = state.token;\r\n    let tokenValue = state.tokenValue;\r\n    let value;\r\n    let protoCount = 0;\r\n    const properties = [];\r\n    let objState = 0;\r\n    while (state.token !== 536870927) {\r\n        if (state.token === 14) {\r\n            properties.push(parseSpreadElement(state, context));\r\n        }\r\n        else {\r\n            if (state.token & 274432) {\r\n                {\r\n                    token = state.token;\r\n                    tokenValue = state.tokenValue;\r\n                    objState = 0;\r\n                    key = parseIdentifier(state, context);\r\n                    if (state.token === 18 || state.token === 536870927 || state.token === 8388637) {\r\n                        objState |= 4;\r\n                        if (tokenValue !== 'eval' || tokenValue !== 'arguments') {\r\n                            validateBindingIdentifier(state, context, type, token);\r\n                        }\r\n                        addVariable(state, context, scope, type, false, false, tokenValue);\r\n                        if (optional(state, context, 8388637)) {\r\n                            value = {\r\n                                type: 'AssignmentExpression',\r\n                                left: key,\r\n                                operator: '=',\r\n                                right: parseAssignmentExpression(state, context)\r\n                            };\r\n                        }\r\n                        else {\r\n                            value = key;\r\n                        }\r\n                    }\r\n                    else if (optional(state, context | 32768, 21)) {\r\n                        if (tokenValue === '__proto__')\r\n                            state.flags |= 32;\r\n                        if (state.token & 274432) {\r\n                            tokenValue = state.tokenValue;\r\n                            value = parseAssignmentExpression(state, context);\r\n                            addVariable(state, context, scope, type, false, false, tokenValue);\r\n                        }\r\n                        else {\r\n                            value = parseAssignmentExpression(state, context);\r\n                        }\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        key = parseComputedPropertyName(state, context);\r\n                        if (token === 1060972) {\r\n                            objState |= 16 | 2 | 1;\r\n                        }\r\n                        else {\r\n                            if ((token & 12399) === 12399)\r\n                                objState = (objState & ~256) | 128;\r\n                            else if ((token & 12400) === 12400)\r\n                                objState = (objState & ~128) | 256;\r\n                            objState |= 2 & ~1;\r\n                        }\r\n                        if (state.token !== 131083)\r\n                            report(state, 0);\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                    else if (state.token === 131083) {\r\n                        objState = objState | (1 & ~(16 | 8));\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                    else if (token === 1060972) {\r\n                        objState |= 16;\r\n                        if (optional(state, context, 21105203))\r\n                            objState |= 8;\r\n                        if (state.token & 274432) {\r\n                            key = parseIdentifier(state, context);\r\n                        }\r\n                        else if (state.token === 131074 || state.token === 131075) {\r\n                            key = parseLiteral(state, context);\r\n                        }\r\n                        else if (state.token === 131091) {\r\n                            key = parseComputedPropertyName(state, context);\r\n                        }\r\n                        else {\r\n                            report(state, 0);\r\n                        }\r\n                        if (state.token !== 131083)\r\n                            report(state, 0);\r\n                        objState |= 1 | 16;\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                    else if ((token & 12399) === 12399 ||\r\n                        (token & 12400) === 12400) {\r\n                        if ((token & 12399) === 12399) {\r\n                            objState = (objState & ~256) | 128;\r\n                        }\r\n                        else if ((token & 12400) === 12400) {\r\n                            objState = (objState & ~128) | 256;\r\n                        }\r\n                        else if (state.token !== 1060972)\r\n                            report(state, 0);\r\n                        if (optional(state, context, 21105203))\r\n                            report(state, 0);\r\n                        if (state.token & 274432) {\r\n                            key = parseIdentifier(state, context);\r\n                        }\r\n                        else if (state.token === 131074 || state.token === 131075) {\r\n                            key = parseLiteral(state, context);\r\n                        }\r\n                        else if (state.token === 131091) {\r\n                            key = parseComputedPropertyName(state, context);\r\n                        }\r\n                        else {\r\n                            report(state, 0);\r\n                        }\r\n                        if (state.token !== 131083)\r\n                            report(state, 0);\r\n                        objState &= ~(1 | 2 | 8 | 16);\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                }\r\n            }\r\n            else if (state.token === 131074 || state.token === 131075) {\r\n                tokenValue = state.tokenValue;\r\n                key = parseLiteral(state, context);\r\n                if (optional(state, context | 32768, 21)) {\r\n                    if (tokenValue === '__proto__')\r\n                        state.flags |= 32;\r\n                    value = parseAssignmentExpression(state, context);\r\n                    addVariable(state, context, scope, type, false, false, tokenValue);\r\n                }\r\n                else {\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                    objState |= 1;\r\n                }\r\n            }\r\n            else if (state.token === 131091) {\r\n                key = parseComputedPropertyName(state, context);\r\n                objState =\r\n                    (objState & ~(16 | 8 | 384)) | 2;\r\n                if (state.token === 21) {\r\n                    next(state, context);\r\n                    value = parseAssignmentExpression(state, context | 32768);\r\n                }\r\n                else {\r\n                    objState |= 1;\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n            }\r\n            else if (state.token & 21105203) {\r\n                next(state, context);\r\n                if (state.token & 274432) {\r\n                    token = state.token;\r\n                    objState &= ~(1 | 16);\r\n                    key = parseIdentifier(state, context);\r\n                    if (state.token === 131083) {\r\n                        value = parseMethodDeclaration(state, context, objState | 8);\r\n                        objState |= 1 | 8;\r\n                    }\r\n                    else {\r\n                        if (token === 1060972)\r\n                            report(state, 0);\r\n                        if ((token & 12399) === 12399 || (token & 12400) === 12400)\r\n                            report(state, 0);\r\n                        if (token === 21)\r\n                            report(state, 0);\r\n                        report(state, 0);\r\n                    }\r\n                }\r\n                else if (state.token === 131074 || state.token === 131075) {\r\n                    key = parseLiteral(state, context);\r\n                    value = parseMethodDeclaration(state, context, objState | 8);\r\n                    objState |= 1;\r\n                }\r\n                else if (state.token === 131091) {\r\n                    key = parseComputedPropertyName(state, context);\r\n                    value = parseMethodDeclaration(state, context, objState | 8);\r\n                    objState |= 1 | 2;\r\n                }\r\n                else {\r\n                    report(state, 1, KeywordDescTable[state.token & 255]);\r\n                }\r\n            }\r\n            else {\r\n                report(state, 1, KeywordDescTable[state.token & 255]);\r\n            }\r\n            if (state.flags & 32)\r\n                ++protoCount;\r\n            properties.push({\r\n                type: 'Property',\r\n                key,\r\n                value,\r\n                kind: !(objState & 384) ? 'init' : objState & 256 ? 'set' : 'get',\r\n                computed: (objState & 2) !== 0,\r\n                method: (objState & 1) !== 0,\r\n                shorthand: (objState & 4) !== 0\r\n            });\r\n        }\r\n        optional(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n    if (protoCount === 1)\r\n        state.flags &= ~32;\r\n    return {\r\n        type: 'ObjectExpression',\r\n        properties\r\n    };\r\n}\r\nfunction parseMethodDeclaration(state, context, objState) {\r\n    let functionScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token & 274432) {\r\n        validateBindingIdentifier(state, context & 1024\r\n            ? 2097152\r\n            : (objState & 8) !== 0\r\n                ? 2097152\r\n                : 0 | (context & 2048) || (objState & 8) !== 0\r\n                    ? 4194304\r\n                    : 0, 2);\r\n        addVariableAndDeduplicate(state, context, functionScope, 2, true, state.tokenValue);\r\n        functionScope = createSubScope(functionScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (objState & 16)\r\n        context |= 4194304;\r\n    if (objState & 8)\r\n        context |= 2097152;\r\n    if (objState & 64) {\r\n        context |= 16777216;\r\n    }\r\n    else {\r\n        context = (context | (16777216 | 524288)) ^ (16777216 | 524288);\r\n    }\r\n    context |= 262144;\r\n    const paramScoop = createSubScope(functionScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864 | 33554432, paramScoop, 32);\r\n    const body = parseFunctionBody(state, context | 67108864 | 1024, createSubScope(paramScoop, 1), firstRestricted, 0);\r\n    return {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: (objState & 16) !== 0,\r\n        generator: (objState & 8) !== 0,\r\n        id\r\n    };\r\n}\r\nfunction parseBooleanLiteral(state, context) {\r\n    const t = state.token;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value: KeywordDescTable[t & 255] === 'true'\r\n    };\r\n}\r\nfunction parseNullLiteral(state, context) {\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value: null\r\n    };\r\n}\r\nfunction parseThisExpression(state, context) {\r\n    next(state, context);\r\n    return {\r\n        type: 'ThisExpression'\r\n    };\r\n}\r\nexport function parseLiteral(state, context) {\r\n    const tokenValue = state.tokenValue;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value: tokenValue\r\n    };\r\n}\r\nexport function parseIdentifier(state, context) {\r\n    const tokenValue = state.tokenValue;\r\n    next(state, context);\r\n    return {\r\n        type: 'Identifier',\r\n        name: tokenValue\r\n    };\r\n}\r\nfunction parseRegularExpressionLiteral(state, context) {\r\n    const { tokenRegExp: regex, tokenValue: value } = state;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value,\r\n        regex\r\n    };\r\n}\r\nexport function parseBigIntLiteral(state, context) {\r\n    const { tokenRaw: raw, tokenValue: value } = state;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value,\r\n        bigint: raw,\r\n        raw\r\n    };\r\n}\r\n//# sourceMappingURL=state.js.map","dtsmap":{"name":"D:/cherow_gh/cherow1/state.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"state.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/state.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"D:/cherow_gh/cherow1/state.d.ts","writeByteOrderMark":false,"text":"import * as ESTree from './estree';\r\nimport { Context, OnComment, OnToken, ParserState, Type, Origin } from './common';\r\nimport { ScopeState } from './scope';\r\nexport declare const enum LabelledState {\r\n    None = 0,\r\n    AllowAsLabelled = 1,\r\n    Disallow = 2\r\n}\r\nexport declare const enum ObjectState {\r\n    None = 0,\r\n    Method = 1,\r\n    Computed = 2,\r\n    Shorthand = 4,\r\n    Generator = 8,\r\n    Async = 16,\r\n    Static = 32,\r\n    Constructor = 64,\r\n    Getter = 128,\r\n    Setter = 256,\r\n    GetSet = 384\r\n}\r\nexport declare function create(source: string, onComment: OnComment | void, onToken: OnToken | void): ParserState;\r\nexport declare function parseTopLevel(state: ParserState, context: Context, scope: ScopeState): ESTree.Statement[];\r\nexport declare function parseDirective(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseImportDeclaration(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseBlockStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.BlockStatement;\r\nexport declare function parseEmptyStatement(state: ParserState, context: Context): ESTree.EmptyStatement;\r\nexport declare function parseThrowStatement(state: ParserState, context: Context): ESTree.ThrowStatement;\r\nexport declare function parseIfStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.IfStatement;\r\nexport declare function parseReturnStatement(state: ParserState, context: Context): ESTree.ReturnStatement;\r\nexport declare function parseWhileStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.WhileStatement;\r\nexport declare function parseContinueStatement(state: ParserState, context: Context): ESTree.ContinueStatement;\r\nexport declare function parseBreakStatement(state: ParserState, context: Context): ESTree.BreakStatement;\r\nexport declare function parseWithStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.WithStatement;\r\nexport declare function parseDebuggerStatement(state: ParserState, context: Context): ESTree.DebuggerStatement;\r\nexport declare function parseTryStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.TryStatement;\r\nexport declare function parseCatchBlock(state: ParserState, context: Context, scope: ScopeState): ESTree.CatchClause;\r\nexport declare function parseDoWhileStatement(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseCaseOrDefaultClauses(state: ParserState, context: Context, test: ESTree.Expression | null, scope: ScopeState): ESTree.SwitchCase;\r\nexport declare function parseExpressionOrLabelledStatement(state: ParserState, context: Context, scope: ScopeState, label: LabelledState): any;\r\nexport declare function parseBindingIdentifierOrPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.Pattern;\r\nexport declare function parseBindingIdentifier(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, checkForDuplicates: boolean): ESTree.Identifier;\r\nexport declare function parseAssignmentRestElement(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): any;\r\nexport declare function parseArrayAssignmentPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.ArrayPattern;\r\nexport declare function parserObjectAssignmentPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.ObjectPattern;\r\nexport declare function parseAssignmentPattern(state: ParserState, context: Context, left: ESTree.Pattern): any;\r\nexport declare function parseBindingInitializer(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.Identifier | ESTree.ObjectPattern | ESTree.ArrayPattern | ESTree.MemberExpression | ESTree.AssignmentPattern;\r\nexport declare function parseComputedPropertyName(state: ParserState, context: Context): ESTree.Expression;\r\nexport declare function parseFunctionDeclaration(state: ParserState, context: Context, scope: ScopeState, origin: Origin, isAsync: boolean): {\r\n    type: string;\r\n    params: any;\r\n    body: ESTree.BlockStatement;\r\n    async: boolean;\r\n    generator: boolean;\r\n    id: ESTree.Identifier | null;\r\n};\r\nexport declare function parseHoistableFunctionDeclaration(state: ParserState, context: Context, scope: ScopeState, isNotDefault: boolean, isAsync: boolean): {\r\n    type: string;\r\n    params: any;\r\n    body: ESTree.BlockStatement;\r\n    async: boolean;\r\n    generator: boolean;\r\n    id: ESTree.Identifier | null;\r\n};\r\nexport declare function parseFormalParameters(state: ParserState, context: Context, scope: ScopeState, origin: Origin): any;\r\nexport declare function parseRestElement(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin): any;\r\nexport declare function parseFunctionBody(state: ParserState, context: Context, scope: ScopeState, firstRestricted: string | undefined, origin: Origin): ESTree.BlockStatement;\r\nexport declare function parseVariableStatement(state: ParserState, context: Context, type: Type, origin: Origin, scope: ScopeState): ESTree.VariableDeclaration;\r\nexport declare function parseLexicalDeclaration(state: ParserState, context: Context, type: Type, origin: Origin, scope: ScopeState): ESTree.VariableDeclaration;\r\nexport declare function parseVariableDeclarationList(state: ParserState, context: Context, type: Type, origin: Origin, checkForDuplicates: boolean, scope: ScopeState): any;\r\nexport declare function parseExpression(state: ParserState, context: Context): any;\r\nexport declare function parseSequenceExpression(state: ParserState, context: Context, left: ESTree.Expression): ESTree.SequenceExpression;\r\nexport declare function parseAssignmentExpression(state: ParserState, context: Context): any;\r\nexport declare function parseLeftHandSideExpression(state: ParserState, context: Context): any;\r\nexport declare function parseMetaProperty(state: ParserState, context: Context, id: ESTree.Identifier): any;\r\nexport declare function parsePrimaryExpression(state: ParserState, context: Context): any;\r\nexport declare function parseArrayExpression(state: ParserState, context: Context): any;\r\nexport declare function parseGroupExpression(state: ParserState, context: Context): any;\r\nexport declare function parseClassBodyAndElementList(state: ParserState, context: Context, origin: Origin): ESTree.ClassBody;\r\nexport declare function parseLiteral(state: ParserState, context: Context): ESTree.Literal;\r\nexport declare function parseIdentifier(state: ParserState, context: Context): ESTree.Identifier;\r\nexport declare function parseBigIntLiteral(state: ParserState, context: Context): ESTree.BigIntLiteral;\r\n//# sourceMappingURL=state.d.ts.map"}}
