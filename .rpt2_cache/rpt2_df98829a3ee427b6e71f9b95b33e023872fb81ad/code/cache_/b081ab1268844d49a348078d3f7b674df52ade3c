{"code":"import { consumeSemicolon, reinterpret, validateBindingIdentifier, addToExportedNamesAndCheckForDuplicates, addToExportedBindings, nextTokenIsFuncKeywordOnSameLine, isValidSimpleAssignmentTarget, getLabel, validateContinueLabel, validateBreakStatement, addCrossingBoundary, addLabel, addVariableAndDeduplicate, isValidIdentifier, createSubScope, createScope, nextTokenIsLeftParenOrPeriod, nextTokenIsLeftParen, acquireGrammar, secludeGrammar, nameIsArgumentsOrEval } from './common';\r\nimport { KeywordDescTable } from './token';\r\nimport { next } from './scanner';\r\nimport { scanTemplateTail } from './scanner/template';\r\nimport { optional, expect, addVariable, checkIfExistInLexicalBindings, validateFunctionArgs, addFunctionName, isLexical, lookAheadOrScan } from './common';\r\nimport { report } from './errors';\r\nexport function create(source, onComment, onToken) {\r\n    return {\r\n        source,\r\n        onComment,\r\n        onToken,\r\n        flags: 0,\r\n        grammar: 3,\r\n        index: 0,\r\n        line: 1,\r\n        column: 0,\r\n        startIndex: 0,\r\n        startLine: 1,\r\n        startColumn: 0,\r\n        token: 536870912,\r\n        tokenValue: undefined,\r\n        tokenRaw: '',\r\n        tokenRegExp: undefined,\r\n        lastRegExpError: undefined,\r\n        numCapturingParens: 0,\r\n        largestBackReference: 0,\r\n        length: source.length,\r\n        currentChar: source.charCodeAt(0),\r\n        lastChar: 0,\r\n        inCatch: false,\r\n        assignable: true,\r\n        bindable: true,\r\n        exportedNames: [],\r\n        exportedBindings: [],\r\n        labelSet: undefined,\r\n        labelSetStack: [],\r\n        iterationStack: [],\r\n        labelDepth: 0,\r\n        switchStatement: 0,\r\n        iterationStatement: 0,\r\n        functionBoundaryStack: undefined,\r\n        pendingCoverInitializeError: null\r\n    };\r\n}\r\nexport function parseModuleItem(state, context, scope) {\r\n    next(state, context | 32768);\r\n    const statements = [];\r\n    while (state.token === 131075) {\r\n        const tokenValue = state.tokenValue;\r\n        if (!(context & 1024) && tokenValue.length === 10 && tokenValue === 'use strict') {\r\n            context |= 1024;\r\n        }\r\n        statements.push(parseDirective(state, context, scope));\r\n    }\r\n    while (state.token !== 536870912) {\r\n        statements.push(parseModuleItemList(state, context, scope));\r\n    }\r\n    return statements;\r\n}\r\nexport function parseStatementList(state, context, scope) {\r\n    next(state, context | 32768);\r\n    const statements = [];\r\n    while (state.token === 131075) {\r\n        const tokenValue = state.tokenValue;\r\n        if (!(context & 1024) && tokenValue.length === 10 && tokenValue === 'use strict') {\r\n            context |= 1024;\r\n        }\r\n        statements.push(parseDirective(state, context, scope));\r\n    }\r\n    while (state.token !== 536870912) {\r\n        statements.push(parseStatementListItem(state, context, scope));\r\n    }\r\n    return statements;\r\n}\r\nexport function parseDirective(state, context, scope) {\r\n    if ((context & 131072) < 1)\r\n        return parseStatementListItem(state, context, scope);\r\n    const directive = state.tokenRaw.slice(1, -1);\r\n    const expression = parseExpression(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ExpressionStatement',\r\n        expression,\r\n        directive\r\n    };\r\n}\r\nfunction parseAsyncFunctionOrAssignmentExpression(state, context, scope, isDefault) {\r\n    return lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)\r\n        ? parseHoistableFunctionDeclaration(state, context, scope, isDefault, true)\r\n        : parseAssignmentExpression(state, context);\r\n}\r\nfunction parseStatementListItem(state, context, scope) {\r\n    state.assignable = state.bindable = true;\r\n    switch (state.token) {\r\n        case 151639:\r\n            return parseFunctionDeclaration(state, context, scope, 128, false);\r\n        case 151629:\r\n            return parseClassDeclaration(state, context, scope);\r\n        case 402804809:\r\n            return parseLexicalDeclaration(state, context, 8, 1, scope);\r\n        case 402821192:\r\n            return parseLetOrExpressionStatement(state, context, scope);\r\n        case 1060972:\r\n            return parseAsyncFunctionOrExpressionStatement(state, context, scope);\r\n        default:\r\n            return parseStatement(state, (context | 4096) ^ 4096, scope, 1);\r\n    }\r\n}\r\nfunction parseAsyncFunctionOrExpressionStatement(state, context, scope) {\r\n    return lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)\r\n        ? parseFunctionDeclaration(state, context, scope, 512, true)\r\n        : parseExpressionOrLabelledStatement(state, context, scope, 2);\r\n}\r\nfunction parseLetOrExpressionStatement(state, context, scope) {\r\n    return lookAheadOrScan(state, context, isLexical, true)\r\n        ? parseLexicalDeclaration(state, context, 4, 1, scope)\r\n        : parseExpressionOrLabelledStatement(state, context, scope, 2);\r\n}\r\nfunction parseStatement(state, context, scope, label) {\r\n    switch (state.token) {\r\n        case 268587079:\r\n            return parseVariableStatement(state, context, 2, 1, scope);\r\n        case 151645:\r\n            return parseSwitchStatement(state, context, scope);\r\n        case 20561:\r\n            return parseDoWhileStatement(state, context, scope);\r\n        case 20571:\r\n            return parseReturnStatement(state, context);\r\n        case 20577:\r\n            return parseWhileStatement(state, context, scope);\r\n        case 20578:\r\n            return parseWithStatement(state, context, scope);\r\n        case 20554:\r\n            return parseBreakStatement(state, context);\r\n        case 20558:\r\n            return parseContinueStatement(state, context);\r\n        case 20559:\r\n            return parseDebuggerStatement(state, context);\r\n        case 20576:\r\n            return parseTryStatement(state, context, scope);\r\n        case 151647:\r\n            return parseThrowStatement(state, context);\r\n        case 20568:\r\n            return parseIfStatement(state, context, scope);\r\n        case 536870929:\r\n            return parseEmptyStatement(state, context);\r\n        case 131084:\r\n            return parseBlockStatement(state, (context | 4096) ^ 4096, createSubScope(scope, 1));\r\n        case 20566:\r\n            return parseForStatement(state, context, scope);\r\n        case 1060972:\r\n            if (lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)) {\r\n                report(state, 76);\r\n            }\r\n            return parseExpressionOrLabelledStatement(state, context, scope, label);\r\n        case 151639:\r\n            report(state, context & 1024 ? 44 : 43);\r\n        case 151629:\r\n            report(state, 75, KeywordDescTable[state.token & 255]);\r\n        default:\r\n            return parseExpressionOrLabelledStatement(state, context, scope, label);\r\n    }\r\n}\r\nfunction parseModuleItemList(state, context, scope) {\r\n    state.assignable = state.bindable = true;\r\n    switch (state.token) {\r\n        case 20563:\r\n            return parseExportDeclaration(state, context, scope);\r\n        case 151641:\r\n            if (!(context & 1 && lookAheadOrScan(state, context, nextTokenIsLeftParenOrPeriod, true))) {\r\n                return parseImportDeclaration(state, context, scope);\r\n            }\r\n        default:\r\n            return parseStatementListItem(state, context, scope);\r\n    }\r\n}\r\nfunction parseExportDeclaration(state, context, scope) {\r\n    expect(state, context, 20563);\r\n    const specifiers = [];\r\n    let declaration = null;\r\n    let source = null;\r\n    if (optional(state, context | 32768, 20560)) {\r\n        switch (state.token) {\r\n            case 151639: {\r\n                declaration = parseHoistableFunctionDeclaration(state, context | 512, scope, true, false);\r\n                break;\r\n            }\r\n            case 151629:\r\n                declaration = parseHostedClassDeclaration(state, context | 512, scope, true);\r\n                break;\r\n            case 1060972:\r\n                declaration = parseAsyncFunctionOrAssignmentExpression(state, context | 512, scope, true);\r\n                break;\r\n            default:\r\n                declaration = parseAssignmentExpression(state, context);\r\n                consumeSemicolon(state, context);\r\n        }\r\n        addToExportedNamesAndCheckForDuplicates(state, 'default');\r\n        addToExportedBindings(state, '*default*');\r\n        addVariable(state, context, scope, 0, 0, true, false, '*default*');\r\n        return {\r\n            type: 'ExportDefaultDeclaration',\r\n            declaration\r\n        };\r\n    }\r\n    switch (state.token) {\r\n        case 21105203: {\r\n            next(state, context);\r\n            expect(state, context, 12401);\r\n            if (state.token !== 131075)\r\n                report(state, 0);\r\n            source = parseLiteral(state, context, state.tokenValue);\r\n            consumeSemicolon(state, context);\r\n            return {\r\n                type: 'ExportAllDeclaration',\r\n                source\r\n            };\r\n        }\r\n        case 131084: {\r\n            const exportedNames = [];\r\n            const exportedBindings = [];\r\n            expect(state, context, 131084);\r\n            while (state.token !== 536870927) {\r\n                const tokenValue = state.tokenValue;\r\n                const token = state.token;\r\n                const local = parseIdentifier(state, context);\r\n                let exported;\r\n                if (state.token === 16920683) {\r\n                    next(state, context);\r\n                    if (!(state.token & 274432))\r\n                        report(state, 0);\r\n                    exportedNames.push(state.tokenValue);\r\n                    exportedBindings.push(tokenValue);\r\n                    exported = parseIdentifier(state, context);\r\n                }\r\n                else {\r\n                    validateBindingIdentifier(state, context, 8, token);\r\n                    exportedNames.push(state.tokenValue);\r\n                    exportedBindings.push(state.tokenValue);\r\n                    exported = local;\r\n                }\r\n                specifiers.push({\r\n                    type: 'ExportSpecifier',\r\n                    local,\r\n                    exported\r\n                });\r\n                if (state.token !== 536870927)\r\n                    expect(state, context, 18);\r\n            }\r\n            expect(state, context, 536870927);\r\n            if (state.token === 12401) {\r\n                next(state, context);\r\n                if (state.token !== 131075)\r\n                    report(state, 0);\r\n                source = parseLiteral(state, context, state.tokenValue);\r\n            }\r\n            else {\r\n                let i = 0;\r\n                let iMax = exportedNames.length;\r\n                for (; i < iMax; i++) {\r\n                    addToExportedNamesAndCheckForDuplicates(state, exportedNames[i]);\r\n                }\r\n                i = 0;\r\n                iMax = exportedBindings.length;\r\n                for (; i < iMax; i++) {\r\n                    addToExportedBindings(state, exportedBindings[i]);\r\n                }\r\n            }\r\n            consumeSemicolon(state, context);\r\n            break;\r\n        }\r\n        case 151629:\r\n            declaration = parseHostedClassDeclaration(state, context, scope, false);\r\n            break;\r\n        case 402821192:\r\n            declaration = parseLexicalDeclaration(state, context, 4, 4, scope);\r\n            if (checkIfExistInLexicalBindings(state, context, scope, 0, false))\r\n                report(state, 0);\r\n            break;\r\n        case 402804809:\r\n            declaration = parseLexicalDeclaration(state, context, 8, 4, scope);\r\n            if (checkIfExistInLexicalBindings(state, context, scope, 0, false))\r\n                report(state, 0);\r\n            break;\r\n        case 268587079:\r\n            declaration = parseVariableStatement(state, context, 2, 4, scope);\r\n            break;\r\n        case 151639:\r\n            declaration = parseHoistableFunctionDeclaration(state, context, scope, true, false);\r\n            break;\r\n        case 1060972:\r\n            declaration = parseAsyncFunctionOrAssignmentExpression(state, context, scope, false);\r\n            break;\r\n        default:\r\n            report(state, 0);\r\n    }\r\n    return {\r\n        type: 'ExportNamedDeclaration',\r\n        source,\r\n        specifiers,\r\n        declaration\r\n    };\r\n}\r\nexport function parseImportDeclaration(state, context, scope) {\r\n    expect(state, context, 151641);\r\n    let source;\r\n    const specifiers = [];\r\n    if ((state.token & 274432) === 274432) {\r\n        validateBindingIdentifier(state, context, 8);\r\n        addVariable(state, context, scope, 0, 0, true, false, state.tokenValue);\r\n        specifiers.push({\r\n            type: 'ImportDefaultSpecifier',\r\n            local: parseIdentifier(state, context)\r\n        });\r\n        if (optional(state, context, 18)) {\r\n            if (state.token === 21105203) {\r\n                parseImportNamespace(state, context, scope, specifiers);\r\n            }\r\n            else if (state.token === 131084) {\r\n                parseImportSpecifierOrNamedImports(state, context, scope, specifiers);\r\n            }\r\n            else\r\n                report(state, 0);\r\n        }\r\n        source = parseModuleSpecifier(state, context);\r\n    }\r\n    else if (state.token === 131075) {\r\n        source = parseLiteral(state, context, state.tokenValue);\r\n    }\r\n    else {\r\n        if (state.token === 21105203) {\r\n            parseImportNamespace(state, context, scope, specifiers);\r\n        }\r\n        else if (state.token === 131084) {\r\n            parseImportSpecifierOrNamedImports(state, context, scope, specifiers);\r\n        }\r\n        else\r\n            report(state, 0);\r\n        source = parseModuleSpecifier(state, context);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ImportDeclaration',\r\n        specifiers,\r\n        source\r\n    };\r\n}\r\nfunction parseImportSpecifierOrNamedImports(state, context, scope, specifiers) {\r\n    expect(state, context, 131084);\r\n    while (state.token !== 536870927) {\r\n        const tokenValue = state.tokenValue;\r\n        const token = state.token;\r\n        if (!(state.token & 274432))\r\n            report(state, 0);\r\n        const imported = parseIdentifier(state, context);\r\n        let local;\r\n        if (optional(state, context, 16920683)) {\r\n            validateBindingIdentifier(state, context, 8);\r\n            addVariable(state, context, scope, 8, 0, true, false, state.tokenValue);\r\n            local = parseIdentifier(state, context);\r\n        }\r\n        else {\r\n            validateBindingIdentifier(state, context, 8, token);\r\n            addVariable(state, context, scope, 8, 0, true, false, tokenValue);\r\n            local = imported;\r\n        }\r\n        specifiers.push({\r\n            type: 'ImportSpecifier',\r\n            local,\r\n            imported\r\n        });\r\n        if (state.token !== 536870927)\r\n            expect(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n}\r\nfunction parseImportNamespace(state, context, scope, specifiers) {\r\n    next(state, context);\r\n    expect(state, context, 16920683);\r\n    validateBindingIdentifier(state, context, 8);\r\n    addVariable(state, context, scope, 8, 0, true, false, state.tokenValue);\r\n    const local = parseIdentifier(state, context);\r\n    specifiers.push({\r\n        type: 'ImportNamespaceSpecifier',\r\n        local\r\n    });\r\n}\r\nfunction parseModuleSpecifier(state, context) {\r\n    expect(state, context, 12401);\r\n    if (state.token !== 131075)\r\n        report(state, 0);\r\n    return parseLiteral(state, context, state.tokenValue);\r\n}\r\nexport function parseBlockStatement(state, context, scope) {\r\n    const body = [];\r\n    next(state, context);\r\n    while (state.token !== 536870927) {\r\n        body.push(parseStatementListItem(state, context, scope));\r\n    }\r\n    expect(state, context | 32768, 536870927);\r\n    return {\r\n        type: 'BlockStatement',\r\n        body\r\n    };\r\n}\r\nexport function parseEmptyStatement(state, context) {\r\n    next(state, context | 32768);\r\n    return {\r\n        type: 'EmptyStatement'\r\n    };\r\n}\r\nexport function parseThrowStatement(state, context) {\r\n    next(state, context);\r\n    if (state.flags & 1)\r\n        report(state, 54);\r\n    const argument = parseExpression(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ThrowStatement',\r\n        argument\r\n    };\r\n}\r\nexport function parseIfStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const consequent = parseConsequentOrAlternate(state, context, scope);\r\n    const alternate = optional(state, context, 20562)\r\n        ? parseConsequentOrAlternate(state, context, scope)\r\n        : null;\r\n    return {\r\n        type: 'IfStatement',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    };\r\n}\r\nfunction parseConsequentOrAlternate(state, context, scope) {\r\n    return context & 1024 || (context & 16) === 0 || state.token !== 151639\r\n        ? parseStatement(state, (context | 4096) ^ 4096, scope, 2)\r\n        : parseFunctionDeclaration(state, context, scope, 1, false);\r\n}\r\nfunction parseSwitchStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const discriminant = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    expect(state, context, 131084);\r\n    const cases = [];\r\n    let seenDefault = false;\r\n    const switchScope = createSubScope(scope, 3);\r\n    const previousSwitchStatement = state.switchStatement;\r\n    state.switchStatement = 1;\r\n    while (state.token !== 536870927) {\r\n        let test = null;\r\n        if (optional(state, context, 20555)) {\r\n            test = parseExpression(state, context);\r\n        }\r\n        else {\r\n            expect(state, context, 20560);\r\n            if (seenDefault)\r\n                report(state, 0);\r\n            seenDefault = true;\r\n        }\r\n        cases.push(parseCaseOrDefaultClauses(state, context, test, switchScope));\r\n    }\r\n    state.switchStatement = previousSwitchStatement;\r\n    expect(state, context, 536870927);\r\n    return {\r\n        type: 'SwitchStatement',\r\n        discriminant,\r\n        cases\r\n    };\r\n}\r\nexport function parseReturnStatement(state, context) {\r\n    if ((context & (64 | 134217728)) < 1)\r\n        report(state, 55);\r\n    next(state, context | 32768);\r\n    const argument = (state.token & 536870912) < 1 && (state.flags & 1) < 1\r\n        ? parseExpression(state, context & ~134217728)\r\n        : null;\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ReturnStatement',\r\n        argument\r\n    };\r\n}\r\nexport function parseWhileStatement(state, context, scope) {\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    return {\r\n        type: 'WhileStatement',\r\n        test,\r\n        body\r\n    };\r\n}\r\nexport function parseContinueStatement(state, context) {\r\n    next(state, context);\r\n    let label = null;\r\n    if (!(state.flags & 1) && state.token & 4096) {\r\n        const tokenValue = state.tokenValue;\r\n        label = parseIdentifier(state, context);\r\n        validateContinueLabel(state, tokenValue);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    if (label === null && state.iterationStatement === 0 && state.switchStatement === 0) {\r\n        report(state, 50);\r\n    }\r\n    return {\r\n        type: 'ContinueStatement',\r\n        label\r\n    };\r\n}\r\nexport function parseBreakStatement(state, context) {\r\n    next(state, context);\r\n    let label = null;\r\n    if (!(state.flags & 1) && state.token & 4096) {\r\n        const tokenValue = state.tokenValue;\r\n        label = parseIdentifier(state, context);\r\n        validateBreakStatement(state, tokenValue);\r\n    }\r\n    else if (state.iterationStatement === 0 && state.switchStatement === 0) {\r\n        report(state, 51);\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'BreakStatement',\r\n        label\r\n    };\r\n}\r\nexport function parseWithStatement(state, context, scope) {\r\n    if (context & 1024)\r\n        report(state, 52);\r\n    next(state, context);\r\n    expect(state, context | 32768, 131083);\r\n    const object = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    return {\r\n        type: 'WithStatement',\r\n        object,\r\n        body\r\n    };\r\n}\r\nexport function parseDebuggerStatement(state, context) {\r\n    next(state, context);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'DebuggerStatement'\r\n    };\r\n}\r\nexport function parseTryStatement(state, context, scope) {\r\n    next(state, context);\r\n    const block = parseBlockStatement(state, context, createSubScope(scope, 1));\r\n    const handler = optional(state, context, 20556) ? parseCatchBlock(state, context, scope) : null;\r\n    const finalizer = optional(state, context, 20565)\r\n        ? parseBlockStatement(state, (context | 4096) ^ 4096, createSubScope(scope, 1))\r\n        : null;\r\n    if (!handler && !finalizer)\r\n        report(state, 0);\r\n    return {\r\n        type: 'TryStatement',\r\n        block,\r\n        handler,\r\n        finalizer\r\n    };\r\n}\r\nexport function parseCatchBlock(state, context, scope) {\r\n    let param = null;\r\n    let secondScope = scope;\r\n    if (optional(state, context, 131083)) {\r\n        const catchScope = createSubScope(scope, 4);\r\n        if (state.token === 16)\r\n            report(state, 0);\r\n        param = parseBindingIdentifierOrPattern(state, context, catchScope, 1, 8, false);\r\n        if (state.token === 8388637)\r\n            report(state, 0);\r\n        if (checkIfExistInLexicalBindings(state, context, catchScope, 0, true))\r\n            report(state, 45, state.tokenValue);\r\n        expect(state, context, 16);\r\n        secondScope = createSubScope(catchScope, 1);\r\n    }\r\n    const body = parseBlockStatement(state, context, secondScope);\r\n    return {\r\n        type: 'CatchClause',\r\n        param,\r\n        body\r\n    };\r\n}\r\nexport function parseDoWhileStatement(state, context, scope) {\r\n    expect(state, context, 20561);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    expect(state, context, 20577);\r\n    expect(state, context, 131083);\r\n    const test = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    optional(state, context, 536870929);\r\n    return {\r\n        type: 'DoWhileStatement',\r\n        body,\r\n        test\r\n    };\r\n}\r\nexport function parseCaseOrDefaultClauses(state, context, test, scope) {\r\n    expect(state, context, 21);\r\n    const consequent = [];\r\n    while (state.token !== 20555 &&\r\n        state.token !== 536870927 &&\r\n        state.token !== 20560) {\r\n        consequent.push(parseStatementListItem(state, (context | 4096) ^ 4096, scope));\r\n    }\r\n    return {\r\n        type: 'SwitchCase',\r\n        test,\r\n        consequent\r\n    };\r\n}\r\nfunction parseForStatement(state, context, scope) {\r\n    next(state, context);\r\n    const forAwait = context & 4194304 ? optional(state, context, 667757) : false;\r\n    scope = createSubScope(scope, 2);\r\n    expect(state, context, 131083);\r\n    let init = null;\r\n    let declarations = null;\r\n    let test = null;\r\n    let update = null;\r\n    let right;\r\n    let isPattern = false;\r\n    if (state.token !== 536870929) {\r\n        if ((state.token & 268435456) > 0) {\r\n            const kind = KeywordDescTable[state.token & 255];\r\n            if (optional(state, context, 268587079)) {\r\n                init = {\r\n                    type: 'VariableDeclaration',\r\n                    kind,\r\n                    declarations: parseVariableDeclarationList(state, context | 8192, 2, 2, false, scope)\r\n                };\r\n            }\r\n            else if (state.token === 402821192) {\r\n                if (lookAheadOrScan(state, context, isLexical, false)) {\r\n                    init = {\r\n                        type: 'VariableDeclaration',\r\n                        kind,\r\n                        declarations: parseVariableDeclarationList(state, context, 4, 2, true, scope)\r\n                    };\r\n                }\r\n                else {\r\n                    isPattern = true;\r\n                    init = acquireGrammar(state, context | 8192, 0, parseAssignmentExpression);\r\n                }\r\n            }\r\n            else if (optional(state, context, 402804809)) {\r\n                declarations = parseVariableDeclarationList(state, context, 8, 2, false, scope);\r\n                if (checkIfExistInLexicalBindings(state, context, scope, 0, true))\r\n                    report(state, 45, state.tokenValue);\r\n                init = { type: 'VariableDeclaration', kind, declarations };\r\n            }\r\n        }\r\n        else {\r\n            isPattern = state.token === 131091 || state.token === 131084;\r\n            init = acquireGrammar(state, context | 8192, 0, parseAssignmentExpression);\r\n        }\r\n    }\r\n    if (optional(state, context | 32768, 12402)) {\r\n        if (state.inCatch)\r\n            report(state, 0);\r\n        if (isPattern) {\r\n            if (!state.assignable || init.type === 'AssignmentExpression') {\r\n                report(state, 90);\r\n            }\r\n            reinterpret(state, init);\r\n        }\r\n        right = parseAssignmentExpression(state, context);\r\n        expect(state, context, 16);\r\n        const previousIterationStatement = state.iterationStatement;\r\n        state.iterationStatement = 1;\r\n        const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n        state.iterationStatement = previousIterationStatement;\r\n        return {\r\n            type: 'ForOfStatement',\r\n            body,\r\n            left: init,\r\n            right,\r\n            await: forAwait\r\n        };\r\n    }\r\n    if (optional(state, context, 33707825)) {\r\n        if (isPattern) {\r\n            if (!state.assignable || init.type === 'AssignmentExpression') {\r\n                report(state, 89);\r\n            }\r\n            reinterpret(state, init);\r\n        }\r\n        right = parseExpression(state, context);\r\n        expect(state, context, 16);\r\n        const previousIterationStatement = state.iterationStatement;\r\n        state.iterationStatement = 1;\r\n        const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n        state.iterationStatement = previousIterationStatement;\r\n        return {\r\n            type: 'ForInStatement',\r\n            body,\r\n            left: init,\r\n            right\r\n        };\r\n    }\r\n    if (state.token === 18) {\r\n        init = parseSequenceExpression(state, context, init);\r\n    }\r\n    expect(state, context, 536870929);\r\n    if (state.token !== 536870929) {\r\n        test = parseExpression(state, context);\r\n    }\r\n    expect(state, context, 536870929);\r\n    if (state.token !== 16)\r\n        update = parseExpression(state, context);\r\n    expect(state, context, 16);\r\n    const previousIterationStatement = state.iterationStatement;\r\n    state.iterationStatement = 1;\r\n    const body = parseStatement(state, (context | 4096) ^ 4096, scope, 2);\r\n    state.iterationStatement = previousIterationStatement;\r\n    return {\r\n        type: 'ForStatement',\r\n        body,\r\n        init,\r\n        test,\r\n        update\r\n    };\r\n}\r\nexport function parseExpressionOrLabelledStatement(state, context, scope, label) {\r\n    const token = state.token;\r\n    const tokenValue = state.tokenValue;\r\n    const expr = parseExpression(state, context);\r\n    if (token & 4096 && state.token === 21) {\r\n        next(state, context | 32768);\r\n        validateBindingIdentifier(state, context, 0, token);\r\n        if (getLabel(state, `@${tokenValue}`, false, true)) {\r\n            report(state, 53, tokenValue);\r\n        }\r\n        addLabel(state, tokenValue);\r\n        let body = null;\r\n        if (state.token === 151639 &&\r\n            (context & 1024) === 0 &&\r\n            context & 16 &&\r\n            label === 1) {\r\n            body = parseFunctionDeclaration(state, context, scope, 1, false);\r\n        }\r\n        else\r\n            body = parseStatement(state, (context | 4096) ^ 4096, scope, label);\r\n        state.labelDepth--;\r\n        return {\r\n            type: 'LabeledStatement',\r\n            label: expr,\r\n            body\r\n        };\r\n    }\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'ExpressionStatement',\r\n        expression: expr\r\n    };\r\n}\r\nexport function parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    switch (state.token) {\r\n        case 131084:\r\n            return parserObjectAssignmentPattern(state, context, scope, type, origin, verifyDuplicates);\r\n        case 131091:\r\n            return parseArrayAssignmentPattern(state, context, scope, type, origin, verifyDuplicates);\r\n        default:\r\n            return parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n}\r\nexport function parseBindingIdentifier(state, context, scope, type, origin, checkForDuplicates) {\r\n    const name = state.tokenValue;\r\n    if (context & 1024) {\r\n        if (nameIsArgumentsOrEval(name) || name === 'enum')\r\n            report(state, 0);\r\n    }\r\n    else if (name === 'enum')\r\n        report(state, 0);\r\n    validateBindingIdentifier(state, context, type);\r\n    addVariable(state, context, scope, type, origin, checkForDuplicates, (origin === 1 || origin === 2 || origin === 4) &&\r\n        type === 2\r\n        ? true\r\n        : false, name);\r\n    if (origin === 4) {\r\n        addToExportedNamesAndCheckForDuplicates(state, state.tokenValue);\r\n        addToExportedBindings(state, state.tokenValue);\r\n    }\r\n    next(state, context | 32768);\r\n    return {\r\n        type: 'Identifier',\r\n        name\r\n    };\r\n}\r\nexport function parseAssignmentRestElement(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nfunction AssignmentRestProperty(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nexport function parseArrayAssignmentPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    expect(state, context, 131091);\r\n    const elements = [];\r\n    while (state.token !== 20) {\r\n        if (optional(state, context, 18)) {\r\n            elements.push(null);\r\n        }\r\n        else {\r\n            if (state.token === 14) {\r\n                elements.push(parseAssignmentRestElement(state, context, scope, type, origin, verifyDuplicates));\r\n                break;\r\n            }\r\n            else {\r\n                elements.push(parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates));\r\n            }\r\n            if (state.token !== 20)\r\n                expect(state, context, 18);\r\n        }\r\n    }\r\n    expect(state, context, 20);\r\n    return {\r\n        type: 'ArrayPattern',\r\n        elements\r\n    };\r\n}\r\nexport function parserObjectAssignmentPattern(state, context, scope, type, origin, verifyDuplicates) {\r\n    const properties = [];\r\n    expect(state, context, 131084);\r\n    while (state.token !== 536870927) {\r\n        if (state.token === 14) {\r\n            properties.push(AssignmentRestProperty(state, context, scope, type, origin, verifyDuplicates));\r\n            break;\r\n        }\r\n        properties.push(parseAssignmentProperty(state, context, scope, type, origin, verifyDuplicates));\r\n        if (state.token !== 536870927)\r\n            expect(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n    return {\r\n        type: 'ObjectPattern',\r\n        properties\r\n    };\r\n}\r\nexport function parseAssignmentPattern(state, context, left) {\r\n    return {\r\n        type: 'AssignmentPattern',\r\n        left,\r\n        right: secludeGrammar(state, context, 0, parseAssignmentExpression)\r\n    };\r\n}\r\nexport function parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates) {\r\n    const left = parseBindingIdentifierOrPattern(state, context, scope, type, origin, verifyDuplicates);\r\n    return !optional(state, context, 8388637)\r\n        ? left\r\n        : {\r\n            type: 'AssignmentPattern',\r\n            left,\r\n            right: secludeGrammar(state, context, 0, parseAssignmentExpression)\r\n        };\r\n}\r\nexport function parseComputedPropertyName(state, context) {\r\n    expect(state, context, 131091);\r\n    const key = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n    expect(state, context, 20);\r\n    return key;\r\n}\r\nfunction parseAssignmentProperty(state, context, scope, type, origin, verifyDuplicates) {\r\n    const { token } = state;\r\n    let key;\r\n    let value;\r\n    let computed = false;\r\n    let shorthand = false;\r\n    if (token & 4096) {\r\n        key = parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n        shorthand = !optional(state, context, 21);\r\n        if (shorthand) {\r\n            const hasInitializer = optional(state, context, 8388637);\r\n            value = hasInitializer ? parseAssignmentPattern(state, context, key) : key;\r\n        }\r\n        else\r\n            value = parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n    else {\r\n        if (state.token === 131075 || state.token === 131074) {\r\n            key = parseLiteral(state, context, state.tokenValue);\r\n        }\r\n        else if (state.token === 131091) {\r\n            computed = true;\r\n            key = parseComputedPropertyName(state, context);\r\n        }\r\n        else\r\n            key = parseBindingIdentifier(state, context, scope, type, origin, verifyDuplicates);\r\n        expect(state, context, 21);\r\n        value = parseBindingInitializer(state, context, scope, type, origin, verifyDuplicates);\r\n    }\r\n    return {\r\n        type: 'Property',\r\n        kind: 'init',\r\n        key,\r\n        computed,\r\n        value,\r\n        method: false,\r\n        shorthand\r\n    };\r\n}\r\nexport function parseFunctionDeclaration(state, context, scope, origin, isAsync) {\r\n    next(state, context);\r\n    const isGenerator = (origin & 1) < 1 && optional(state, context, 21105203);\r\n    let funcScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token & 274432) {\r\n        validateBindingIdentifier(state, ((context | (2097152 | 4194304)) ^ (2097152 | 4194304)) |\r\n            (context & 1024\r\n                ? 2097152\r\n                : context & 2097152\r\n                    ? 2097152\r\n                    : 0 | (context & 2048)\r\n                        ? 4194304\r\n                        : context & 4194304\r\n                            ? 4194304\r\n                            : 0), context & 4096 && (context & 2048) < 1 ? 2 : 4);\r\n        if (origin & 1) {\r\n            scope = createSubScope(scope, 1);\r\n        }\r\n        addFunctionName(state, context, scope, context & 4096 && ((context & 2048) < 1 || (context & 16) === 0)\r\n            ? 2\r\n            : 4, origin, true);\r\n        funcScope = createSubScope(funcScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    else if (!(context & 512))\r\n        report(state, 0);\r\n    context =\r\n        (context |\r\n            4194304 |\r\n            2097152 |\r\n            8388608 |\r\n            262144 |\r\n            524288 |\r\n            16777216) ^\r\n            (4194304 |\r\n                2097152 |\r\n                8388608 |\r\n                262144 |\r\n                524288 |\r\n                16777216);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    const paramScoop = createSubScope(funcScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864 | 8388608, paramScoop, 32, 0);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), firstRestricted, origin);\r\n    return {\r\n        type: 'FunctionDeclaration',\r\n        params,\r\n        body,\r\n        async: (context & 4194304) > 0,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nfunction parseHostedClassDeclaration(state, context, scope, isNotDefault) {\r\n    next(state, context);\r\n    context = (context | 1024 | 16777216) ^ (1024 | 16777216);\r\n    let id = null;\r\n    let superClass = null;\r\n    let name = '';\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        name = state.tokenValue;\r\n        validateBindingIdentifier(state, context, 16);\r\n        addVariableAndDeduplicate(state, context, scope, 4, 0, true, name);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (isNotDefault)\r\n        addToExportedNamesAndCheckForDuplicates(state, name);\r\n    addToExportedBindings(state, name);\r\n    if (optional(state, context, 20564)) {\r\n        superClass = parseLeftHandSideExpression(state, context);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 128);\r\n    return {\r\n        type: 'ClassDeclaration',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nexport function parseHoistableFunctionDeclaration(state, context, scope, isNotDefault, isAsync) {\r\n    next(state, context);\r\n    const isGenerator = optional(state, context, 21105203);\r\n    let funcScope = createScope(1);\r\n    let id = null;\r\n    let name = '';\r\n    if (state.token & 274432) {\r\n        name = state.tokenValue;\r\n        validateBindingIdentifier(state, context, 4);\r\n        addFunctionName(state, context, scope, 4, 0, true);\r\n        funcScope = createSubScope(funcScope, 1);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (isNotDefault)\r\n        addToExportedNamesAndCheckForDuplicates(state, name);\r\n    addToExportedBindings(state, name);\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608 | 262144) ^\r\n            (4194304 | 2097152 | 8388608 | 262144);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    const paramScoop = createSubScope(funcScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864 | 8388608, paramScoop, 32, 0);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), undefined, 0);\r\n    return {\r\n        type: 'FunctionDeclaration',\r\n        params,\r\n        body,\r\n        async: (context & 4194304) > 0,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nexport function parseFormalParameters(state, context, scope, origin, objState) {\r\n    expect(state, context, 131083);\r\n    const params = [];\r\n    state.flags &= ~64;\r\n    if (state.token === 18)\r\n        report(state, 0);\r\n    let hasComplexArgs = false;\r\n    while (state.token !== 16) {\r\n        if (state.token === 14) {\r\n            state.flags |= 64;\r\n            if (objState & 512)\r\n                report(state, 95);\r\n            params.push(parseRestElement(state, context, scope, 1, 0));\r\n            break;\r\n        }\r\n        if ((state.token & 405505) !== 405505)\r\n            state.flags |= 64;\r\n        let left = parseBindingIdentifierOrPattern(state, context, scope, 1, origin, false);\r\n        if (optional(state, context | 32768, 8388637)) {\r\n            state.flags |= 64;\r\n            if ((state.token & 405505) === 405505) {\r\n                hasComplexArgs = true;\r\n            }\r\n            else if (state.token & 2097152 && context & (1024 | 2097152))\r\n                report(state, 0);\r\n            left = parseAssignmentPattern(state, context, left);\r\n        }\r\n        params.push(left);\r\n        if (optional(state, context, 18)) {\r\n            if (state.token === 18)\r\n                report(state, 0);\r\n        }\r\n    }\r\n    if (objState & 512 && params.length !== 1) {\r\n        report(state, 94, 'Setter', 'one', '');\r\n    }\r\n    if (objState & 256 && params.length > 0) {\r\n        report(state, 94, 'Getter', 'no', 's');\r\n    }\r\n    expect(state, context, 16);\r\n    if (hasComplexArgs || (context & (1024 | 33554432)) > 0) {\r\n        validateFunctionArgs(state, scope.lex);\r\n    }\r\n    return params;\r\n}\r\nexport function parseRestElement(state, context, scope, type, origin) {\r\n    expect(state, context, 14);\r\n    const argument = parseBindingIdentifierOrPattern(state, context, scope, type, origin, false);\r\n    return {\r\n        type: 'RestElement',\r\n        argument\r\n    };\r\n}\r\nexport function parseFunctionBody(state, context, scope, firstRestricted, origin) {\r\n    const body = [];\r\n    expect(state, context, 131084);\r\n    const isStrict = (context & 1024) === 1024;\r\n    context = context | (4096 | 134217728);\r\n    while (state.token === 131075) {\r\n        if (state.tokenValue.length === 10 && state.tokenValue === 'use strict') {\r\n            if (state.flags & 64)\r\n                report(state, 61);\r\n            context |= 1024;\r\n        }\r\n        body.push(parseDirective(state, context, scope));\r\n    }\r\n    if (context & 1024) {\r\n        if ((state.flags & 512) === 512)\r\n            report(state, 86);\r\n        if (state.flags & 1024) {\r\n            report(state, 85);\r\n        }\r\n        if ((firstRestricted && firstRestricted === 'eval') || firstRestricted === 'arguments')\r\n            report(state, 61);\r\n    }\r\n    state.flags =\r\n        (state.flags | (1024 | 512)) ^\r\n            (1024 | 512);\r\n    if (!isStrict && (context & 1024) > 0)\r\n        validateFunctionArgs(state, scope.lex['@']);\r\n    if (state.token !== 536870927) {\r\n        const previousSwitchStatement = state.switchStatement;\r\n        const previousIterationStatement = state.iterationStatement;\r\n        if ((state.iterationStatement & 1) === 1) {\r\n            state.iterationStatement = 2;\r\n        }\r\n        addCrossingBoundary(state);\r\n        while (state.token !== 536870927) {\r\n            body.push(parseStatementListItem(state, context, scope));\r\n        }\r\n        state.labelDepth--;\r\n        state.switchStatement = previousSwitchStatement;\r\n        state.iterationStatement = previousIterationStatement;\r\n    }\r\n    expect(state, origin & 128 ? context | 32768 : context, 536870927);\r\n    return {\r\n        type: 'BlockStatement',\r\n        body\r\n    };\r\n}\r\nexport function parseVariableStatement(state, context, type, origin, scope) {\r\n    const { token } = state;\r\n    next(state, context);\r\n    const declarations = parseVariableDeclarationList(state, context, type, origin, false, scope);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'VariableDeclaration',\r\n        kind: KeywordDescTable[token & 255],\r\n        declarations\r\n    };\r\n}\r\nexport function parseLexicalDeclaration(state, context, type, origin, scope) {\r\n    const { token } = state;\r\n    next(state, context);\r\n    const declarations = parseVariableDeclarationList(state, context, type, origin, false, scope);\r\n    if (checkIfExistInLexicalBindings(state, context, scope, origin, false))\r\n        report(state, 0);\r\n    consumeSemicolon(state, context);\r\n    return {\r\n        type: 'VariableDeclaration',\r\n        kind: KeywordDescTable[token & 255],\r\n        declarations\r\n    };\r\n}\r\nexport function parseVariableDeclarationList(state, context, type, origin, checkForDuplicates, scope) {\r\n    let bindingCount = 1;\r\n    const list = [parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope)];\r\n    while (optional(state, context, 18)) {\r\n        list.push(parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope));\r\n        ++bindingCount;\r\n    }\r\n    if (origin & 2 && isInOrOf(state) && bindingCount > 1) {\r\n        report(state, 0);\r\n    }\r\n    return list;\r\n}\r\nexport function isInOrOf(state) {\r\n    return state.token === 33707825 || state.token === 12402;\r\n}\r\nfunction parseVariableDeclaration(state, context, type, origin, checkForDuplicates, scope) {\r\n    const isBinding = state.token === 131084 || state.token === 131091;\r\n    const id = parseBindingIdentifierOrPattern(state, context, scope, type, origin, checkForDuplicates);\r\n    let init = null;\r\n    if (optional(state, context | 32768, 8388637)) {\r\n        init = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n        if (isInOrOf(state) && (origin & 2 || isBinding)) {\r\n            if ((type & 2) < 1 || context & (16 | 1024) || isBinding) {\r\n                report(state, 0);\r\n            }\r\n        }\r\n    }\r\n    else if ((type & 8 || isBinding) && !isInOrOf(state)) {\r\n        report(state, 0, type & 8 ? 'const' : 'destructuring');\r\n    }\r\n    return {\r\n        type: 'VariableDeclarator',\r\n        init,\r\n        id\r\n    };\r\n}\r\nexport function parseExpression(state, context) {\r\n    const expr = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n    if (state.token !== 18)\r\n        return expr;\r\n    return parseSequenceExpression(state, context, expr);\r\n}\r\nexport function parseSequenceExpression(state, context, left) {\r\n    const expressions = [left];\r\n    while (optional(state, context | 32768, 18)) {\r\n        expressions.push(secludeGrammar(state, context, 0, parseAssignmentExpression));\r\n    }\r\n    return {\r\n        type: 'SequenceExpression',\r\n        expressions\r\n    };\r\n}\r\nfunction parseYieldExpression(state, context) {\r\n    expect(state, context | 32768, 2265194);\r\n    let argument = null;\r\n    let delegate = false;\r\n    if ((state.flags & 1) < 1) {\r\n        delegate = optional(state, context, 21105203);\r\n        if (state.token & 131072 || delegate) {\r\n            argument = parseAssignmentExpression(state, context);\r\n        }\r\n    }\r\n    return {\r\n        type: 'YieldExpression',\r\n        argument,\r\n        delegate\r\n    };\r\n}\r\nfunction parseAssignmentExpression(state, context) {\r\n    const { token, tokenValue } = state;\r\n    if (token & 2097152 && context & 2097152)\r\n        return parseYieldExpression(state, context);\r\n    const expr = acquireGrammar(state, context, 0, parseBinaryExpression);\r\n    if (token & 1048576 &&\r\n        (state.flags & 1) < 1 &&\r\n        ((state.token & 274432) === 274432 || (state.token & 2097152) === 2097152)) {\r\n        const scope = createScope(5);\r\n        addVariableAndDeduplicate(state, context, scope, 1, 0, true, state.tokenValue);\r\n        const arg = parseIdentifier(state, context);\r\n        if (state.flags & 1)\r\n            report(state, 0);\r\n        return parseArrowFunctionExpression(state, context, scope, [arg], true, 64);\r\n    }\r\n    if (state.token === 131082) {\r\n        let { type, scope: arrowScope, params } = expr;\r\n        if (type & (2 | 4)) {\r\n            if (state.flags & 1)\r\n                report(state, 0);\r\n            state.pendingCoverInitializeError = null;\r\n            state.bindable = state.assignable = false;\r\n        }\r\n        else {\r\n            if ((token & 36864) === 36864) {\r\n                state.flags |= 512;\r\n            }\r\n            else if (tokenValue === 'eval' || tokenValue === 'arguments') {\r\n                if (context & 1024)\r\n                    report(state, 85);\r\n                state.flags |= 1024;\r\n            }\r\n            arrowScope = createScope(5);\r\n            params = [expr];\r\n            type = 64;\r\n            addVariableAndDeduplicate(state, context, arrowScope, 1, 0, true, tokenValue);\r\n        }\r\n        return parseArrowFunctionExpression(state, context, arrowScope, params, (type & 4) > 0, type);\r\n    }\r\n    if ((state.token & 8388608) === 8388608) {\r\n        if (context & 1024 && nameIsArgumentsOrEval(expr.name)) {\r\n            report(state, 0);\r\n        }\r\n        else if (state.token === 8388637) {\r\n            if (!state.assignable)\r\n                report(state, 84);\r\n            reinterpret(state, expr);\r\n        }\r\n        else {\r\n            if (!state.assignable || !isValidSimpleAssignmentTarget(expr))\r\n                report(state, 84);\r\n            state.bindable = state.assignable = false;\r\n        }\r\n        const operator = state.token;\r\n        next(state, context | 32768);\r\n        const right = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n        state.pendingCoverInitializeError = null;\r\n        return {\r\n            type: 'AssignmentExpression',\r\n            left: expr,\r\n            operator: KeywordDescTable[operator & 255],\r\n            right\r\n        };\r\n    }\r\n    return parseConditionalExpression(state, context, expr);\r\n}\r\nfunction parseConditionalExpression(state, context, test) {\r\n    if (!optional(state, context | 32768, 22))\r\n        return test;\r\n    const consequent = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n    expect(state, context | 32768, 21);\r\n    const alternate = secludeGrammar(state, context, 0, parseAssignmentExpression);\r\n    state.bindable = state.assignable = false;\r\n    return {\r\n        type: 'ConditionalExpression',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    };\r\n}\r\nfunction parseBinaryExpression(state, context, minPrec, left = parseUnaryExpression(state, context)) {\r\n    const bit = -((context & 8192) > 0) & 33707825;\r\n    let t;\r\n    let prec;\r\n    while (state.token & 16908288) {\r\n        t = state.token;\r\n        prec = t & 3840;\r\n        if (prec + ((t === 16911158) << 8) - ((bit === t) << 12) <= minPrec)\r\n            break;\r\n        next(state, context | 32768);\r\n        left = {\r\n            type: t & 65536 ? 'LogicalExpression' : 'BinaryExpression',\r\n            left,\r\n            right: secludeGrammar(state, context, prec, parseBinaryExpression),\r\n            operator: KeywordDescTable[t & 255]\r\n        };\r\n        state.assignable = state.bindable = false;\r\n    }\r\n    return left;\r\n}\r\nfunction parseAwaitExpression(state, context) {\r\n    next(state, context | 32768);\r\n    return {\r\n        type: 'AwaitExpression',\r\n        argument: parseUnaryExpression(state, context)\r\n    };\r\n}\r\nfunction parseUnaryExpression(state, context) {\r\n    if ((state.token & 33685504) === 33685504) {\r\n        const unaryOperator = state.token;\r\n        next(state, context | 32768);\r\n        const argument = secludeGrammar(state, context, 0, parseUnaryExpression);\r\n        if (state.token === 16911158)\r\n            report(state, 57);\r\n        if (context & 1024 && (unaryOperator & 33706027) === 33706027) {\r\n            if (argument.type === 'Identifier') {\r\n                report(state, 56);\r\n            }\r\n            else if (context & 1 && state.flags & 128) {\r\n                report(state, 82);\r\n            }\r\n        }\r\n        state.bindable = state.assignable = false;\r\n        return {\r\n            type: 'UnaryExpression',\r\n            operator: KeywordDescTable[unaryOperator & 255],\r\n            argument,\r\n            prefix: true\r\n        };\r\n    }\r\n    return context & 4194304 && state.token & 524288\r\n        ? parseAwaitExpression(state, context)\r\n        : parseUpdateExpression(state, context);\r\n}\r\nfunction parseUpdateExpression(state, context) {\r\n    const { token } = state;\r\n    if ((state.token & 67239936) === 67239936) {\r\n        next(state, context | 32768);\r\n        const expr = parseLeftHandSideExpression(state, context);\r\n        if (context & 1024 && (expr.name === 'eval' || expr.name === 'arguments')) {\r\n            report(state, 83, 'Prefix');\r\n        }\r\n        if (!state.assignable)\r\n            report(state, 84);\r\n        state.bindable = state.assignable = false;\r\n        return {\r\n            type: 'UpdateExpression',\r\n            argument: expr,\r\n            operator: KeywordDescTable[token & 255],\r\n            prefix: true\r\n        };\r\n    }\r\n    const expression = parseLeftHandSideExpression(state, context);\r\n    if ((state.token & 67239936) === 67239936 && (state.flags & 1) < 1) {\r\n        if (context & 1024 && (expression.name === 'eval' || expression.name === 'arguments')) {\r\n            report(state, 83, 'PostFix');\r\n        }\r\n        if (!state.assignable)\r\n            report(state, 84);\r\n        const operator = state.token;\r\n        next(state, context | 32768);\r\n        state.bindable = state.assignable = false;\r\n        return {\r\n            type: 'UpdateExpression',\r\n            argument: expression,\r\n            operator: KeywordDescTable[operator & 255],\r\n            prefix: false\r\n        };\r\n    }\r\n    return expression;\r\n}\r\nexport function parseLeftHandSideExpression(state, context) {\r\n    const expr = context & 1 && state.token === 151641\r\n        ? parseCallImportOrMetaProperty(state, context)\r\n        : state.token === 151644\r\n            ? parseSuperExpression(state, context)\r\n            : parseMemberExpression(state, context, parsePrimaryExpression(state, context));\r\n    return parseCallExpression(state, context, expr);\r\n}\r\nfunction parseCallExpression(state, context, callee) {\r\n    const scope = state.bindable && callee.name === 'async' ? createScope(1) : null;\r\n    const { flags } = state;\r\n    while (true) {\r\n        callee = parseMemberExpression(state, context, callee);\r\n        if (state.token !== 131083)\r\n            return callee;\r\n        expect(state, context | 32768, 131083);\r\n        let seenSpread = false;\r\n        let spreadCount = 0;\r\n        const params = [];\r\n        while (state.token !== 16) {\r\n            if (state.token === 14) {\r\n                params.push(parseSpreadElement(state, context));\r\n                seenSpread = true;\r\n            }\r\n            else {\r\n                params.push(secludeGrammar(state, context, 0, parseAsyncArgument));\r\n            }\r\n            if (state.token === 16)\r\n                break;\r\n            expect(state, context | 32768, 18);\r\n            state.assignable = false;\r\n            if (seenSpread)\r\n                spreadCount++;\r\n        }\r\n        expect(state, context, 16);\r\n        if (state.token === 131082) {\r\n            if (flags & 1)\r\n                report(state, 0);\r\n            if (!state.bindable)\r\n                report(state, 0);\r\n            state.bindable = state.assignable = false;\r\n            if (spreadCount > 0)\r\n                report(state, 92);\r\n            state.bindable = false;\r\n            return {\r\n                type: 4,\r\n                scope,\r\n                params\r\n            };\r\n        }\r\n        state.bindable = state.assignable = false;\r\n        callee = {\r\n            type: 'CallExpression',\r\n            callee,\r\n            arguments: params\r\n        };\r\n    }\r\n}\r\nfunction parseCallImportOrMetaProperty(state, context) {\r\n    const id = parseIdentifier(state, context);\r\n    if (optional(state, context, 13)) {\r\n        if (context & 2048 && state.tokenValue === 'meta')\r\n            return parseMetaProperty(state, context, id);\r\n        report(state, 1, KeywordDescTable[state.token & 255]);\r\n    }\r\n    const expr = parseImportExpression();\r\n    return parseCallExpression(state, context, expr);\r\n}\r\nfunction parseImportExpression() {\r\n    return {\r\n        type: 'Import'\r\n    };\r\n}\r\nexport function parseMetaProperty(state, context, id) {\r\n    return {\r\n        meta: id,\r\n        type: 'MetaProperty',\r\n        property: parseIdentifier(state, context)\r\n    };\r\n}\r\nfunction parseSuperExpression(state, context) {\r\n    next(state, context);\r\n    state.assignable = state.bindable = false;\r\n    if (state.token === 131091 || state.token === 13) {\r\n        if ((context & 262144) < 1)\r\n            report(state, 59);\r\n        state.assignable = true;\r\n    }\r\n    else if ((context & 524288) < 1 && state.token === 131083) {\r\n        report(state, 58);\r\n    }\r\n    return { type: 'Super' };\r\n}\r\nfunction parseIdentifierNameOrPrivateName(state, context) {\r\n    if (!optional(state, context, 119))\r\n        return parseIdentifierName(state, context);\r\n    state.flags |= 128;\r\n    return {\r\n        type: 'PrivateName',\r\n        name: state.tokenValue\r\n    };\r\n}\r\nfunction parseIdentifierName(state, context) {\r\n    if ((state.token & (274432 | 4096)) !== 274432 &&\r\n        (state.token & 4096) !== 4096)\r\n        report(state, 0);\r\n    return parseIdentifier(state, context);\r\n}\r\nfunction parseMemberExpression(state, context, expr) {\r\n    while (true) {\r\n        switch (state.token) {\r\n            case 13:\r\n                next(state, context);\r\n                state.bindable = false;\r\n                state.assignable = true;\r\n                expr = {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: false,\r\n                    property: context & 1\r\n                        ? parseIdentifierNameOrPrivateName(state, context)\r\n                        : parseIdentifierName(state, context)\r\n                };\r\n                continue;\r\n            case 131091:\r\n                next(state, context | 32768);\r\n                state.bindable = false;\r\n                state.assignable = true;\r\n                expr = {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: true,\r\n                    property: parseExpression(state, context)\r\n                };\r\n                expect(state, context, 20);\r\n                break;\r\n            case 131081:\r\n                state.bindable = state.assignable = false;\r\n                expr = {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parseTemplateLiteral(state, context)\r\n                };\r\n                break;\r\n            case 131080:\r\n                state.bindable = state.assignable = false;\r\n                expr = {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parseTemplate(state, context | 65536)\r\n                };\r\n                break;\r\n            default:\r\n                return expr;\r\n        }\r\n    }\r\n}\r\nfunction parseTemplateLiteral(parser, context) {\r\n    return {\r\n        type: 'TemplateLiteral',\r\n        expressions: [],\r\n        quasis: [parseTemplateTail(parser, context)]\r\n    };\r\n}\r\nfunction parseTemplateSpans(state, tail) {\r\n    return {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked: state.tokenValue,\r\n            raw: state.tokenRaw\r\n        },\r\n        tail\r\n    };\r\n}\r\nfunction parseTemplate(state, context) {\r\n    const quasis = [parseTemplateSpans(state, false)];\r\n    expect(state, context | 32768, 131080);\r\n    const expressions = [parseExpression(state, context)];\r\n    while ((state.token = scanTemplateTail(state, context)) !== 131081) {\r\n        quasis.push(parseTemplateSpans(state, false));\r\n        expect(state, context | 32768, 131080);\r\n        expressions.push(parseExpression(state, context));\r\n    }\r\n    quasis.push(parseTemplateSpans(state, true));\r\n    state.assignable = state.bindable = false;\r\n    next(state, context);\r\n    return {\r\n        type: 'TemplateLiteral',\r\n        expressions,\r\n        quasis\r\n    };\r\n}\r\nfunction parseTemplateTail(state, context) {\r\n    const { tokenValue, tokenRaw } = state;\r\n    expect(state, context | 32768, 131081);\r\n    return {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked: tokenValue,\r\n            raw: tokenRaw\r\n        },\r\n        tail: true\r\n    };\r\n}\r\nfunction parseArgumentList(state, context) {\r\n    expect(state, context | 32768, 131083);\r\n    const expressions = [];\r\n    while (state.token !== 16) {\r\n        if (state.token === 14) {\r\n            expressions.push(parseSpreadElement(state, context));\r\n            if (state.token === 16)\r\n                break;\r\n            expect(state, context, 18);\r\n            continue;\r\n        }\r\n        else {\r\n            expressions.push(secludeGrammar(state, context, 0, parseAssignmentExpression));\r\n        }\r\n        if (!optional(state, context | 32768, 18))\r\n            break;\r\n    }\r\n    expect(state, context, 16);\r\n    return expressions;\r\n}\r\nfunction parseSpreadElement(state, context) {\r\n    expect(state, context | 32768, 14);\r\n    const argument = acquireGrammar(state, context, 0, parseAssignmentExpression);\r\n    return {\r\n        type: 'SpreadElement',\r\n        argument\r\n    };\r\n}\r\nfunction parseAsyncArgument(state, context) {\r\n    const arg = parseAssignmentExpression(state, context);\r\n    state.pendingCoverInitializeError = null;\r\n    return arg;\r\n}\r\nfunction parseNewExpression(state, context) {\r\n    const id = parseIdentifier(state, context | 32768);\r\n    if (optional(state, context, 13)) {\r\n        return (context & 67108864) < 1 || state.tokenValue !== 'target'\r\n            ? report(state, 0)\r\n            : parseMetaProperty(state, context, id);\r\n    }\r\n    let callee;\r\n    if (context & 1 && state.token === 151641) {\r\n        if (lookAheadOrScan(state, context, nextTokenIsLeftParen, true))\r\n            report(state, 1, KeywordDescTable[state.token & 255]);\r\n        callee = parseCallImportOrMetaProperty(state, context);\r\n    }\r\n    else {\r\n        callee = secludeGrammar(state, context, 0, parseMemberExpressionOrHigher);\r\n    }\r\n    return {\r\n        type: 'NewExpression',\r\n        callee,\r\n        arguments: state.token === 131083 ? parseArgumentList(state, context) : []\r\n    };\r\n}\r\nfunction parseMemberExpressionOrHigher(state, context) {\r\n    return parseMemberExpression(state, context, parsePrimaryExpression(state, context));\r\n}\r\nexport function parsePrimaryExpression(state, context) {\r\n    switch (state.token) {\r\n        case 131074:\r\n        case 131075:\r\n            state.bindable = state.assignable = false;\r\n            return parseLiteral(state, context, state.tokenValue);\r\n        case 116:\r\n            state.bindable = state.assignable = false;\r\n            return parseBigIntLiteral(state, context);\r\n        case 131076:\r\n            state.bindable = state.assignable = false;\r\n            return parseRegularExpressionLiteral(state, context);\r\n        case 151558:\r\n        case 151557:\r\n            state.bindable = state.assignable = false;\r\n            return parseLiteral(state, context, state.tokenValue === 'true');\r\n        case 151559:\r\n            state.bindable = state.assignable = false;\r\n            return parseLiteral(state, context, null);\r\n        case 151646:\r\n            state.bindable = state.assignable = false;\r\n            return parseThisExpression(state, context);\r\n        case 131091:\r\n            return parseArrayLiteral(state, context & ~8192);\r\n        case 131083:\r\n            return parseParenthesizedExpression(state, context);\r\n        case 131084:\r\n            return parseObjectLiteral(state, context & ~8192, -1, 0);\r\n        case 151639:\r\n            state.bindable = state.assignable = false;\r\n            return parseFunctionExpression(state, context, false);\r\n        case 151629:\r\n            state.bindable = state.assignable = false;\r\n            return parseClassExpression(state, context);\r\n        case 131081:\r\n            state.bindable = state.assignable = false;\r\n            return parseTemplateLiteral(state, context);\r\n        case 131080:\r\n            state.bindable = state.assignable = false;\r\n            return parseTemplate(state, context);\r\n        case 151642:\r\n            state.bindable = state.assignable = false;\r\n            return parseNewExpression(state, context);\r\n        case 151644:\r\n            state.bindable = state.assignable = false;\r\n            return parseSuperExpression(state, context);\r\n        case 119:\r\n            state.bindable = state.assignable = false;\r\n            return parseIdentifierNameOrPrivateName(state, context);\r\n        case 1060972: {\r\n            if (lookAheadOrScan(state, context, nextTokenIsFuncKeywordOnSameLine, false)) {\r\n                state.bindable = state.assignable = false;\r\n                return parseFunctionExpression(state, context, true);\r\n            }\r\n            return parseIdentifier(state, context);\r\n        }\r\n        case 402821192: {\r\n            if (context & 1024)\r\n                report(state, 86);\r\n            next(state, context);\r\n            if (state.flags & 1 && state.token === 131091) {\r\n                report(state, 97);\r\n            }\r\n            return context & 8\r\n                ? {\r\n                    type: 'Identifier',\r\n                    name: 'let',\r\n                    raw: 'let'\r\n                }\r\n                : {\r\n                    type: 'Identifier',\r\n                    name: 'let'\r\n                };\r\n        }\r\n        case 20561:\r\n            return parseDoExpression(state, context);\r\n        case 2265194:\r\n            if (context & (2097152 | 1024))\r\n                report(state, 67);\r\n        default:\r\n            if (isValidIdentifier(context, state.token)) {\r\n                return parseIdentifier(state, context | 65536);\r\n            }\r\n            report(state, 0);\r\n    }\r\n}\r\nfunction parseDoExpression(state, context) {\r\n    if ((context & 128) < 1)\r\n        report(state, 91);\r\n    expect(state, context, 20561);\r\n    return {\r\n        type: 'DoExpression',\r\n        body: parseBlockStatement(state, context, createScope(1))\r\n    };\r\n}\r\nexport function parseArrayLiteral(state, context) {\r\n    next(state, context | 32768);\r\n    const elements = [];\r\n    while (state.token !== 20) {\r\n        if (optional(state, context, 18)) {\r\n            elements.push(null);\r\n            if (state.token === 131091) {\r\n                break;\r\n            }\r\n        }\r\n        else if (state.token === 14) {\r\n            expect(state, context | 32768, 14);\r\n            const argument = acquireGrammar(state, context, 0, parseAssignmentExpression);\r\n            if (!state.assignable && state.pendingCoverInitializeError)\r\n                report(state, 0);\r\n            if (argument.type !== 'ArrayExpression' &&\r\n                argument.type !== 'ObjectExpression' &&\r\n                !isValidSimpleAssignmentTarget(argument)) {\r\n                state.bindable = state.assignable = false;\r\n            }\r\n            elements.push({\r\n                type: 'SpreadElement',\r\n                argument\r\n            });\r\n            if (state.token !== 20) {\r\n                state.bindable = state.assignable = false;\r\n                expect(state, context, 18);\r\n            }\r\n        }\r\n        else {\r\n            elements.push(acquireGrammar(state, context, 0, parseAssignmentExpression));\r\n            if (optional(state, context, 18)) {\r\n                if (state.token === 20) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    expect(state, context, 20);\r\n    return {\r\n        type: 'ArrayExpression',\r\n        elements\r\n    };\r\n}\r\nfunction parseFunctionExpression(state, context, isAsync) {\r\n    expect(state, context, 151639);\r\n    const isGenerator = optional(state, context, 21105203);\r\n    let functionScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token & 274432) {\r\n        validateBindingIdentifier(state, context & 1024\r\n            ? 2097152\r\n            : isGenerator\r\n                ? 2097152\r\n                : 0 | (context & 2048) || isGenerator\r\n                    ? 4194304\r\n                    : 0, 2);\r\n        addVariableAndDeduplicate(state, context, functionScope, 2, 0, true, state.tokenValue);\r\n        functionScope = createSubScope(functionScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    context =\r\n        (context |\r\n            4194304 |\r\n            2097152 |\r\n            8388608 |\r\n            262144 |\r\n            524288 |\r\n            16777216) ^\r\n            (4194304 |\r\n                2097152 |\r\n                8388608 |\r\n                262144 |\r\n                524288 |\r\n                16777216);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    if (isGenerator)\r\n        context |= 2097152;\r\n    const paramScoop = createSubScope(functionScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864 | 8388608, paramScoop, 32, 0);\r\n    const body = parseFunctionBody(state, context | 67108864, createSubScope(paramScoop, 1), firstRestricted, 0);\r\n    return {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: isAsync,\r\n        generator: isGenerator,\r\n        id\r\n    };\r\n}\r\nfunction parseArrowFunctionExpression(state, context, scope, params, isAsync, type) {\r\n    if (type & 64) {\r\n        expect(state, context | 32768, 131082);\r\n    }\r\n    else {\r\n        expect(state, context, 131082);\r\n        for (let i = 0; i < params.length; ++i)\r\n            reinterpret(state, params[i]);\r\n    }\r\n    if (state.flags & 1)\r\n        report(state, 0);\r\n    if (checkIfExistInLexicalBindings(state, context, scope, 0, true))\r\n        report(state, 41);\r\n    context =\r\n        (context | 4194304 | 2097152 | 8388608) ^\r\n            (4194304 | 2097152 | 8388608);\r\n    if (isAsync)\r\n        context |= 4194304;\r\n    const expression = state.token !== 131084;\r\n    const body = expression\r\n        ? secludeGrammar(state, context, 0, parseAssignmentExpression)\r\n        : parseFunctionBody(state, context, createSubScope(scope, 1), state.tokenValue, 0);\r\n    return {\r\n        type: 'ArrowFunctionExpression',\r\n        body,\r\n        params,\r\n        id: null,\r\n        async: isAsync,\r\n        expression\r\n    };\r\n}\r\nexport function parseParenthesizedExpression(state, context) {\r\n    expect(state, context | 32768, 131083);\r\n    const scope = createScope(5);\r\n    if (optional(state, context, 16)) {\r\n        if (state.token !== 131082)\r\n            report(state, 0);\r\n        state.assignable = state.bindable = false;\r\n        return {\r\n            type: 2,\r\n            scope,\r\n            params: []\r\n        };\r\n    }\r\n    else if (state.token === 14) {\r\n        const rest = parseRestElement(state, context, scope, 1, 0);\r\n        expect(state, context, 16);\r\n        if (state.token !== 131082)\r\n            report(state, 0);\r\n        state.assignable = state.bindable = false;\r\n        return {\r\n            type: 2,\r\n            scope,\r\n            params: [rest]\r\n        };\r\n    }\r\n    let expr = acquireGrammar(state, context, 0, parseAssignmentExpression);\r\n    let isSequence = false;\r\n    if (state.token === 18) {\r\n        state.assignable = false;\r\n        isSequence = true;\r\n        const params = [expr];\r\n        while (optional(state, context | 32768, 18)) {\r\n            if (optional(state, context, 16)) {\r\n                if (state.token !== 131082)\r\n                    report(state, 0);\r\n                return {\r\n                    type: 2,\r\n                    scope,\r\n                    params: params\r\n                };\r\n            }\r\n            state.assignable = false;\r\n            if (state.token === 14) {\r\n                if (!state.bindable)\r\n                    report(state, 0);\r\n                const restElement = parseRestElement(state, context, scope, 1, 0);\r\n                expect(state, context, 16);\r\n                if (state.token !== 131082)\r\n                    report(state, 0);\r\n                state.bindable = false;\r\n                params.push(restElement);\r\n                return {\r\n                    type: 2,\r\n                    scope,\r\n                    params: params\r\n                };\r\n            }\r\n            else if (optional(state, context, 16)) {\r\n                if (state.token !== 131082)\r\n                    report(state, 0);\r\n                return {\r\n                    type: 2,\r\n                    scope,\r\n                    params: params\r\n                };\r\n            }\r\n            else {\r\n                params.push(acquireGrammar(state, context, 0, parseAssignmentExpression));\r\n            }\r\n        }\r\n        expr = {\r\n            type: 'SequenceExpression',\r\n            expressions: params\r\n        };\r\n    }\r\n    expect(state, context, 16);\r\n    if ((state.flags & 1) < 1 && state.token === 131082) {\r\n        if (!state.bindable)\r\n            report(state, 88);\r\n        state.bindable = false;\r\n        return {\r\n            type: 2,\r\n            scope,\r\n            params: isSequence ? expr.expressions : [expr],\r\n            async: false\r\n        };\r\n    }\r\n    state.bindable = false;\r\n    if (!isValidSimpleAssignmentTarget(expr))\r\n        state.assignable = false;\r\n    return expr;\r\n}\r\nfunction parseClassDeclaration(state, context, scope) {\r\n    next(state, context);\r\n    context = (context | 1024 | 16777216) ^ 16777216;\r\n    let id = null;\r\n    let superClass = null;\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        validateBindingIdentifier(state, context | 1024, 16);\r\n        addVariableAndDeduplicate(state, context, scope, 4, 0, true, state.tokenValue);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    else if (!(context & 512))\r\n        report(state, 0);\r\n    if (optional(state, context, 20564)) {\r\n        superClass = secludeGrammar(state, context, 0, parseLeftHandSideExpression);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 128);\r\n    return {\r\n        type: 'ClassDeclaration',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nfunction parseClassExpression(state, context) {\r\n    next(state, context);\r\n    context = (context | (1024 | 16777216)) ^ (1024 | 16777216);\r\n    let id = null;\r\n    let superClass = null;\r\n    if (state.token & 274432 && state.token !== 20564) {\r\n        validateBindingIdentifier(state, context | 1024, 16);\r\n        addVariable(state, context, -1, 4, 0, false, false, state.tokenValue);\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    if (optional(state, context, 20564)) {\r\n        superClass = secludeGrammar(state, context, 0, parseLeftHandSideExpression);\r\n        context |= 524288;\r\n    }\r\n    else\r\n        context = (context | 524288) ^ 524288;\r\n    context |= 262144;\r\n    const body = parseClassBodyAndElementList(state, context, 0);\r\n    return {\r\n        type: 'ClassExpression',\r\n        id,\r\n        superClass,\r\n        body\r\n    };\r\n}\r\nexport function parseClassBodyAndElementList(state, context, origin) {\r\n    expect(state, context | 32768, 131084);\r\n    const body = [];\r\n    while (state.token !== 536870927) {\r\n        if (optional(state, context, 536870929))\r\n            continue;\r\n        body.push(parseClassElementList(state, context, 0));\r\n    }\r\n    expect(state, origin & 128 ? context | 32768 : context, 536870927);\r\n    state.flags &= ~2048;\r\n    return {\r\n        type: 'ClassBody',\r\n        body\r\n    };\r\n}\r\nfunction parseClassElementList(state, context, modifier) {\r\n    let key;\r\n    let { token, tokenValue } = state;\r\n    if (state.token & 274432) {\r\n        key = parseIdentifier(state, context);\r\n        switch (token) {\r\n            case 36969:\r\n                if ((modifier & 32) === 0 && state.token !== 131083) {\r\n                    return parseClassElementList(state, context, 32);\r\n                }\r\n                break;\r\n            case 1060972:\r\n                if (state.token !== 131083 && (state.flags & 1) === 0) {\r\n                    if (optional(state, context, 21105203))\r\n                        modifier |= 8;\r\n                    tokenValue = state.tokenValue;\r\n                    if (state.token & 274432) {\r\n                        key = parseIdentifier(state, context);\r\n                        if (state.flags & 1)\r\n                            report(state, 0);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context, state.tokenValue);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        modifier |= 2;\r\n                        key = parseComputedPropertyName(state, context);\r\n                    }\r\n                    else {\r\n                        report(state, 0);\r\n                    }\r\n                    modifier |= 16;\r\n                }\r\n                break;\r\n            case 12399:\r\n                if (state.token !== 131083) {\r\n                    tokenValue = state.tokenValue;\r\n                    if (state.token & 274432) {\r\n                        key = parseIdentifier(state, context);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context, state.tokenValue);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        modifier |= 2;\r\n                        key = parseComputedPropertyName(state, context);\r\n                    }\r\n                    else {\r\n                        report(state, 0);\r\n                    }\r\n                    modifier |= 256;\r\n                }\r\n                break;\r\n            case 12400:\r\n                if (state.token !== 131083) {\r\n                    tokenValue = state.tokenValue;\r\n                    if (state.token & 274432) {\r\n                        key = parseIdentifier(state, context);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context, state.tokenValue);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        modifier |= 2;\r\n                        key = parseComputedPropertyName(state, context);\r\n                    }\r\n                    else {\r\n                        report(state, 0);\r\n                    }\r\n                    modifier |= 512;\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    else if (state.token === 131091) {\r\n        modifier |= 2;\r\n        key = parseComputedPropertyName(state, context);\r\n    }\r\n    else if (state.token === 131074 || state.token === 131075) {\r\n        if (state.tokenValue === 'constructor')\r\n            modifier |= 64;\r\n        key = parseLiteral(state, context, state.tokenValue);\r\n    }\r\n    else if (state.token === 21105203) {\r\n        next(state, context);\r\n        tokenValue = state.tokenValue;\r\n        if (state.token & 274432) {\r\n            key = parseIdentifier(state, context);\r\n        }\r\n        else if (state.token === 131074 || state.token === 131075) {\r\n            key = parseLiteral(state, context, state.tokenValue);\r\n        }\r\n        else if (state.token === 131091) {\r\n            modifier |= 2;\r\n            key = parseComputedPropertyName(state, context);\r\n        }\r\n        else {\r\n            report(state, 0);\r\n        }\r\n        modifier |= 8;\r\n    }\r\n    else if (state.token === 536870929) {\r\n        next(state, context);\r\n    }\r\n    else {\r\n        report(state, 1, KeywordDescTable[state.token & 255]);\r\n    }\r\n    if ((modifier & 2) === 0 &&\r\n        modifier & (32 | 768) &&\r\n        state.tokenValue === 'prototype') {\r\n        report(state, 62);\r\n    }\r\n    if (tokenValue === 'constructor') {\r\n        if ((modifier & 32) === 0) {\r\n            if (modifier & (768 | 16 | 8))\r\n                report(state, 63, 'accessor');\r\n            if ((context & 524288) === 0 && (modifier & 2) === 0) {\r\n                if (state.flags & 2048)\r\n                    report(state, 60);\r\n                else\r\n                    state.flags |= 2048;\r\n            }\r\n        }\r\n        modifier |= 64;\r\n    }\r\n    if (state.token !== 131083)\r\n        report(state, 0);\r\n    return {\r\n        type: 'MethodDefinition',\r\n        kind: (modifier & 32) === 0 && modifier & 64\r\n            ? 'constructor'\r\n            : modifier & 256\r\n                ? 'get'\r\n                : modifier & 512\r\n                    ? 'set'\r\n                    : 'method',\r\n        static: (modifier & 32) !== 0,\r\n        computed: (modifier & 2) !== 0,\r\n        key,\r\n        value: parseMethodDeclaration(state, context, modifier)\r\n    };\r\n}\r\nfunction parseObjectLiteral(state, context, scope, type) {\r\n    next(state, context);\r\n    let key = null;\r\n    let token = state.token;\r\n    let tokenValue = state.tokenValue;\r\n    let value;\r\n    let hasProto = false;\r\n    const properties = [];\r\n    let objState = 0;\r\n    const { assignable, bindable, pendingCoverInitializeError } = state;\r\n    state.bindable = true;\r\n    state.assignable = true;\r\n    state.pendingCoverInitializeError = null;\r\n    while (state.token !== 536870927) {\r\n        if (state.token === 14) {\r\n            properties.push(parseSpreadElement(state, context));\r\n        }\r\n        else {\r\n            if (state.token & 274432) {\r\n                token = state.token;\r\n                tokenValue = state.tokenValue;\r\n                objState = 0;\r\n                key = parseIdentifier(state, context);\r\n                const newLine = (state.flags & 1) > 0;\r\n                if (state.token === 18 ||\r\n                    state.token === 536870927 ||\r\n                    state.token === 8388637) {\r\n                    objState |= 4;\r\n                    if (tokenValue !== 'eval' || tokenValue !== 'arguments')\r\n                        validateBindingIdentifier(state, context, type, token);\r\n                    addVariable(state, context, scope, type, 0, false, false, tokenValue);\r\n                    if (state.token === 8388637) {\r\n                        state.pendingCoverInitializeError = 87;\r\n                        expect(state, context, 8388637);\r\n                        value = parseAssignmentPattern(state, context, key);\r\n                    }\r\n                    else {\r\n                        value = key;\r\n                    }\r\n                }\r\n                else if (optional(state, context | 32768, 21)) {\r\n                    if (tokenValue === '__proto__') {\r\n                        if (hasProto) {\r\n                            state.pendingCoverInitializeError = 87;\r\n                        }\r\n                        else\r\n                            hasProto = true;\r\n                    }\r\n                    if ((state.token & 274432) > 0)\r\n                        addVariable(state, context, scope, type, 0, false, false, tokenValue);\r\n                    value = acquireGrammar(state, context, 0, parseAssignmentExpression);\r\n                }\r\n                else if (state.token === 131091) {\r\n                    key = parseComputedPropertyName(state, context);\r\n                    if (token === 1060972) {\r\n                        if (newLine)\r\n                            report(state, 0);\r\n                        objState |= 16 | 2 | 1;\r\n                    }\r\n                    else {\r\n                        if (token === 12399)\r\n                            objState = (objState & ~512) | 256;\r\n                        else if ((token & 12400) === 12400)\r\n                            objState = (objState & ~256) | 512;\r\n                        objState |= 2 & ~1;\r\n                    }\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else if (state.token === 131083) {\r\n                    objState = objState | (1 & ~(16 | 8));\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n                else {\r\n                    if (optional(state, context, 21105203))\r\n                        objState |= 8;\r\n                    if ((state.token & 274432) > 0) {\r\n                        key = parseIdentifier(state, context);\r\n                        if (state.token !== 131083)\r\n                            report(state, 0);\r\n                        if (token === 1060972) {\r\n                            if (newLine)\r\n                                report(state, 0);\r\n                            objState |= 16 | 1;\r\n                        }\r\n                        else if (token === 12399) {\r\n                            objState = (objState & ~512) | 256;\r\n                        }\r\n                        else if (token === 12400) {\r\n                            objState = (objState & ~256) | 512;\r\n                        }\r\n                        state.bindable = state.assignable = false;\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                    else if (state.token === 131074 || state.token === 131075) {\r\n                        key = parseLiteral(state, context, state.tokenValue);\r\n                        if (state.token !== 131083)\r\n                            report(state, 0);\r\n                        if (token === 1060972) {\r\n                            if (newLine)\r\n                                report(state, 0);\r\n                            objState |= 16 | 1;\r\n                        }\r\n                        else if (token === 12399) {\r\n                            objState = (objState & ~512) | 256;\r\n                        }\r\n                        else if (token === 12400) {\r\n                            objState = (objState & ~256) | 512;\r\n                        }\r\n                        state.bindable = state.assignable = false;\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                    else if (state.token === 131091) {\r\n                        if (token === 1060972) {\r\n                            if (newLine)\r\n                                report(state, 0);\r\n                            objState |= 16 | 1;\r\n                        }\r\n                        else if (token === 12399) {\r\n                            objState = (objState & ~512) | 256;\r\n                        }\r\n                        else if (token === 12400) {\r\n                            objState = (objState & ~256) | 512;\r\n                        }\r\n                        key = parseComputedPropertyName(state, context);\r\n                        value = parseMethodDeclaration(state, context, objState);\r\n                    }\r\n                }\r\n            }\r\n            else if (state.token === 131074 || state.token === 131075) {\r\n                tokenValue = state.tokenValue;\r\n                key = parseLiteral(state, context, tokenValue);\r\n                if (state.token === 8388637)\r\n                    report(state, 0);\r\n                if (optional(state, context | 32768, 21)) {\r\n                    if (tokenValue === '__proto__') {\r\n                        if (hasProto) {\r\n                            state.pendingCoverInitializeError = 87;\r\n                        }\r\n                        else\r\n                            hasProto = true;\r\n                    }\r\n                    value = acquireGrammar(state, context, 0, parseAssignmentExpression);\r\n                    addVariable(state, context, scope, type, 0, false, false, tokenValue);\r\n                }\r\n                else {\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                    objState |= 1;\r\n                }\r\n            }\r\n            else if (state.token === 131091) {\r\n                key = parseComputedPropertyName(state, context);\r\n                objState = (objState & ~(16 | 8 | 768)) | 2;\r\n                if (state.token === 21) {\r\n                    next(state, context);\r\n                    value = parseAssignmentExpression(state, context | 32768);\r\n                }\r\n                else {\r\n                    objState |= 1;\r\n                    if (state.token !== 131083)\r\n                        report(state, 0);\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState);\r\n                }\r\n            }\r\n            else if (state.token & 21105203) {\r\n                next(state, context);\r\n                if (state.token & 274432) {\r\n                    token = state.token;\r\n                    objState &= ~(1 | 16);\r\n                    key = parseIdentifier(state, context);\r\n                    if (state.token === 131083) {\r\n                        state.bindable = state.assignable = false;\r\n                        value = parseMethodDeclaration(state, context, objState | 8);\r\n                        objState |= 1 | 8;\r\n                    }\r\n                    else {\r\n                        if (token === 1060972)\r\n                            report(state, 0);\r\n                        if (token === 12399 || (token & 12400) === 12400)\r\n                            report(state, 0);\r\n                        if (token === 21)\r\n                            report(state, 0);\r\n                        report(state, 0);\r\n                    }\r\n                }\r\n                else if (state.token === 131074 || state.token === 131075) {\r\n                    key = parseLiteral(state, context, state.tokenValue);\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState | 8);\r\n                    objState |= 1;\r\n                }\r\n                else if (state.token === 131091) {\r\n                    key = parseComputedPropertyName(state, context);\r\n                    state.bindable = state.assignable = false;\r\n                    value = parseMethodDeclaration(state, context, objState | 8);\r\n                    objState |= 1 | 2;\r\n                }\r\n                else {\r\n                    report(state, 1, KeywordDescTable[state.token & 255]);\r\n                }\r\n            }\r\n            else {\r\n                report(state, 1, KeywordDescTable[state.token & 255]);\r\n            }\r\n            properties.push({\r\n                type: 'Property',\r\n                key,\r\n                value,\r\n                kind: !(objState & 768) ? 'init' : objState & 512 ? 'set' : 'get',\r\n                computed: (objState & 2) > 0,\r\n                method: (objState & 1) > 0,\r\n                shorthand: (objState & 4) > 0\r\n            });\r\n        }\r\n        optional(state, context, 18);\r\n    }\r\n    expect(state, context, 536870927);\r\n    state.flags &= ~32;\r\n    state.bindable = state.bindable && bindable;\r\n    state.assignable = state.assignable && assignable;\r\n    state.pendingCoverInitializeError = pendingCoverInitializeError || state.pendingCoverInitializeError;\r\n    return {\r\n        type: 'ObjectExpression',\r\n        properties\r\n    };\r\n}\r\nfunction parseMethodDeclaration(state, context, objState) {\r\n    state.assignable = state.bindable = false;\r\n    const { assignable, bindable, pendingCoverInitializeError } = state;\r\n    state.bindable = state.assignable = true;\r\n    state.pendingCoverInitializeError = null;\r\n    const result = parsePropertyMethod(state, context | 33554432, objState);\r\n    if (state.pendingCoverInitializeError !== null) {\r\n        report(state, 0);\r\n    }\r\n    state.bindable = bindable;\r\n    state.assignable = assignable;\r\n    state.pendingCoverInitializeError = pendingCoverInitializeError;\r\n    return result;\r\n}\r\nfunction parsePropertyMethod(state, context, objState) {\r\n    let functionScope = createScope(1);\r\n    let id = null;\r\n    let firstRestricted;\r\n    if (state.token & 274432) {\r\n        validateBindingIdentifier(state, context & 1024\r\n            ? 2097152\r\n            : (objState & 8) > 0\r\n                ? 2097152\r\n                : 0 | (context & 2048) || (objState & 8) > 0\r\n                    ? 4194304\r\n                    : 0, 2);\r\n        addVariableAndDeduplicate(state, context, functionScope, 2, 0, true, state.tokenValue);\r\n        functionScope = createSubScope(functionScope, 1);\r\n        firstRestricted = state.tokenValue;\r\n        id = parseIdentifier(state, context);\r\n    }\r\n    context =\r\n        (context |\r\n            262144 |\r\n            4194304 |\r\n            2097152 |\r\n            8388608 |\r\n            ((objState & 64) === 0 ? 16777216 | 524288 : 0)) ^\r\n            (4194304 |\r\n                2097152 |\r\n                8388608 |\r\n                ((objState & 64) < 1 ? 16777216 | 524288 : 0));\r\n    if (objState & 16)\r\n        context |= 4194304;\r\n    if (objState & 8)\r\n        context |= 2097152;\r\n    if (objState & 64)\r\n        context |= 16777216;\r\n    const paramScoop = createSubScope(functionScope, 5);\r\n    const params = parseFormalParameters(state, context | 67108864 | 33554432 | 8388608, paramScoop, 32, objState);\r\n    const body = parseFunctionBody(state, context | 67108864 | 33554432, createSubScope(paramScoop, 1), firstRestricted, 0);\r\n    return {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: (objState & 16) > 0,\r\n        generator: (objState & 8) > 0,\r\n        id\r\n    };\r\n}\r\nexport function parseLiteral(state, context, value) {\r\n    const { tokenRaw: raw } = state;\r\n    if (context & 1024 && state.flags & 8)\r\n        report(state, 93);\r\n    next(state, context);\r\n    return context & 8\r\n        ? {\r\n            type: 'Literal',\r\n            value,\r\n            raw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value\r\n        };\r\n}\r\nfunction parseThisExpression(state, context) {\r\n    next(state, context);\r\n    return {\r\n        type: 'ThisExpression'\r\n    };\r\n}\r\nexport function parseIdentifier(state, context) {\r\n    const { tokenRaw: raw, tokenValue: name } = state;\r\n    next(state, context);\r\n    return context & 8\r\n        ? {\r\n            type: 'Identifier',\r\n            name,\r\n            raw\r\n        }\r\n        : {\r\n            type: 'Identifier',\r\n            name\r\n        };\r\n}\r\nfunction parseRegularExpressionLiteral(state, context) {\r\n    const { tokenRegExp: regex, tokenValue: value } = state;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value,\r\n        regex\r\n    };\r\n}\r\nexport function parseBigIntLiteral(state, context) {\r\n    const { tokenRaw: raw, tokenValue: value } = state;\r\n    next(state, context);\r\n    return {\r\n        type: 'Literal',\r\n        value,\r\n        bigint: raw,\r\n        raw\r\n    };\r\n}\r\n//# sourceMappingURL=state.js.map","map":"{\"version\":3,\"file\":\"state.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/state.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"D:/cherow_gh/cherow1/state.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"state.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/state.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"D:/cherow_gh/cherow1/state.d.ts","writeByteOrderMark":false,"text":"import * as ESTree from './estree';\r\nimport { Context, LabelledState, OnComment, OnToken, ParserState, Type, Origin, ScopeState, Modifiers } from './common';\r\nexport declare function create(source: string, onComment: OnComment | void, onToken: OnToken | void): ParserState;\r\nexport declare function parseModuleItem(state: ParserState, context: Context, scope: ScopeState): ESTree.Statement[];\r\nexport declare function parseStatementList(state: ParserState, context: Context, scope: ScopeState): ESTree.Statement[];\r\nexport declare function parseDirective(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseImportDeclaration(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseBlockStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.BlockStatement;\r\nexport declare function parseEmptyStatement(state: ParserState, context: Context): ESTree.EmptyStatement;\r\nexport declare function parseThrowStatement(state: ParserState, context: Context): ESTree.ThrowStatement;\r\nexport declare function parseIfStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.IfStatement;\r\nexport declare function parseReturnStatement(state: ParserState, context: Context): ESTree.ReturnStatement;\r\nexport declare function parseWhileStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.WhileStatement;\r\nexport declare function parseContinueStatement(state: ParserState, context: Context): ESTree.ContinueStatement;\r\nexport declare function parseBreakStatement(state: ParserState, context: Context): ESTree.BreakStatement;\r\nexport declare function parseWithStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.WithStatement;\r\nexport declare function parseDebuggerStatement(state: ParserState, context: Context): ESTree.DebuggerStatement;\r\nexport declare function parseTryStatement(state: ParserState, context: Context, scope: ScopeState): ESTree.TryStatement;\r\nexport declare function parseCatchBlock(state: ParserState, context: Context, scope: ScopeState): ESTree.CatchClause;\r\nexport declare function parseDoWhileStatement(state: ParserState, context: Context, scope: ScopeState): any;\r\nexport declare function parseCaseOrDefaultClauses(state: ParserState, context: Context, test: ESTree.Expression | null, scope: ScopeState): ESTree.SwitchCase;\r\nexport declare function parseExpressionOrLabelledStatement(state: ParserState, context: Context, scope: ScopeState, label: LabelledState): any;\r\nexport declare function parseBindingIdentifierOrPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.Pattern;\r\nexport declare function parseBindingIdentifier(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, checkForDuplicates: boolean): ESTree.Identifier;\r\nexport declare function parseAssignmentRestElement(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): any;\r\nexport declare function parseArrayAssignmentPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.ArrayPattern;\r\nexport declare function parserObjectAssignmentPattern(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.ObjectPattern;\r\nexport declare function parseAssignmentPattern(state: ParserState, context: Context, left: ESTree.Pattern): any;\r\nexport declare function parseBindingInitializer(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin, verifyDuplicates: boolean): ESTree.Identifier | ESTree.ObjectPattern | ESTree.ArrayPattern | ESTree.MemberExpression | ESTree.AssignmentPattern;\r\nexport declare function parseComputedPropertyName(state: ParserState, context: Context): ESTree.Expression;\r\nexport declare function parseFunctionDeclaration(state: ParserState, context: Context, scope: ScopeState, origin: Origin, isAsync: boolean): {\r\n    type: string;\r\n    params: any;\r\n    body: ESTree.BlockStatement;\r\n    async: boolean;\r\n    generator: boolean;\r\n    id: ESTree.Identifier | null;\r\n};\r\nexport declare function parseHoistableFunctionDeclaration(state: ParserState, context: Context, scope: ScopeState, isNotDefault: boolean, isAsync: boolean): {\r\n    type: string;\r\n    params: any;\r\n    body: ESTree.BlockStatement;\r\n    async: boolean;\r\n    generator: boolean;\r\n    id: ESTree.Identifier | null;\r\n};\r\nexport declare function parseFormalParameters(state: ParserState, context: Context, scope: ScopeState, origin: Origin, objState: Modifiers): any;\r\nexport declare function parseRestElement(state: ParserState, context: Context, scope: ScopeState, type: Type, origin: Origin): any;\r\nexport declare function parseFunctionBody(state: ParserState, context: Context, scope: ScopeState, firstRestricted: string | undefined, origin: Origin): ESTree.BlockStatement;\r\nexport declare function parseVariableStatement(state: ParserState, context: Context, type: Type, origin: Origin, scope: ScopeState): ESTree.VariableDeclaration;\r\nexport declare function parseLexicalDeclaration(state: ParserState, context: Context, type: Type, origin: Origin, scope: ScopeState): ESTree.VariableDeclaration;\r\nexport declare function parseVariableDeclarationList(state: ParserState, context: Context, type: Type, origin: Origin, checkForDuplicates: boolean, scope: ScopeState): any;\r\nexport declare function isInOrOf(state: ParserState): boolean;\r\nexport declare function parseExpression(state: ParserState, context: Context): any;\r\nexport declare function parseSequenceExpression(state: ParserState, context: Context, left: ESTree.Expression): ESTree.SequenceExpression;\r\nexport declare function parseLeftHandSideExpression(state: ParserState, context: Context): any;\r\nexport declare function parseMetaProperty(state: ParserState, context: Context, id: ESTree.Identifier): any;\r\nexport declare function parsePrimaryExpression(state: ParserState, context: Context): any;\r\nexport declare function parseArrayLiteral(state: ParserState, context: Context): ESTree.ArrayExpression;\r\nexport declare function parseParenthesizedExpression(state: ParserState, context: Context): any;\r\nexport declare function parseClassBodyAndElementList(state: ParserState, context: Context, origin: Origin): ESTree.ClassBody;\r\nexport declare function parseLiteral(state: ParserState, context: Context, value: string | boolean | null): ESTree.Literal;\r\nexport declare function parseIdentifier(state: ParserState, context: Context): ESTree.Identifier;\r\nexport declare function parseBigIntLiteral(state: ParserState, context: Context): ESTree.BigIntLiteral;\r\n//# sourceMappingURL=state.d.ts.map"}}
