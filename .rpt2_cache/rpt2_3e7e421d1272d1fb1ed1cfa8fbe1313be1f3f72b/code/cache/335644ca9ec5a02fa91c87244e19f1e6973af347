{"map":"{\"version\":3,\"file\":\"comments.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/scanner/comments.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { report } from '../errors';\r\nimport { consumeOpt, consumeLineFeed, consumeAny } from './common';\r\nexport const CommentTypes = ['SingleLine', 'MultiLine', 'HTMLOpen', 'HTMLClose', 'HashbangComment'];\r\nexport function skipHashBang(state, context) {\r\n    let index = state.index;\r\n    if (index === state.source.length)\r\n        return;\r\n    if (state.source.charCodeAt(index) === 65519) {\r\n        index++;\r\n        state.index = index;\r\n    }\r\n    if (context & 1 && index < state.source.length && state.source.charCodeAt(index) === 35) {\r\n        index++;\r\n        if (index < state.source.length && state.source.charCodeAt(index) === 33) {\r\n            state.index = index + 1;\r\n            skipSingleLineComment(state, 4);\r\n        }\r\n        else {\r\n            report(state, 0);\r\n        }\r\n    }\r\n}\r\nexport function skipSingleHTMLComment(state, context, type) {\r\n    if (context & 2048)\r\n        report(state, 28);\r\n    return skipSingleLineComment(state, type);\r\n}\r\nexport function skipSingleLineComment(state, type) {\r\n    const { index: start } = state;\r\n    loop: while (state.index < state.length) {\r\n        switch (state.source.charCodeAt(state.index)) {\r\n            case 13:\r\n                state.index++;\r\n                state.column = 0;\r\n                state.line++;\r\n                if (state.index < state.length && state.source.charCodeAt(state.index) === 10)\r\n                    state.index++;\r\n                state.flags | 1;\r\n                break loop;\r\n            case 10:\r\n            case 8232:\r\n            case 8233:\r\n                state.index++;\r\n                state.column = 0;\r\n                state.line++;\r\n                state.flags | 1;\r\n                break loop;\r\n            default:\r\n                consumeAny(state);\r\n        }\r\n    }\r\n    if (state.onComment)\r\n        state.onComment(CommentTypes[type & 0xff], state.source.slice(start, state.index), start, state.index);\r\n    return 1073741824;\r\n}\r\nexport function skipBlockComment(state) {\r\n    const { index: start } = state;\r\n    while (state.index < state.length) {\r\n        switch (state.source.charCodeAt(state.index)) {\r\n            case 42:\r\n                state.index++;\r\n                state.column++;\r\n                state.flags &= ~2;\r\n                if (consumeOpt(state, 47)) {\r\n                    if (state.onComment)\r\n                        state.onComment(CommentTypes[1 & 0xff], state.source.slice(start, state.index - 2), start, state.index);\r\n                    return 1073741824;\r\n                }\r\n                break;\r\n            case 13:\r\n                state.flags |= 1 | 2;\r\n                state.index++;\r\n                state.column = 0;\r\n                state.line++;\r\n                break;\r\n            case 10:\r\n                consumeLineFeed(state, (state.flags & 2) !== 0);\r\n                state.flags = (state.flags & ~2) | 1;\r\n                break;\r\n            case 8232:\r\n            case 8233:\r\n                state.flags = (state.flags & ~2) | 1;\r\n                state.index++;\r\n                state.column = 0;\r\n                state.line++;\r\n                break;\r\n            default:\r\n                state.flags &= ~2;\r\n                consumeAny(state);\r\n        }\r\n    }\r\n    return report(state, 27);\r\n}\r\n//# sourceMappingURL=comments.js.map","dtsmap":{"name":"D:/cherow_gh/cherow1/scanner/comments.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"comments.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/scanner/comments.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,OAAO,EAAS,MAAM,WAAW,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAIxC,0BAAkB,WAAW;IAC3B,MAAM,IAAA;IACN,KAAK,IAAA;IACL,QAAQ,IAAA;IACR,SAAS,IAAA;IACT,QAAQ,IAAA;CACT;AAED,eAAO,MAAM,YAAY,UAA0E,CAAC;AAGpG,wBAAgB,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,QAiBhE;AAED,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,GAAG,KAAK,CAGpG;AAWD,wBAAgB,qBAAqB,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,GAAG,KAAK,CA2BlF;AAED,wBAAgB,gBAAgB,CAAC,KAAK,EAAE,WAAW,GAAG,KAAK,CA+C1D\"}"},"dts":{"name":"D:/cherow_gh/cherow1/scanner/comments.d.ts","writeByteOrderMark":false,"text":"import { Token } from '../token';\r\nimport { Context } from '../common';\r\nimport { ParserState } from '../common';\r\nexport declare const enum CommentType {\r\n    Single = 0,\r\n    Multi = 1,\r\n    HTMLOpen = 2,\r\n    HTMLClose = 3,\r\n    HashBang = 4\r\n}\r\nexport declare const CommentTypes: string[];\r\nexport declare function skipHashBang(state: ParserState, context: Context): void;\r\nexport declare function skipSingleHTMLComment(state: ParserState, context: Context, type: CommentType): Token;\r\nexport declare function skipSingleLineComment(state: ParserState, type: CommentType): Token;\r\nexport declare function skipBlockComment(state: ParserState): Token;\r\n//# sourceMappingURL=comments.d.ts.map"}}
